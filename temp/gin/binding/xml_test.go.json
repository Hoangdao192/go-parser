{"children":[],"start":160,"end":560,"code":"package binding\n\nimport (\n\t\"testing\"\n\t\"github.com/stretchr/testify/assert\"\n\t\"github.com/stretchr/testify/require\"\n)\n\nfunc TestXMLBindingBindBody(t *testing.T) {\n\tvar s struct {\n\t\tFoo string `xml:\"foo\"`\n\t}\n\txmlBody := `\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n\u003croot\u003e\n   \u003cfoo\u003eFOO\u003c/foo\u003e\n\u003c/root\u003e`\n\terr := xmlBinding{}.BindBody([]byte(xmlBody), \u0026s)\n\trequire.NoError(t, err)\n\tassert.Equal(t, \"FOO\", s.Foo)\n}\n","nodeType":"File","column":0,"line":0,"doc":null,"package":160,"name":{"children":[],"start":168,"end":175,"code":"binding","nodeType":"Identifier","column":0,"line":0,"namePos":168,"name":"binding","object":null},"declarations":[{"children":[],"start":177,"end":276,"code":"import (\n\t\"testing\"\n\t\"github.com/stretchr/testify/assert\"\n\t\"github.com/stretchr/testify/require\"\n)","nodeType":"GenericDeclaration","column":0,"line":0,"doc":null,"tokenPosition":177,"token":75,"lparen":184,"specifications":[{"children":[],"start":187,"end":196,"code":"\"testing\"","nodeType":"ImportSpecification","column":0,"line":0,"doc":null,"name":null,"path":{"children":[],"start":187,"end":196,"code":"\"testing\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":187,"kind":9,"value":"\"testing\""},"comment":null,"endPosition":0},{"children":[],"start":199,"end":235,"code":"\"github.com/stretchr/testify/assert\"","nodeType":"ImportSpecification","column":0,"line":0,"doc":null,"name":null,"path":{"children":[],"start":199,"end":235,"code":"\"github.com/stretchr/testify/assert\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":199,"kind":9,"value":"\"github.com/stretchr/testify/assert\""},"comment":null,"endPosition":0},{"children":[],"start":237,"end":274,"code":"\"github.com/stretchr/testify/require\"","nodeType":"ImportSpecification","column":0,"line":0,"doc":null,"name":null,"path":{"children":[],"start":237,"end":274,"code":"\"github.com/stretchr/testify/require\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":237,"kind":9,"value":"\"github.com/stretchr/testify/require\""},"comment":null,"endPosition":0}],"rparen":275},{"children":[],"start":278,"end":560,"code":"func TestXMLBindingBindBody(t *testing.T) {\n\tvar s struct {\n\t\tFoo string `xml:\"foo\"`\n\t}\n\txmlBody := `\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n\u003croot\u003e\n   \u003cfoo\u003eFOO\u003c/foo\u003e\n\u003c/root\u003e`\n\terr := xmlBinding{}.BindBody([]byte(xmlBody), \u0026s)\n\trequire.NoError(t, err)\n\tassert.Equal(t, \"FOO\", s.Foo)\n}","nodeType":"FunctionDeclaration","column":0,"line":0,"doc":null,"receiver":null,"name":{"children":[],"start":283,"end":305,"code":"TestXMLBindingBindBody","nodeType":"Identifier","column":0,"line":0,"namePos":283,"name":"TestXMLBindingBindBody","object":null},"type":{"children":[],"start":278,"end":319,"code":"func(t *testing.T)","nodeType":"FunctionType","column":0,"line":0,"Function":278,"TypeParams":null,"Params":{"children":[],"start":305,"end":319,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":305,"list":[{"children":[],"start":306,"end":318,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":306,"end":307,"code":"t","nodeType":"Identifier","column":0,"line":0,"namePos":306,"name":"t","object":null}],"type":{"children":[],"start":308,"end":318,"code":"*testing.T","nodeType":"StarExpression","column":0,"line":0,"star":308,"expression":{"children":[],"start":309,"end":318,"code":"testing.T","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":309,"end":316,"code":"testing","nodeType":"Identifier","column":0,"line":0,"namePos":309,"name":"testing","object":null},"sel":{"children":[],"start":317,"end":318,"code":"T","nodeType":"Identifier","column":0,"line":0,"namePos":317,"name":"T","object":null}}},"tag":null,"comment":null}],"closing":318},"Results":null},"body":{"children":[],"start":320,"end":560,"code":"{\n\tvar s struct {\n\t\tFoo string `xml:\"foo\"`\n\t}\n\txmlBody := `\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n\u003croot\u003e\n   \u003cfoo\u003eFOO\u003c/foo\u003e\n\u003c/root\u003e`\n\terr := xmlBinding{}.BindBody([]byte(xmlBody), \u0026s)\n\trequire.NoError(t, err)\n\tassert.Equal(t, \"FOO\", s.Foo)\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":320,"list":[{"children":[],"start":323,"end":365,"code":"var s struct {\n\tFoo string `xml:\"foo\"`\n}","nodeType":"DeclarationStatement","column":0,"line":0,"declaration":{"children":[],"start":323,"end":365,"code":"var s struct {\n\tFoo string `xml:\"foo\"`\n}","nodeType":"GenericDeclaration","column":0,"line":0,"doc":null,"tokenPosition":323,"token":85,"lparen":0,"specifications":[{"children":[],"start":327,"end":365,"code":"s struct {\n\tFoo string `xml:\"foo\"`\n}","nodeType":"ValueSpecification","column":0,"line":0,"doc":null,"names":[{"children":[],"start":327,"end":328,"code":"s","nodeType":"Identifier","column":0,"line":0,"namePos":327,"name":"s","object":null}],"type":{"children":[],"start":329,"end":365,"code":"struct {\n\tFoo string `xml:\"foo\"`\n}","nodeType":"StructType","column":0,"line":0,"struct":329,"fields":{"children":[],"start":336,"end":365,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":336,"list":[{"children":[],"start":340,"end":362,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":340,"end":343,"code":"Foo","nodeType":"Identifier","column":0,"line":0,"namePos":340,"name":"Foo","object":null}],"type":{"children":[],"start":344,"end":350,"code":"string","nodeType":"Identifier","column":0,"line":0,"namePos":344,"name":"string","object":null},"tag":{"children":[],"start":351,"end":362,"code":"`xml:\"foo\"`","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":351,"kind":9,"value":"`xml:\"foo\"`"},"comment":null}],"closing":364},"incomplete":false},"values":[],"comment":null}],"rparen":0}},{"children":[],"start":367,"end":451,"code":"xmlBody := `\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n\u003croot\u003e\n   \u003cfoo\u003eFOO\u003c/foo\u003e\n\u003c/root\u003e`","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":367,"end":374,"code":"xmlBody","nodeType":"Identifier","column":0,"line":0,"namePos":367,"name":"xmlBody","object":null}],"tokenPos":375,"token":47,"rhs":[{"children":[],"start":378,"end":451,"code":"`\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n\u003croot\u003e\n   \u003cfoo\u003eFOO\u003c/foo\u003e\n\u003c/root\u003e`","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":378,"kind":9,"value":"`\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n\u003croot\u003e\n   \u003cfoo\u003eFOO\u003c/foo\u003e\n\u003c/root\u003e`"}]},{"children":[],"start":453,"end":502,"code":"err := xmlBinding{}.BindBody([]byte(xmlBody), \u0026s)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":453,"end":456,"code":"err","nodeType":"Identifier","column":0,"line":0,"namePos":453,"name":"err","object":null}],"tokenPos":457,"token":47,"rhs":[{"children":[],"start":460,"end":502,"code":"xmlBinding{}.BindBody([]byte(xmlBody), \u0026s)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":460,"end":481,"code":"xmlBinding{}.BindBody","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":460,"end":472,"code":"xmlBinding{}","nodeType":"CompositeLiteral","column":0,"line":0,"type":{"children":[],"start":460,"end":470,"code":"xmlBinding","nodeType":"Identifier","column":0,"line":0,"namePos":460,"name":"xmlBinding","object":null},"lbrace":470,"elements":[],"rbrace":471,"incomplete":false},"sel":{"children":[],"start":473,"end":481,"code":"BindBody","nodeType":"Identifier","column":0,"line":0,"namePos":473,"name":"BindBody","object":null}},"lparen":0,"args":[{"children":[],"start":482,"end":497,"code":"[]byte(xmlBody)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":482,"end":488,"code":"[]byte","nodeType":"ArrayType","column":0,"line":0,"leftBracket":482,"length":null,"element":{"children":[],"start":484,"end":488,"code":"byte","nodeType":"Identifier","column":0,"line":0,"namePos":484,"name":"byte","object":null}},"lparen":0,"args":[{"children":[],"start":489,"end":496,"code":"xmlBody","nodeType":"Identifier","column":0,"line":0,"namePos":489,"name":"xmlBody","object":null}],"ellipsis":0,"rparen":0},{"children":[],"start":499,"end":501,"code":"\u0026s","nodeType":"UnaryExpression","column":0,"line":0,"opPos":499,"op":17,"expression":{"children":[],"start":500,"end":501,"code":"s","nodeType":"Identifier","column":0,"line":0,"namePos":500,"name":"s","object":null}}],"ellipsis":0,"rparen":0}]},{"children":[],"start":504,"end":527,"code":"require.NoError(t, err)","nodeType":"ExpressionStatement","column":0,"line":0,"Expression":{"children":[],"start":504,"end":527,"code":"require.NoError(t, err)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":504,"end":519,"code":"require.NoError","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":504,"end":511,"code":"require","nodeType":"Identifier","column":0,"line":0,"namePos":504,"name":"require","object":null},"sel":{"children":[],"start":512,"end":519,"code":"NoError","nodeType":"Identifier","column":0,"line":0,"namePos":512,"name":"NoError","object":null}},"lparen":0,"args":[{"children":[],"start":520,"end":521,"code":"t","nodeType":"Identifier","column":0,"line":0,"namePos":520,"name":"t","object":null},{"children":[],"start":523,"end":526,"code":"err","nodeType":"Identifier","column":0,"line":0,"namePos":523,"name":"err","object":null}],"ellipsis":0,"rparen":0}},{"children":[],"start":529,"end":558,"code":"assert.Equal(t, \"FOO\", s.Foo)","nodeType":"ExpressionStatement","column":0,"line":0,"Expression":{"children":[],"start":529,"end":558,"code":"assert.Equal(t, \"FOO\", s.Foo)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":529,"end":541,"code":"assert.Equal","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":529,"end":535,"code":"assert","nodeType":"Identifier","column":0,"line":0,"namePos":529,"name":"assert","object":null},"sel":{"children":[],"start":536,"end":541,"code":"Equal","nodeType":"Identifier","column":0,"line":0,"namePos":536,"name":"Equal","object":null}},"lparen":0,"args":[{"children":[],"start":542,"end":543,"code":"t","nodeType":"Identifier","column":0,"line":0,"namePos":542,"name":"t","object":null},{"children":[],"start":545,"end":550,"code":"\"FOO\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":545,"kind":9,"value":"\"FOO\""},{"children":[],"start":552,"end":557,"code":"s.Foo","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":552,"end":553,"code":"s","nodeType":"Identifier","column":0,"line":0,"namePos":552,"name":"s","object":null},"sel":{"children":[],"start":554,"end":557,"code":"Foo","nodeType":"Identifier","column":0,"line":0,"namePos":554,"name":"Foo","object":null}}],"ellipsis":0,"rparen":0}}],"rbrace":559}}],"fileStart":1,"fileEnd":561,"scope":{"outer":null,"objects":null},"imports":[],"unresolved":[],"comments":[],"goVersion":""}