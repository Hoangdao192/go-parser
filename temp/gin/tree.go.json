{"children":[],"start":207,"end":22795,"code":"package gin\n\nimport (\n\t\"bytes\"\n\t\"net/url\"\n\t\"strings\"\n\t\"unicode\"\n\t\"unicode/utf8\"\n\t\"github.com/gin-gonic/gin/internal/bytesconv\"\n)\n\nvar (\n\tstrColon\t= []byte(\":\")\n\tstrStar\t\t= []byte(\"*\")\n\tstrSlash\t= []byte(\"/\")\n)\n\ntype Param struct {\n\tKey\tstring\n\tValue\tstring\n}\ntype Params []Param\n\nfunc (ps Params) Get(name string) (string, bool) {\n\tfor _, entry := range ps {\n\t\tif entry.Key == name {\n\t\t\treturn entry.Value, true\n\t\t}\n\t}\n\treturn \"\", false\n}\nfunc (ps Params) ByName(name string) (va string) {\n\tva, _ = ps.Get(name)\n\treturn\n}\n\ntype methodTree struct {\n\tmethod\tstring\n\troot\t*node\n}\ntype methodTrees []methodTree\n\nfunc (trees methodTrees) get(method string) *node {\n\tfor _, tree := range trees {\n\t\tif tree.method == method {\n\t\t\treturn tree.root\n\t\t}\n\t}\n\treturn nil\n}\nfunc min(a, b int) int {\n\tif a \u003c= b {\n\t\treturn a\n\t}\n\treturn b\n}\nfunc longestCommonPrefix(a, b string) int {\n\ti := 0\n\tmax := min(len(a), len(b))\n\tfor i \u003c max \u0026\u0026 a[i] == b[i] {\n\t\ti++\n\t}\n\treturn i\n}\nfunc (n *node) addChild(child *node) {\n\tif n.wildChild \u0026\u0026 len(n.children) \u003e 0 {\n\t\twildcardChild := n.children[len(n.children)-1]\n\t\tn.children = append(n.children[:len(n.children)-1], child, wildcardChild)\n\t} else {\n\t\tn.children = append(n.children, child)\n\t}\n}\nfunc countParams(path string) uint16 {\n\tvar n uint16\n\ts := bytesconv.StringToBytes(path)\n\tn += uint16(bytes.Count(s, strColon))\n\tn += uint16(bytes.Count(s, strStar))\n\treturn n\n}\nfunc countSections(path string) uint16 {\n\ts := bytesconv.StringToBytes(path)\n\treturn uint16(bytes.Count(s, strSlash))\n}\n\ntype nodeType uint8\n\nconst (\n\tstatic\tnodeType\t= iota\n\troot\n\tparam\n\tcatchAll\n)\n\ntype node struct {\n\tpath\t\tstring\n\tindices\t\tstring\n\twildChild\tbool\n\tnType\t\tnodeType\n\tpriority\tuint32\n\tchildren\t[]*node\n\thandlers\tHandlersChain\n\tfullPath\tstring\n}\n\nfunc (n *node) incrementChildPrio(pos int) int {\n\tcs := n.children\n\tcs[pos].priority++\n\tprio := cs[pos].priority\n\tnewPos := pos\n\tfor ; newPos \u003e 0 \u0026\u0026 cs[newPos-1].priority \u003c prio; newPos-- {\n\t\tcs[newPos-1], cs[newPos] = cs[newPos], cs[newPos-1]\n\t}\n\tif newPos != pos {\n\t\tn.indices = n.indices[:newPos] + n.indices[pos:pos+1] + n.indices[newPos:pos] + n.indices[pos+1:]\n\t}\n\treturn newPos\n}\nfunc (n *node) addRoute(path string, handlers HandlersChain) {\n\tfullPath := path\n\tn.priority++\n\tif len(n.path) == 0 \u0026\u0026 len(n.children) == 0 {\n\t\tn.insertChild(path, fullPath, handlers)\n\t\tn.nType = root\n\t\treturn\n\t}\n\tparentFullPathIndex := 0\nwalk:\n\tfor {\n\t\ti := longestCommonPrefix(path, n.path)\n\t\tif i \u003c len(n.path) {\n\t\t\tchild := node{path: n.path[i:], wildChild: n.wildChild, nType: static, indices: n.indices, children: n.children, handlers: n.handlers, priority: n.priority - 1, fullPath: n.fullPath}\n\t\t\tn.children = []*node{\u0026child}\n\t\t\tn.indices = bytesconv.BytesToString([]byte{n.path[i]})\n\t\t\tn.path = path[:i]\n\t\t\tn.handlers = nil\n\t\t\tn.wildChild = false\n\t\t\tn.fullPath = fullPath[:parentFullPathIndex+i]\n\t\t}\n\t\tif i \u003c len(path) {\n\t\t\tpath = path[i:]\n\t\t\tc := path[0]\n\t\t\tif n.nType == param \u0026\u0026 c == '/' \u0026\u0026 len(n.children) == 1 {\n\t\t\t\tparentFullPathIndex += len(n.path)\n\t\t\t\tn = n.children[0]\n\t\t\t\tn.priority++\n\t\t\t\tcontinue walk\n\t\t\t}\n\t\t\tfor i, max := 0, len(n.indices); i \u003c max; i++ {\n\t\t\t\tif c == n.indices[i] {\n\t\t\t\t\tparentFullPathIndex += len(n.path)\n\t\t\t\t\ti = n.incrementChildPrio(i)\n\t\t\t\t\tn = n.children[i]\n\t\t\t\t\tcontinue walk\n\t\t\t\t}\n\t\t\t}\n\t\t\tif c != ':' \u0026\u0026 c != '*' \u0026\u0026 n.nType != catchAll {\n\t\t\t\tn.indices += bytesconv.BytesToString([]byte{c})\n\t\t\t\tchild := \u0026node{fullPath: fullPath}\n\t\t\t\tn.addChild(child)\n\t\t\t\tn.incrementChildPrio(len(n.indices) - 1)\n\t\t\t\tn = child\n\t\t\t} else if n.wildChild {\n\t\t\t\tn = n.children[len(n.children)-1]\n\t\t\t\tn.priority++\n\t\t\t\tif len(path) \u003e= len(n.path) \u0026\u0026 n.path == path[:len(n.path)] \u0026\u0026 n.nType != catchAll \u0026\u0026 (len(n.path) \u003e= len(path) || path[len(n.path)] == '/') {\n\t\t\t\t\tcontinue walk\n\t\t\t\t}\n\t\t\t\tpathSeg := path\n\t\t\t\tif n.nType != catchAll {\n\t\t\t\t\tpathSeg = strings.SplitN(pathSeg, \"/\", 2)[0]\n\t\t\t\t}\n\t\t\t\tprefix := fullPath[:strings.Index(fullPath, pathSeg)] + n.path\n\t\t\t\tpanic(\"'\" + pathSeg + \"' in new path '\" + fullPath + \"' conflicts with existing wildcard '\" + n.path + \"' in existing prefix '\" + prefix + \"'\")\n\t\t\t}\n\t\t\tn.insertChild(path, fullPath, handlers)\n\t\t\treturn\n\t\t}\n\t\tif n.handlers != nil {\n\t\t\tpanic(\"handlers are already registered for path '\" + fullPath + \"'\")\n\t\t}\n\t\tn.handlers = handlers\n\t\tn.fullPath = fullPath\n\t\treturn\n\t}\n}\nfunc findWildcard(path string) (wildcard string, i int, valid bool) {\n\tfor start, c := range []byte(path) {\n\t\tif c != ':' \u0026\u0026 c != '*' {\n\t\t\tcontinue\n\t\t}\n\t\tvalid = true\n\t\tfor end, c := range []byte(path[start+1:]) {\n\t\t\tswitch c {\n\t\t\tcase '/':\n\t\t\t\treturn path[start : start+1+end], start, valid\n\t\t\tcase ':', '*':\n\t\t\t\tvalid = false\n\t\t\t}\n\t\t}\n\t\treturn path[start:], start, valid\n\t}\n\treturn \"\", -1, false\n}\nfunc (n *node) insertChild(path string, fullPath string, handlers HandlersChain) {\n\tfor {\n\t\twildcard, i, valid := findWildcard(path)\n\t\tif i \u003c 0 {\n\t\t\tbreak\n\t\t}\n\t\tif !valid {\n\t\t\tpanic(\"only one wildcard per path segment is allowed, has: '\" + wildcard + \"' in path '\" + fullPath + \"'\")\n\t\t}\n\t\tif len(wildcard) \u003c 2 {\n\t\t\tpanic(\"wildcards must be named with a non-empty name in path '\" + fullPath + \"'\")\n\t\t}\n\t\tif wildcard[0] == ':' {\n\t\t\tif i \u003e 0 {\n\t\t\t\tn.path = path[:i]\n\t\t\t\tpath = path[i:]\n\t\t\t}\n\t\t\tchild := \u0026node{nType: param, path: wildcard, fullPath: fullPath}\n\t\t\tn.addChild(child)\n\t\t\tn.wildChild = true\n\t\t\tn = child\n\t\t\tn.priority++\n\t\t\tif len(wildcard) \u003c len(path) {\n\t\t\t\tpath = path[len(wildcard):]\n\t\t\t\tchild := \u0026node{priority: 1, fullPath: fullPath}\n\t\t\t\tn.addChild(child)\n\t\t\t\tn = child\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tn.handlers = handlers\n\t\t\treturn\n\t\t}\n\t\tif i+len(wildcard) != len(path) {\n\t\t\tpanic(\"catch-all routes are only allowed at the end of the path in path '\" + fullPath + \"'\")\n\t\t}\n\t\tif len(n.path) \u003e 0 \u0026\u0026 n.path[len(n.path)-1] == '/' {\n\t\t\tpathSeg := strings.SplitN(n.children[0].path, \"/\", 2)[0]\n\t\t\tpanic(\"catch-all wildcard '\" + path + \"' in new path '\" + fullPath + \"' conflicts with existing path segment '\" + pathSeg + \"' in existing prefix '\" + n.path + pathSeg + \"'\")\n\t\t}\n\t\ti--\n\t\tif path[i] != '/' {\n\t\t\tpanic(\"no / before catch-all in path '\" + fullPath + \"'\")\n\t\t}\n\t\tn.path = path[:i]\n\t\tchild := \u0026node{wildChild: true, nType: catchAll, fullPath: fullPath}\n\t\tn.addChild(child)\n\t\tn.indices = string('/')\n\t\tn = child\n\t\tn.priority++\n\t\tchild = \u0026node{path: path[i:], nType: catchAll, handlers: handlers, priority: 1, fullPath: fullPath}\n\t\tn.children = []*node{child}\n\t\treturn\n\t}\n\tn.path = path\n\tn.handlers = handlers\n\tn.fullPath = fullPath\n}\n\ntype nodeValue struct {\n\thandlers\tHandlersChain\n\tparams\t\t*Params\n\ttsr\t\tbool\n\tfullPath\tstring\n}\ntype skippedNode struct {\n\tpath\t\tstring\n\tnode\t\t*node\n\tparamsCount\tint16\n}\n\nfunc (n *node) getValue(path string, params *Params, skippedNodes *[]skippedNode, unescape bool) (value nodeValue) {\n\tvar globalParamsCount int16\nwalk:\n\tfor {\n\t\tprefix := n.path\n\t\tif len(path) \u003e len(prefix) {\n\t\t\tif path[:len(prefix)] == prefix {\n\t\t\t\tpath = path[len(prefix):]\n\t\t\t\tidxc := path[0]\n\t\t\t\tfor i, c := range []byte(n.indices) {\n\t\t\t\t\tif c == idxc {\n\t\t\t\t\t\tif n.wildChild {\n\t\t\t\t\t\t\tindex := len(*skippedNodes)\n\t\t\t\t\t\t\t*skippedNodes = (*skippedNodes)[:index+1]\n\t\t\t\t\t\t\t(*skippedNodes)[index] = skippedNode{path: prefix + path, node: \u0026node{path: n.path, wildChild: n.wildChild, nType: n.nType, priority: n.priority, children: n.children, handlers: n.handlers, fullPath: n.fullPath}, paramsCount: globalParamsCount}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tn = n.children[i]\n\t\t\t\t\t\tcontinue walk\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif !n.wildChild {\n\t\t\t\t\tif path != \"/\" {\n\t\t\t\t\t\tfor length := len(*skippedNodes); length \u003e 0; length-- {\n\t\t\t\t\t\t\tskippedNode := (*skippedNodes)[length-1]\n\t\t\t\t\t\t\t*skippedNodes = (*skippedNodes)[:length-1]\n\t\t\t\t\t\t\tif strings.HasSuffix(skippedNode.path, path) {\n\t\t\t\t\t\t\t\tpath = skippedNode.path\n\t\t\t\t\t\t\t\tn = skippedNode.node\n\t\t\t\t\t\t\t\tif value.params != nil {\n\t\t\t\t\t\t\t\t\t*value.params = (*value.params)[:skippedNode.paramsCount]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tglobalParamsCount = skippedNode.paramsCount\n\t\t\t\t\t\t\t\tcontinue walk\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tvalue.tsr = path == \"/\" \u0026\u0026 n.handlers != nil\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tn = n.children[len(n.children)-1]\n\t\t\t\tglobalParamsCount++\n\t\t\t\tswitch n.nType {\n\t\t\t\tcase param:\n\t\t\t\t\tend := 0\n\t\t\t\t\tfor end \u003c len(path) \u0026\u0026 path[end] != '/' {\n\t\t\t\t\t\tend++\n\t\t\t\t\t}\n\t\t\t\t\tif params != nil {\n\t\t\t\t\t\tif cap(*params) \u003c int(globalParamsCount) {\n\t\t\t\t\t\t\tnewParams := make(Params, len(*params), globalParamsCount)\n\t\t\t\t\t\t\tcopy(newParams, *params)\n\t\t\t\t\t\t\t*params = newParams\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif value.params == nil {\n\t\t\t\t\t\t\tvalue.params = params\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti := len(*value.params)\n\t\t\t\t\t\t*value.params = (*value.params)[:i+1]\n\t\t\t\t\t\tval := path[:end]\n\t\t\t\t\t\tif unescape {\n\t\t\t\t\t\t\tif v, err := url.QueryUnescape(val); err == nil {\n\t\t\t\t\t\t\t\tval = v\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t(*value.params)[i] = Param{Key: n.path[1:], Value: val}\n\t\t\t\t\t}\n\t\t\t\t\tif end \u003c len(path) {\n\t\t\t\t\t\tif len(n.children) \u003e 0 {\n\t\t\t\t\t\t\tpath = path[end:]\n\t\t\t\t\t\t\tn = n.children[0]\n\t\t\t\t\t\t\tcontinue walk\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalue.tsr = len(path) == end+1\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tif value.handlers = n.handlers; value.handlers != nil {\n\t\t\t\t\t\tvalue.fullPath = n.fullPath\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tif len(n.children) == 1 {\n\t\t\t\t\t\tn = n.children[0]\n\t\t\t\t\t\tvalue.tsr = (n.path == \"/\" \u0026\u0026 n.handlers != nil) || (n.path == \"\" \u0026\u0026 n.indices == \"/\")\n\t\t\t\t\t}\n\t\t\t\t\treturn\n\t\t\t\tcase catchAll:\n\t\t\t\t\tif params != nil {\n\t\t\t\t\t\tif cap(*params) \u003c int(globalParamsCount) {\n\t\t\t\t\t\t\tnewParams := make(Params, len(*params), globalParamsCount)\n\t\t\t\t\t\t\tcopy(newParams, *params)\n\t\t\t\t\t\t\t*params = newParams\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif value.params == nil {\n\t\t\t\t\t\t\tvalue.params = params\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti := len(*value.params)\n\t\t\t\t\t\t*value.params = (*value.params)[:i+1]\n\t\t\t\t\t\tval := path\n\t\t\t\t\t\tif unescape {\n\t\t\t\t\t\t\tif v, err := url.QueryUnescape(path); err == nil {\n\t\t\t\t\t\t\t\tval = v\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t(*value.params)[i] = Param{Key: n.path[2:], Value: val}\n\t\t\t\t\t}\n\t\t\t\t\tvalue.handlers = n.handlers\n\t\t\t\t\tvalue.fullPath = n.fullPath\n\t\t\t\t\treturn\n\t\t\t\tdefault:\n\t\t\t\t\tpanic(\"invalid node type\")\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif path == prefix {\n\t\t\tif n.handlers == nil \u0026\u0026 path != \"/\" {\n\t\t\t\tfor length := len(*skippedNodes); length \u003e 0; length-- {\n\t\t\t\t\tskippedNode := (*skippedNodes)[length-1]\n\t\t\t\t\t*skippedNodes = (*skippedNodes)[:length-1]\n\t\t\t\t\tif strings.HasSuffix(skippedNode.path, path) {\n\t\t\t\t\t\tpath = skippedNode.path\n\t\t\t\t\t\tn = skippedNode.node\n\t\t\t\t\t\tif value.params != nil {\n\t\t\t\t\t\t\t*value.params = (*value.params)[:skippedNode.paramsCount]\n\t\t\t\t\t\t}\n\t\t\t\t\t\tglobalParamsCount = skippedNode.paramsCount\n\t\t\t\t\t\tcontinue walk\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif value.handlers = n.handlers; value.handlers != nil {\n\t\t\t\tvalue.fullPath = n.fullPath\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif path == \"/\" \u0026\u0026 n.wildChild \u0026\u0026 n.nType != root {\n\t\t\t\tvalue.tsr = true\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif path == \"/\" \u0026\u0026 n.nType == static {\n\t\t\t\tvalue.tsr = true\n\t\t\t\treturn\n\t\t\t}\n\t\t\tfor i, c := range []byte(n.indices) {\n\t\t\t\tif c == '/' {\n\t\t\t\t\tn = n.children[i]\n\t\t\t\t\tvalue.tsr = (len(n.path) == 1 \u0026\u0026 n.handlers != nil) || (n.nType == catchAll \u0026\u0026 n.children[0].handlers != nil)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn\n\t\t}\n\t\tvalue.tsr = path == \"/\" || (len(prefix) == len(path)+1 \u0026\u0026 prefix[len(path)] == '/' \u0026\u0026 path == prefix[:len(prefix)-1] \u0026\u0026 n.handlers != nil)\n\t\tif !value.tsr \u0026\u0026 path != \"/\" {\n\t\t\tfor length := len(*skippedNodes); length \u003e 0; length-- {\n\t\t\t\tskippedNode := (*skippedNodes)[length-1]\n\t\t\t\t*skippedNodes = (*skippedNodes)[:length-1]\n\t\t\t\tif strings.HasSuffix(skippedNode.path, path) {\n\t\t\t\t\tpath = skippedNode.path\n\t\t\t\t\tn = skippedNode.node\n\t\t\t\t\tif value.params != nil {\n\t\t\t\t\t\t*value.params = (*value.params)[:skippedNode.paramsCount]\n\t\t\t\t\t}\n\t\t\t\t\tglobalParamsCount = skippedNode.paramsCount\n\t\t\t\t\tcontinue walk\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn\n\t}\n}\nfunc (n *node) findCaseInsensitivePath(path string, fixTrailingSlash bool) ([]byte, bool) {\n\tconst stackBufSize = 128\n\tbuf := make([]byte, 0, stackBufSize)\n\tif length := len(path) + 1; length \u003e stackBufSize {\n\t\tbuf = make([]byte, 0, length)\n\t}\n\tciPath := n.findCaseInsensitivePathRec(path, buf, [4]byte{}, fixTrailingSlash)\n\treturn ciPath, ciPath != nil\n}\nfunc shiftNRuneBytes(rb [4]byte, n int) [4]byte {\n\tswitch n {\n\tcase 0:\n\t\treturn rb\n\tcase 1:\n\t\treturn [4]byte{rb[1], rb[2], rb[3], 0}\n\tcase 2:\n\t\treturn [4]byte{rb[2], rb[3]}\n\tcase 3:\n\t\treturn [4]byte{rb[3]}\n\tdefault:\n\t\treturn [4]byte{}\n\t}\n}\nfunc (n *node) findCaseInsensitivePathRec(path string, ciPath []byte, rb [4]byte, fixTrailingSlash bool) []byte {\n\tnpLen := len(n.path)\nwalk:\n\tfor len(path) \u003e= npLen \u0026\u0026 (npLen == 0 || strings.EqualFold(path[1:npLen], n.path[1:])) {\n\t\toldPath := path\n\t\tpath = path[npLen:]\n\t\tciPath = append(ciPath, n.path...)\n\t\tif len(path) == 0 {\n\t\t\tif n.handlers != nil {\n\t\t\t\treturn ciPath\n\t\t\t}\n\t\t\tif fixTrailingSlash {\n\t\t\t\tfor i, c := range []byte(n.indices) {\n\t\t\t\t\tif c == '/' {\n\t\t\t\t\t\tn = n.children[i]\n\t\t\t\t\t\tif (len(n.path) == 1 \u0026\u0026 n.handlers != nil) || (n.nType == catchAll \u0026\u0026 n.children[0].handlers != nil) {\n\t\t\t\t\t\t\treturn append(ciPath, '/')\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn nil\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn nil\n\t\t}\n\t\tif !n.wildChild {\n\t\t\trb = shiftNRuneBytes(rb, npLen)\n\t\t\tif rb[0] != 0 {\n\t\t\t\tidxc := rb[0]\n\t\t\t\tfor i, c := range []byte(n.indices) {\n\t\t\t\t\tif c == idxc {\n\t\t\t\t\t\tn = n.children[i]\n\t\t\t\t\t\tnpLen = len(n.path)\n\t\t\t\t\t\tcontinue walk\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar rv rune\n\t\t\t\tvar off int\n\t\t\t\tfor max := min(npLen, 3); off \u003c max; off++ {\n\t\t\t\t\tif i := npLen - off; utf8.RuneStart(oldPath[i]) {\n\t\t\t\t\t\trv, _ = utf8.DecodeRuneInString(oldPath[i:])\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlo := unicode.ToLower(rv)\n\t\t\t\tutf8.EncodeRune(rb[:], lo)\n\t\t\t\trb = shiftNRuneBytes(rb, off)\n\t\t\t\tidxc := rb[0]\n\t\t\t\tfor i, c := range []byte(n.indices) {\n\t\t\t\t\tif c == idxc {\n\t\t\t\t\t\tif out := n.children[i].findCaseInsensitivePathRec(path, ciPath, rb, fixTrailingSlash); out != nil {\n\t\t\t\t\t\t\treturn out\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif up := unicode.ToUpper(rv); up != lo {\n\t\t\t\t\tutf8.EncodeRune(rb[:], up)\n\t\t\t\t\trb = shiftNRuneBytes(rb, off)\n\t\t\t\t\tidxc := rb[0]\n\t\t\t\t\tfor i, c := range []byte(n.indices) {\n\t\t\t\t\t\tif c == idxc {\n\t\t\t\t\t\t\tn = n.children[i]\n\t\t\t\t\t\t\tnpLen = len(n.path)\n\t\t\t\t\t\t\tcontinue walk\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif fixTrailingSlash \u0026\u0026 path == \"/\" \u0026\u0026 n.handlers != nil {\n\t\t\t\treturn ciPath\n\t\t\t}\n\t\t\treturn nil\n\t\t}\n\t\tn = n.children[0]\n\t\tswitch n.nType {\n\t\tcase param:\n\t\t\tend := 0\n\t\t\tfor end \u003c len(path) \u0026\u0026 path[end] != '/' {\n\t\t\t\tend++\n\t\t\t}\n\t\t\tciPath = append(ciPath, path[:end]...)\n\t\t\tif end \u003c len(path) {\n\t\t\t\tif len(n.children) \u003e 0 {\n\t\t\t\t\tn = n.children[0]\n\t\t\t\t\tnpLen = len(n.path)\n\t\t\t\t\tpath = path[end:]\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\t\t\t\tif fixTrailingSlash \u0026\u0026 len(path) == end+1 {\n\t\t\t\t\treturn ciPath\n\t\t\t\t}\n\t\t\t\treturn nil\n\t\t\t}\n\t\t\tif n.handlers != nil {\n\t\t\t\treturn ciPath\n\t\t\t}\n\t\t\tif fixTrailingSlash \u0026\u0026 len(n.children) == 1 {\n\t\t\t\tn = n.children[0]\n\t\t\t\tif n.path == \"/\" \u0026\u0026 n.handlers != nil {\n\t\t\t\t\treturn append(ciPath, '/')\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn nil\n\t\tcase catchAll:\n\t\t\treturn append(ciPath, path...)\n\t\tdefault:\n\t\t\tpanic(\"invalid node type\")\n\t\t}\n\t}\n\tif fixTrailingSlash {\n\t\tif path == \"/\" {\n\t\t\treturn ciPath\n\t\t}\n\t\tif len(path)+1 == npLen \u0026\u0026 n.path[len(path)] == '/' \u0026\u0026 strings.EqualFold(path[1:], n.path[1:len(path)]) \u0026\u0026 n.handlers != nil {\n\t\t\treturn append(ciPath, n.path...)\n\t\t}\n\t}\n\treturn nil\n}\n","nodeType":"File","column":0,"line":0,"doc":null,"package":207,"name":{"children":[],"start":215,"end":218,"code":"gin","nodeType":"Identifier","column":0,"line":0,"namePos":215,"name":"gin","object":null},"declarations":[{"children":[],"start":220,"end":336,"code":"import (\n\t\"bytes\"\n\t\"net/url\"\n\t\"strings\"\n\t\"unicode\"\n\t\"unicode/utf8\"\n\t\"github.com/gin-gonic/gin/internal/bytesconv\"\n)","nodeType":"GenericDeclaration","column":0,"line":0,"doc":null,"tokenPosition":220,"token":75,"lparen":227,"specifications":[{"children":[],"start":230,"end":237,"code":"\"bytes\"","nodeType":"ImportSpecification","column":0,"line":0,"doc":null,"name":null,"path":{"children":[],"start":230,"end":237,"code":"\"bytes\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":230,"kind":9,"value":"\"bytes\""},"comment":null,"endPosition":0},{"children":[],"start":239,"end":248,"code":"\"net/url\"","nodeType":"ImportSpecification","column":0,"line":0,"doc":null,"name":null,"path":{"children":[],"start":239,"end":248,"code":"\"net/url\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":239,"kind":9,"value":"\"net/url\""},"comment":null,"endPosition":0},{"children":[],"start":250,"end":259,"code":"\"strings\"","nodeType":"ImportSpecification","column":0,"line":0,"doc":null,"name":null,"path":{"children":[],"start":250,"end":259,"code":"\"strings\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":250,"kind":9,"value":"\"strings\""},"comment":null,"endPosition":0},{"children":[],"start":261,"end":270,"code":"\"unicode\"","nodeType":"ImportSpecification","column":0,"line":0,"doc":null,"name":null,"path":{"children":[],"start":261,"end":270,"code":"\"unicode\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":261,"kind":9,"value":"\"unicode\""},"comment":null,"endPosition":0},{"children":[],"start":272,"end":286,"code":"\"unicode/utf8\"","nodeType":"ImportSpecification","column":0,"line":0,"doc":null,"name":null,"path":{"children":[],"start":272,"end":286,"code":"\"unicode/utf8\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":272,"kind":9,"value":"\"unicode/utf8\""},"comment":null,"endPosition":0},{"children":[],"start":289,"end":334,"code":"\"github.com/gin-gonic/gin/internal/bytesconv\"","nodeType":"ImportSpecification","column":0,"line":0,"doc":null,"name":null,"path":{"children":[],"start":289,"end":334,"code":"\"github.com/gin-gonic/gin/internal/bytesconv\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":289,"kind":9,"value":"\"github.com/gin-gonic/gin/internal/bytesconv\""},"comment":null,"endPosition":0}],"rparen":335},{"children":[],"start":338,"end":417,"code":"var (\n\tstrColon\t= []byte(\":\")\n\tstrStar\t\t= []byte(\"*\")\n\tstrSlash\t= []byte(\"/\")\n)","nodeType":"GenericDeclaration","column":0,"line":0,"doc":null,"tokenPosition":338,"token":85,"lparen":342,"specifications":[{"children":[],"start":345,"end":367,"code":"strColon = []byte(\":\")","nodeType":"ValueSpecification","column":0,"line":0,"doc":null,"names":[{"children":[],"start":345,"end":353,"code":"strColon","nodeType":"Identifier","column":0,"line":0,"namePos":345,"name":"strColon","object":null}],"type":null,"values":[{"children":[],"start":356,"end":367,"code":"[]byte(\":\")","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":356,"end":362,"code":"[]byte","nodeType":"ArrayType","column":0,"line":0,"leftBracket":356,"length":null,"element":{"children":[],"start":358,"end":362,"code":"byte","nodeType":"Identifier","column":0,"line":0,"namePos":358,"name":"byte","object":null}},"lparen":0,"args":[{"children":[],"start":363,"end":366,"code":"\":\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":363,"kind":9,"value":"\":\""}],"ellipsis":0,"rparen":0}],"comment":null},{"children":[],"start":369,"end":391,"code":"strStar = []byte(\"*\")","nodeType":"ValueSpecification","column":0,"line":0,"doc":null,"names":[{"children":[],"start":369,"end":376,"code":"strStar","nodeType":"Identifier","column":0,"line":0,"namePos":369,"name":"strStar","object":null}],"type":null,"values":[{"children":[],"start":380,"end":391,"code":"[]byte(\"*\")","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":380,"end":386,"code":"[]byte","nodeType":"ArrayType","column":0,"line":0,"leftBracket":380,"length":null,"element":{"children":[],"start":382,"end":386,"code":"byte","nodeType":"Identifier","column":0,"line":0,"namePos":382,"name":"byte","object":null}},"lparen":0,"args":[{"children":[],"start":387,"end":390,"code":"\"*\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":387,"kind":9,"value":"\"*\""}],"ellipsis":0,"rparen":0}],"comment":null},{"children":[],"start":393,"end":415,"code":"strSlash = []byte(\"/\")","nodeType":"ValueSpecification","column":0,"line":0,"doc":null,"names":[{"children":[],"start":393,"end":401,"code":"strSlash","nodeType":"Identifier","column":0,"line":0,"namePos":393,"name":"strSlash","object":null}],"type":null,"values":[{"children":[],"start":404,"end":415,"code":"[]byte(\"/\")","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":404,"end":410,"code":"[]byte","nodeType":"ArrayType","column":0,"line":0,"leftBracket":404,"length":null,"element":{"children":[],"start":406,"end":410,"code":"byte","nodeType":"Identifier","column":0,"line":0,"namePos":406,"name":"byte","object":null}},"lparen":0,"args":[{"children":[],"start":411,"end":414,"code":"\"/\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":411,"kind":9,"value":"\"/\""}],"ellipsis":0,"rparen":0}],"comment":null}],"rparen":416},{"children":[],"start":488,"end":537,"code":"type Param struct {\n\tKey\tstring\n\tValue\tstring\n}","nodeType":"GenericDeclaration","column":0,"line":0,"doc":null,"tokenPosition":488,"token":84,"lparen":0,"specifications":[{"children":[],"start":493,"end":537,"code":"Param struct {\n\tKey\tstring\n\tValue\tstring\n}","nodeType":"TypeSpecification","column":0,"line":0,"doc":null,"name":{"children":[],"start":493,"end":498,"code":"Param","nodeType":"Identifier","column":0,"line":0,"namePos":493,"name":"Param","object":null},"typeParams":null,"assign":0,"type":{"children":[],"start":499,"end":537,"code":"struct {\n\tKey\tstring\n\tValue\tstring\n}","nodeType":"StructType","column":0,"line":0,"struct":499,"fields":{"children":[],"start":506,"end":537,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":506,"list":[{"children":[],"start":509,"end":521,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":509,"end":512,"code":"Key","nodeType":"Identifier","column":0,"line":0,"namePos":509,"name":"Key","object":null}],"type":{"children":[],"start":515,"end":521,"code":"string","nodeType":"Identifier","column":0,"line":0,"namePos":515,"name":"string","object":null},"tag":null,"comment":null},{"children":[],"start":523,"end":535,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":523,"end":528,"code":"Value","nodeType":"Identifier","column":0,"line":0,"namePos":523,"name":"Value","object":null}],"type":{"children":[],"start":529,"end":535,"code":"string","nodeType":"Identifier","column":0,"line":0,"namePos":529,"name":"string","object":null},"tag":null,"comment":null}],"closing":536},"incomplete":false},"comment":null}],"rparen":0},{"children":[],"start":727,"end":746,"code":"type Params []Param","nodeType":"GenericDeclaration","column":0,"line":0,"doc":null,"tokenPosition":727,"token":84,"lparen":0,"specifications":[{"children":[],"start":732,"end":746,"code":"Params []Param","nodeType":"TypeSpecification","column":0,"line":0,"doc":null,"name":{"children":[],"start":732,"end":738,"code":"Params","nodeType":"Identifier","column":0,"line":0,"namePos":732,"name":"Params","object":null},"typeParams":null,"assign":0,"type":{"children":[],"start":739,"end":746,"code":"[]Param","nodeType":"ArrayType","column":0,"line":0,"leftBracket":739,"length":null,"element":{"children":[],"start":741,"end":746,"code":"Param","nodeType":"Identifier","column":0,"line":0,"namePos":741,"name":"Param","object":null}},"comment":null}],"rparen":0},{"children":[],"start":929,"end":1087,"code":"func (ps Params) Get(name string) (string, bool) {\n\tfor _, entry := range ps {\n\t\tif entry.Key == name {\n\t\t\treturn entry.Value, true\n\t\t}\n\t}\n\treturn \"\", false\n}","nodeType":"FunctionDeclaration","column":0,"line":0,"doc":null,"receiver":{"children":[],"start":934,"end":945,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":934,"list":[{"children":[],"start":935,"end":944,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":935,"end":937,"code":"ps","nodeType":"Identifier","column":0,"line":0,"namePos":935,"name":"ps","object":null}],"type":{"children":[],"start":938,"end":944,"code":"Params","nodeType":"Identifier","column":0,"line":0,"namePos":938,"name":"Params","object":null},"tag":null,"comment":null}],"closing":944},"name":{"children":[],"start":946,"end":949,"code":"Get","nodeType":"Identifier","column":0,"line":0,"namePos":946,"name":"Get","object":null},"type":{"children":[],"start":929,"end":977,"code":"func(name string) (string, bool)","nodeType":"FunctionType","column":0,"line":0,"Function":929,"TypeParams":null,"Params":{"children":[],"start":949,"end":962,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":949,"list":[{"children":[],"start":950,"end":961,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":950,"end":954,"code":"name","nodeType":"Identifier","column":0,"line":0,"namePos":950,"name":"name","object":null}],"type":{"children":[],"start":955,"end":961,"code":"string","nodeType":"Identifier","column":0,"line":0,"namePos":955,"name":"string","object":null},"tag":null,"comment":null}],"closing":961},"Results":{"children":[],"start":963,"end":977,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":963,"list":[{"children":[],"start":964,"end":970,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":null,"type":{"children":[],"start":964,"end":970,"code":"string","nodeType":"Identifier","column":0,"line":0,"namePos":964,"name":"string","object":null},"tag":null,"comment":null},{"children":[],"start":972,"end":976,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":null,"type":{"children":[],"start":972,"end":976,"code":"bool","nodeType":"Identifier","column":0,"line":0,"namePos":972,"name":"bool","object":null},"tag":null,"comment":null}],"closing":976}},"body":{"children":[],"start":978,"end":1087,"code":"{\n\tfor _, entry := range ps {\n\t\tif entry.Key == name {\n\t\t\treturn entry.Value, true\n\t\t}\n\t}\n\treturn \"\", false\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":978,"list":[{"children":[],"start":981,"end":1067,"code":"for _, entry := range ps {\n\tif entry.Key == name {\n\t\treturn entry.Value, true\n\t}\n}","nodeType":"RangeStatement","column":0,"line":0,"for":981,"key":{"children":[],"start":985,"end":986,"code":"_","nodeType":"Identifier","column":0,"line":0,"namePos":985,"name":"_","object":null},"value":{"children":[],"start":988,"end":993,"code":"entry","nodeType":"Identifier","column":0,"line":0,"namePos":988,"name":"entry","object":null},"tokenPos":994,"token":47,"range":997,"expression":{"children":[],"start":1003,"end":1005,"code":"ps","nodeType":"Identifier","column":0,"line":0,"namePos":1003,"name":"ps","object":null},"body":{"children":[],"start":1006,"end":1067,"code":"{\n\tif entry.Key == name {\n\t\treturn entry.Value, true\n\t}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":1006,"list":[{"children":[],"start":1010,"end":1064,"code":"if entry.Key == name {\n\treturn entry.Value, true\n}","nodeType":"IfStatement","column":0,"line":0,"if":1010,"initialization":null,"condition":{"children":[],"start":1013,"end":1030,"code":"entry.Key == name","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":1013,"end":1022,"code":"entry.Key","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":1013,"end":1018,"code":"entry","nodeType":"Identifier","column":0,"line":0,"namePos":1013,"name":"entry","object":null},"sel":{"children":[],"start":1019,"end":1022,"code":"Key","nodeType":"Identifier","column":0,"line":0,"namePos":1019,"name":"Key","object":null}},"opPos":1023,"op":39,"rightExpression":{"children":[],"start":1026,"end":1030,"code":"name","nodeType":"Identifier","column":0,"line":0,"namePos":1026,"name":"name","object":null}},"body":{"children":[],"start":1031,"end":1064,"code":"{\n\treturn entry.Value, true\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":1031,"list":[{"children":[],"start":1036,"end":1060,"code":"return entry.Value, true","nodeType":"ReturnStatement","column":0,"line":0,"return":1036,"results":[{"children":[],"start":1043,"end":1054,"code":"entry.Value","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":1043,"end":1048,"code":"entry","nodeType":"Identifier","column":0,"line":0,"namePos":1043,"name":"entry","object":null},"sel":{"children":[],"start":1049,"end":1054,"code":"Value","nodeType":"Identifier","column":0,"line":0,"namePos":1049,"name":"Value","object":null}},{"children":[],"start":1056,"end":1060,"code":"true","nodeType":"Identifier","column":0,"line":0,"namePos":1056,"name":"true","object":null}]}],"rbrace":1063},"else":null}],"rbrace":1066}},{"children":[],"start":1069,"end":1085,"code":"return \"\", false","nodeType":"ReturnStatement","column":0,"line":0,"return":1069,"results":[{"children":[],"start":1076,"end":1078,"code":"\"\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":1076,"kind":9,"value":"\"\""},{"children":[],"start":1080,"end":1085,"code":"false","nodeType":"Identifier","column":0,"line":0,"namePos":1080,"name":"false","object":null}]}],"rbrace":1086}},{"children":[],"start":1233,"end":1315,"code":"func (ps Params) ByName(name string) (va string) {\n\tva, _ = ps.Get(name)\n\treturn\n}","nodeType":"FunctionDeclaration","column":0,"line":0,"doc":null,"receiver":{"children":[],"start":1238,"end":1249,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":1238,"list":[{"children":[],"start":1239,"end":1248,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":1239,"end":1241,"code":"ps","nodeType":"Identifier","column":0,"line":0,"namePos":1239,"name":"ps","object":null}],"type":{"children":[],"start":1242,"end":1248,"code":"Params","nodeType":"Identifier","column":0,"line":0,"namePos":1242,"name":"Params","object":null},"tag":null,"comment":null}],"closing":1248},"name":{"children":[],"start":1250,"end":1256,"code":"ByName","nodeType":"Identifier","column":0,"line":0,"namePos":1250,"name":"ByName","object":null},"type":{"children":[],"start":1233,"end":1281,"code":"func(name string) (va string)","nodeType":"FunctionType","column":0,"line":0,"Function":1233,"TypeParams":null,"Params":{"children":[],"start":1256,"end":1269,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":1256,"list":[{"children":[],"start":1257,"end":1268,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":1257,"end":1261,"code":"name","nodeType":"Identifier","column":0,"line":0,"namePos":1257,"name":"name","object":null}],"type":{"children":[],"start":1262,"end":1268,"code":"string","nodeType":"Identifier","column":0,"line":0,"namePos":1262,"name":"string","object":null},"tag":null,"comment":null}],"closing":1268},"Results":{"children":[],"start":1270,"end":1281,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":1270,"list":[{"children":[],"start":1271,"end":1280,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":1271,"end":1273,"code":"va","nodeType":"Identifier","column":0,"line":0,"namePos":1271,"name":"va","object":null}],"type":{"children":[],"start":1274,"end":1280,"code":"string","nodeType":"Identifier","column":0,"line":0,"namePos":1274,"name":"string","object":null},"tag":null,"comment":null}],"closing":1280}},"body":{"children":[],"start":1282,"end":1315,"code":"{\n\tva, _ = ps.Get(name)\n\treturn\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":1282,"list":[{"children":[],"start":1285,"end":1305,"code":"va, _ = ps.Get(name)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":1285,"end":1287,"code":"va","nodeType":"Identifier","column":0,"line":0,"namePos":1285,"name":"va","object":null},{"children":[],"start":1289,"end":1290,"code":"_","nodeType":"Identifier","column":0,"line":0,"namePos":1289,"name":"_","object":null}],"tokenPos":1291,"token":42,"rhs":[{"children":[],"start":1293,"end":1305,"code":"ps.Get(name)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":1293,"end":1299,"code":"ps.Get","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":1293,"end":1295,"code":"ps","nodeType":"Identifier","column":0,"line":0,"namePos":1293,"name":"ps","object":null},"sel":{"children":[],"start":1296,"end":1299,"code":"Get","nodeType":"Identifier","column":0,"line":0,"namePos":1296,"name":"Get","object":null}},"lparen":0,"args":[{"children":[],"start":1300,"end":1304,"code":"name","nodeType":"Identifier","column":0,"line":0,"namePos":1300,"name":"name","object":null}],"ellipsis":0,"rparen":0}]},{"children":[],"start":1307,"end":1313,"code":"return","nodeType":"ReturnStatement","column":0,"line":0,"return":1307,"results":[]}],"rbrace":1314}},{"children":[],"start":1317,"end":1372,"code":"type methodTree struct {\n\tmethod\tstring\n\troot\t*node\n}","nodeType":"GenericDeclaration","column":0,"line":0,"doc":null,"tokenPosition":1317,"token":84,"lparen":0,"specifications":[{"children":[],"start":1322,"end":1372,"code":"methodTree struct {\n\tmethod\tstring\n\troot\t*node\n}","nodeType":"TypeSpecification","column":0,"line":0,"doc":null,"name":{"children":[],"start":1322,"end":1332,"code":"methodTree","nodeType":"Identifier","column":0,"line":0,"namePos":1322,"name":"methodTree","object":null},"typeParams":null,"assign":0,"type":{"children":[],"start":1333,"end":1372,"code":"struct {\n\tmethod\tstring\n\troot\t*node\n}","nodeType":"StructType","column":0,"line":0,"struct":1333,"fields":{"children":[],"start":1340,"end":1372,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":1340,"list":[{"children":[],"start":1343,"end":1356,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":1343,"end":1349,"code":"method","nodeType":"Identifier","column":0,"line":0,"namePos":1343,"name":"method","object":null}],"type":{"children":[],"start":1350,"end":1356,"code":"string","nodeType":"Identifier","column":0,"line":0,"namePos":1350,"name":"string","object":null},"tag":null,"comment":null},{"children":[],"start":1358,"end":1370,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":1358,"end":1362,"code":"root","nodeType":"Identifier","column":0,"line":0,"namePos":1358,"name":"root","object":null}],"type":{"children":[],"start":1365,"end":1370,"code":"*node","nodeType":"StarExpression","column":0,"line":0,"star":1365,"expression":{"children":[],"start":1366,"end":1370,"code":"node","nodeType":"Identifier","column":0,"line":0,"namePos":1366,"name":"node","object":null}},"tag":null,"comment":null}],"closing":1371},"incomplete":false},"comment":null}],"rparen":0},{"children":[],"start":1374,"end":1403,"code":"type methodTrees []methodTree","nodeType":"GenericDeclaration","column":0,"line":0,"doc":null,"tokenPosition":1374,"token":84,"lparen":0,"specifications":[{"children":[],"start":1379,"end":1403,"code":"methodTrees []methodTree","nodeType":"TypeSpecification","column":0,"line":0,"doc":null,"name":{"children":[],"start":1379,"end":1390,"code":"methodTrees","nodeType":"Identifier","column":0,"line":0,"namePos":1379,"name":"methodTrees","object":null},"typeParams":null,"assign":0,"type":{"children":[],"start":1391,"end":1403,"code":"[]methodTree","nodeType":"ArrayType","column":0,"line":0,"leftBracket":1391,"length":null,"element":{"children":[],"start":1393,"end":1403,"code":"methodTree","nodeType":"Identifier","column":0,"line":0,"namePos":1393,"name":"methodTree","object":null}},"comment":null}],"rparen":0},{"children":[],"start":1405,"end":1556,"code":"func (trees methodTrees) get(method string) *node {\n\tfor _, tree := range trees {\n\t\tif tree.method == method {\n\t\t\treturn tree.root\n\t\t}\n\t}\n\treturn nil\n}","nodeType":"FunctionDeclaration","column":0,"line":0,"doc":null,"receiver":{"children":[],"start":1410,"end":1429,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":1410,"list":[{"children":[],"start":1411,"end":1428,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":1411,"end":1416,"code":"trees","nodeType":"Identifier","column":0,"line":0,"namePos":1411,"name":"trees","object":null}],"type":{"children":[],"start":1417,"end":1428,"code":"methodTrees","nodeType":"Identifier","column":0,"line":0,"namePos":1417,"name":"methodTrees","object":null},"tag":null,"comment":null}],"closing":1428},"name":{"children":[],"start":1430,"end":1433,"code":"get","nodeType":"Identifier","column":0,"line":0,"namePos":1430,"name":"get","object":null},"type":{"children":[],"start":1405,"end":1454,"code":"func(method string) *node","nodeType":"FunctionType","column":0,"line":0,"Function":1405,"TypeParams":null,"Params":{"children":[],"start":1433,"end":1448,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":1433,"list":[{"children":[],"start":1434,"end":1447,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":1434,"end":1440,"code":"method","nodeType":"Identifier","column":0,"line":0,"namePos":1434,"name":"method","object":null}],"type":{"children":[],"start":1441,"end":1447,"code":"string","nodeType":"Identifier","column":0,"line":0,"namePos":1441,"name":"string","object":null},"tag":null,"comment":null}],"closing":1447},"Results":{"children":[],"start":1449,"end":1454,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":0,"list":[{"children":[],"start":1449,"end":1454,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":null,"type":{"children":[],"start":1449,"end":1454,"code":"*node","nodeType":"StarExpression","column":0,"line":0,"star":1449,"expression":{"children":[],"start":1450,"end":1454,"code":"node","nodeType":"Identifier","column":0,"line":0,"namePos":1450,"name":"node","object":null}},"tag":null,"comment":null}],"closing":0}},"body":{"children":[],"start":1455,"end":1556,"code":"{\n\tfor _, tree := range trees {\n\t\tif tree.method == method {\n\t\t\treturn tree.root\n\t\t}\n\t}\n\treturn nil\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":1455,"list":[{"children":[],"start":1458,"end":1542,"code":"for _, tree := range trees {\n\tif tree.method == method {\n\t\treturn tree.root\n\t}\n}","nodeType":"RangeStatement","column":0,"line":0,"for":1458,"key":{"children":[],"start":1462,"end":1463,"code":"_","nodeType":"Identifier","column":0,"line":0,"namePos":1462,"name":"_","object":null},"value":{"children":[],"start":1465,"end":1469,"code":"tree","nodeType":"Identifier","column":0,"line":0,"namePos":1465,"name":"tree","object":null},"tokenPos":1470,"token":47,"range":1473,"expression":{"children":[],"start":1479,"end":1484,"code":"trees","nodeType":"Identifier","column":0,"line":0,"namePos":1479,"name":"trees","object":null},"body":{"children":[],"start":1485,"end":1542,"code":"{\n\tif tree.method == method {\n\t\treturn tree.root\n\t}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":1485,"list":[{"children":[],"start":1489,"end":1539,"code":"if tree.method == method {\n\treturn tree.root\n}","nodeType":"IfStatement","column":0,"line":0,"if":1489,"initialization":null,"condition":{"children":[],"start":1492,"end":1513,"code":"tree.method == method","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":1492,"end":1503,"code":"tree.method","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":1492,"end":1496,"code":"tree","nodeType":"Identifier","column":0,"line":0,"namePos":1492,"name":"tree","object":null},"sel":{"children":[],"start":1497,"end":1503,"code":"method","nodeType":"Identifier","column":0,"line":0,"namePos":1497,"name":"method","object":null}},"opPos":1504,"op":39,"rightExpression":{"children":[],"start":1507,"end":1513,"code":"method","nodeType":"Identifier","column":0,"line":0,"namePos":1507,"name":"method","object":null}},"body":{"children":[],"start":1514,"end":1539,"code":"{\n\treturn tree.root\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":1514,"list":[{"children":[],"start":1519,"end":1535,"code":"return tree.root","nodeType":"ReturnStatement","column":0,"line":0,"return":1519,"results":[{"children":[],"start":1526,"end":1535,"code":"tree.root","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":1526,"end":1530,"code":"tree","nodeType":"Identifier","column":0,"line":0,"namePos":1526,"name":"tree","object":null},"sel":{"children":[],"start":1531,"end":1535,"code":"root","nodeType":"Identifier","column":0,"line":0,"namePos":1531,"name":"root","object":null}}]}],"rbrace":1538},"else":null}],"rbrace":1541}},{"children":[],"start":1544,"end":1554,"code":"return nil","nodeType":"ReturnStatement","column":0,"line":0,"return":1544,"results":[{"children":[],"start":1551,"end":1554,"code":"nil","nodeType":"Identifier","column":0,"line":0,"namePos":1551,"name":"nil","object":null}]}],"rbrace":1555}},{"children":[],"start":1558,"end":1621,"code":"func min(a, b int) int {\n\tif a \u003c= b {\n\t\treturn a\n\t}\n\treturn b\n}","nodeType":"FunctionDeclaration","column":0,"line":0,"doc":null,"receiver":null,"name":{"children":[],"start":1563,"end":1566,"code":"min","nodeType":"Identifier","column":0,"line":0,"namePos":1563,"name":"min","object":null},"type":{"children":[],"start":1558,"end":1580,"code":"func(a, b int) int","nodeType":"FunctionType","column":0,"line":0,"Function":1558,"TypeParams":null,"Params":{"children":[],"start":1566,"end":1576,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":1566,"list":[{"children":[],"start":1567,"end":1575,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":1567,"end":1568,"code":"a","nodeType":"Identifier","column":0,"line":0,"namePos":1567,"name":"a","object":null},{"children":[],"start":1570,"end":1571,"code":"b","nodeType":"Identifier","column":0,"line":0,"namePos":1570,"name":"b","object":null}],"type":{"children":[],"start":1572,"end":1575,"code":"int","nodeType":"Identifier","column":0,"line":0,"namePos":1572,"name":"int","object":null},"tag":null,"comment":null}],"closing":1575},"Results":{"children":[],"start":1577,"end":1580,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":0,"list":[{"children":[],"start":1577,"end":1580,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":null,"type":{"children":[],"start":1577,"end":1580,"code":"int","nodeType":"Identifier","column":0,"line":0,"namePos":1577,"name":"int","object":null},"tag":null,"comment":null}],"closing":0}},"body":{"children":[],"start":1581,"end":1621,"code":"{\n\tif a \u003c= b {\n\t\treturn a\n\t}\n\treturn b\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":1581,"list":[{"children":[],"start":1584,"end":1609,"code":"if a \u003c= b {\n\treturn a\n}","nodeType":"IfStatement","column":0,"line":0,"if":1584,"initialization":null,"condition":{"children":[],"start":1587,"end":1593,"code":"a \u003c= b","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":1587,"end":1588,"code":"a","nodeType":"Identifier","column":0,"line":0,"namePos":1587,"name":"a","object":null},"opPos":1589,"op":45,"rightExpression":{"children":[],"start":1592,"end":1593,"code":"b","nodeType":"Identifier","column":0,"line":0,"namePos":1592,"name":"b","object":null}},"body":{"children":[],"start":1594,"end":1609,"code":"{\n\treturn a\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":1594,"list":[{"children":[],"start":1598,"end":1606,"code":"return a","nodeType":"ReturnStatement","column":0,"line":0,"return":1598,"results":[{"children":[],"start":1605,"end":1606,"code":"a","nodeType":"Identifier","column":0,"line":0,"namePos":1605,"name":"a","object":null}]}],"rbrace":1608},"else":null},{"children":[],"start":1611,"end":1619,"code":"return b","nodeType":"ReturnStatement","column":0,"line":0,"return":1611,"results":[{"children":[],"start":1618,"end":1619,"code":"b","nodeType":"Identifier","column":0,"line":0,"namePos":1618,"name":"b","object":null}]}],"rbrace":1620}},{"children":[],"start":1623,"end":1754,"code":"func longestCommonPrefix(a, b string) int {\n\ti := 0\n\tmax := min(len(a), len(b))\n\tfor i \u003c max \u0026\u0026 a[i] == b[i] {\n\t\ti++\n\t}\n\treturn i\n}","nodeType":"FunctionDeclaration","column":0,"line":0,"doc":null,"receiver":null,"name":{"children":[],"start":1628,"end":1647,"code":"longestCommonPrefix","nodeType":"Identifier","column":0,"line":0,"namePos":1628,"name":"longestCommonPrefix","object":null},"type":{"children":[],"start":1623,"end":1664,"code":"func(a, b string) int","nodeType":"FunctionType","column":0,"line":0,"Function":1623,"TypeParams":null,"Params":{"children":[],"start":1647,"end":1660,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":1647,"list":[{"children":[],"start":1648,"end":1659,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":1648,"end":1649,"code":"a","nodeType":"Identifier","column":0,"line":0,"namePos":1648,"name":"a","object":null},{"children":[],"start":1651,"end":1652,"code":"b","nodeType":"Identifier","column":0,"line":0,"namePos":1651,"name":"b","object":null}],"type":{"children":[],"start":1653,"end":1659,"code":"string","nodeType":"Identifier","column":0,"line":0,"namePos":1653,"name":"string","object":null},"tag":null,"comment":null}],"closing":1659},"Results":{"children":[],"start":1661,"end":1664,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":0,"list":[{"children":[],"start":1661,"end":1664,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":null,"type":{"children":[],"start":1661,"end":1664,"code":"int","nodeType":"Identifier","column":0,"line":0,"namePos":1661,"name":"int","object":null},"tag":null,"comment":null}],"closing":0}},"body":{"children":[],"start":1665,"end":1754,"code":"{\n\ti := 0\n\tmax := min(len(a), len(b))\n\tfor i \u003c max \u0026\u0026 a[i] == b[i] {\n\t\ti++\n\t}\n\treturn i\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":1665,"list":[{"children":[],"start":1668,"end":1674,"code":"i := 0","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":1668,"end":1669,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":1668,"name":"i","object":null}],"tokenPos":1670,"token":47,"rhs":[{"children":[],"start":1673,"end":1674,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":1673,"kind":5,"value":"0"}]},{"children":[],"start":1676,"end":1702,"code":"max := min(len(a), len(b))","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":1676,"end":1679,"code":"max","nodeType":"Identifier","column":0,"line":0,"namePos":1676,"name":"max","object":null}],"tokenPos":1680,"token":47,"rhs":[{"children":[],"start":1683,"end":1702,"code":"min(len(a), len(b))","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":1683,"end":1686,"code":"min","nodeType":"Identifier","column":0,"line":0,"namePos":1683,"name":"min","object":null},"lparen":0,"args":[{"children":[],"start":1687,"end":1693,"code":"len(a)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":1687,"end":1690,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":1687,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":1691,"end":1692,"code":"a","nodeType":"Identifier","column":0,"line":0,"namePos":1691,"name":"a","object":null}],"ellipsis":0,"rparen":0},{"children":[],"start":1695,"end":1701,"code":"len(b)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":1695,"end":1698,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":1695,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":1699,"end":1700,"code":"b","nodeType":"Identifier","column":0,"line":0,"namePos":1699,"name":"b","object":null}],"ellipsis":0,"rparen":0}],"ellipsis":0,"rparen":0}]},{"children":[],"start":1704,"end":1742,"code":"for i \u003c max \u0026\u0026 a[i] == b[i] {\n\ti++\n}","nodeType":"ForStatement","column":0,"line":0,"for":1704,"initialization":null,"condition":{"children":[],"start":1708,"end":1731,"code":"i \u003c max \u0026\u0026 a[i] == b[i]","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":1708,"end":1715,"code":"i \u003c max","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":1708,"end":1709,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":1708,"name":"i","object":null},"opPos":1710,"op":40,"rightExpression":{"children":[],"start":1712,"end":1715,"code":"max","nodeType":"Identifier","column":0,"line":0,"namePos":1712,"name":"max","object":null}},"opPos":1716,"op":34,"rightExpression":{"children":[],"start":1719,"end":1731,"code":"a[i] == b[i]","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":1719,"end":1723,"code":"a[i]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":1719,"end":1720,"code":"a","nodeType":"Identifier","column":0,"line":0,"namePos":1719,"name":"a","object":null},"leftBracket":1720,"index":{"children":[],"start":1721,"end":1722,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":1721,"name":"i","object":null},"rightBracket":1722},"opPos":1724,"op":39,"rightExpression":{"children":[],"start":1727,"end":1731,"code":"b[i]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":1727,"end":1728,"code":"b","nodeType":"Identifier","column":0,"line":0,"namePos":1727,"name":"b","object":null},"leftBracket":1728,"index":{"children":[],"start":1729,"end":1730,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":1729,"name":"i","object":null},"rightBracket":1730}}},"post":null,"body":{"children":[],"start":1732,"end":1742,"code":"{\n\ti++\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":1732,"list":[{"children":[],"start":1736,"end":1739,"code":"i++","nodeType":"IncrementDecrementStatement","column":0,"line":0,"Expression":{"children":[],"start":1736,"end":1737,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":1736,"name":"i","object":null},"TokenPosition":1737,"Token":37}],"rbrace":1741}},{"children":[],"start":1744,"end":1752,"code":"return i","nodeType":"ReturnStatement","column":0,"line":0,"return":1744,"results":[{"children":[],"start":1751,"end":1752,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":1751,"name":"i","object":null}]}],"rbrace":1753}},{"children":[],"start":1824,"end":2084,"code":"func (n *node) addChild(child *node) {\n\tif n.wildChild \u0026\u0026 len(n.children) \u003e 0 {\n\t\twildcardChild := n.children[len(n.children)-1]\n\t\tn.children = append(n.children[:len(n.children)-1], child, wildcardChild)\n\t} else {\n\t\tn.children = append(n.children, child)\n\t}\n}","nodeType":"FunctionDeclaration","column":0,"line":0,"doc":null,"receiver":{"children":[],"start":1829,"end":1838,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":1829,"list":[{"children":[],"start":1830,"end":1837,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":1830,"end":1831,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":1830,"name":"n","object":null}],"type":{"children":[],"start":1832,"end":1837,"code":"*node","nodeType":"StarExpression","column":0,"line":0,"star":1832,"expression":{"children":[],"start":1833,"end":1837,"code":"node","nodeType":"Identifier","column":0,"line":0,"namePos":1833,"name":"node","object":null}},"tag":null,"comment":null}],"closing":1837},"name":{"children":[],"start":1839,"end":1847,"code":"addChild","nodeType":"Identifier","column":0,"line":0,"namePos":1839,"name":"addChild","object":null},"type":{"children":[],"start":1824,"end":1860,"code":"func(child *node)","nodeType":"FunctionType","column":0,"line":0,"Function":1824,"TypeParams":null,"Params":{"children":[],"start":1847,"end":1860,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":1847,"list":[{"children":[],"start":1848,"end":1859,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":1848,"end":1853,"code":"child","nodeType":"Identifier","column":0,"line":0,"namePos":1848,"name":"child","object":null}],"type":{"children":[],"start":1854,"end":1859,"code":"*node","nodeType":"StarExpression","column":0,"line":0,"star":1854,"expression":{"children":[],"start":1855,"end":1859,"code":"node","nodeType":"Identifier","column":0,"line":0,"namePos":1855,"name":"node","object":null}},"tag":null,"comment":null}],"closing":1859},"Results":null},"body":{"children":[],"start":1861,"end":2084,"code":"{\n\tif n.wildChild \u0026\u0026 len(n.children) \u003e 0 {\n\t\twildcardChild := n.children[len(n.children)-1]\n\t\tn.children = append(n.children[:len(n.children)-1], child, wildcardChild)\n\t} else {\n\t\tn.children = append(n.children, child)\n\t}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":1861,"list":[{"children":[],"start":1864,"end":2082,"code":"if n.wildChild \u0026\u0026 len(n.children) \u003e 0 {\n\twildcardChild := n.children[len(n.children)-1]\n\tn.children = append(n.children[:len(n.children)-1], child, wildcardChild)\n} else {\n\tn.children = append(n.children, child)\n}","nodeType":"IfStatement","column":0,"line":0,"if":1864,"initialization":null,"condition":{"children":[],"start":1867,"end":1901,"code":"n.wildChild \u0026\u0026 len(n.children) \u003e 0","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":1867,"end":1878,"code":"n.wildChild","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":1867,"end":1868,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":1867,"name":"n","object":null},"sel":{"children":[],"start":1869,"end":1878,"code":"wildChild","nodeType":"Identifier","column":0,"line":0,"namePos":1869,"name":"wildChild","object":null}},"opPos":1879,"op":34,"rightExpression":{"children":[],"start":1882,"end":1901,"code":"len(n.children) \u003e 0","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":1882,"end":1897,"code":"len(n.children)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":1882,"end":1885,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":1882,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":1886,"end":1896,"code":"n.children","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":1886,"end":1887,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":1886,"name":"n","object":null},"sel":{"children":[],"start":1888,"end":1896,"code":"children","nodeType":"Identifier","column":0,"line":0,"namePos":1888,"name":"children","object":null}}],"ellipsis":0,"rparen":0},"opPos":1898,"op":41,"rightExpression":{"children":[],"start":1900,"end":1901,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":1900,"kind":5,"value":"0"}}},"body":{"children":[],"start":1902,"end":2031,"code":"{\n\twildcardChild := n.children[len(n.children)-1]\n\tn.children = append(n.children[:len(n.children)-1], child, wildcardChild)\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":1902,"list":[{"children":[],"start":1906,"end":1952,"code":"wildcardChild := n.children[len(n.children)-1]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":1906,"end":1919,"code":"wildcardChild","nodeType":"Identifier","column":0,"line":0,"namePos":1906,"name":"wildcardChild","object":null}],"tokenPos":1920,"token":47,"rhs":[{"children":[],"start":1923,"end":1952,"code":"n.children[len(n.children)-1]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":1923,"end":1933,"code":"n.children","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":1923,"end":1924,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":1923,"name":"n","object":null},"sel":{"children":[],"start":1925,"end":1933,"code":"children","nodeType":"Identifier","column":0,"line":0,"namePos":1925,"name":"children","object":null}},"leftBracket":1933,"index":{"children":[],"start":1934,"end":1951,"code":"len(n.children) - 1","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":1934,"end":1949,"code":"len(n.children)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":1934,"end":1937,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":1934,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":1938,"end":1948,"code":"n.children","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":1938,"end":1939,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":1938,"name":"n","object":null},"sel":{"children":[],"start":1940,"end":1948,"code":"children","nodeType":"Identifier","column":0,"line":0,"namePos":1940,"name":"children","object":null}}],"ellipsis":0,"rparen":0},"opPos":1949,"op":13,"rightExpression":{"children":[],"start":1950,"end":1951,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":1950,"kind":5,"value":"1"}},"rightBracket":1951}]},{"children":[],"start":1955,"end":2028,"code":"n.children = append(n.children[:len(n.children)-1], child, wildcardChild)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":1955,"end":1965,"code":"n.children","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":1955,"end":1956,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":1955,"name":"n","object":null},"sel":{"children":[],"start":1957,"end":1965,"code":"children","nodeType":"Identifier","column":0,"line":0,"namePos":1957,"name":"children","object":null}}],"tokenPos":1966,"token":42,"rhs":[{"children":[],"start":1968,"end":2028,"code":"append(n.children[:len(n.children)-1], child, wildcardChild)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":1968,"end":1974,"code":"append","nodeType":"Identifier","column":0,"line":0,"namePos":1968,"name":"append","object":null},"lparen":0,"args":[{"children":[],"start":1975,"end":2005,"code":"n.children[:len(n.children)-1]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":1975,"end":1985,"code":"n.children","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":1975,"end":1976,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":1975,"name":"n","object":null},"sel":{"children":[],"start":1977,"end":1985,"code":"children","nodeType":"Identifier","column":0,"line":0,"namePos":1977,"name":"children","object":null}},"leftBracket":1985,"low":null,"high":{"children":[],"start":1987,"end":2004,"code":"len(n.children) - 1","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":1987,"end":2002,"code":"len(n.children)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":1987,"end":1990,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":1987,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":1991,"end":2001,"code":"n.children","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":1991,"end":1992,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":1991,"name":"n","object":null},"sel":{"children":[],"start":1993,"end":2001,"code":"children","nodeType":"Identifier","column":0,"line":0,"namePos":1993,"name":"children","object":null}}],"ellipsis":0,"rparen":0},"opPos":2002,"op":13,"rightExpression":{"children":[],"start":2003,"end":2004,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":2003,"kind":5,"value":"1"}},"max":null,"slice3":false,"rightBracket":2004},{"children":[],"start":2007,"end":2012,"code":"child","nodeType":"Identifier","column":0,"line":0,"namePos":2007,"name":"child","object":null},{"children":[],"start":2014,"end":2027,"code":"wildcardChild","nodeType":"Identifier","column":0,"line":0,"namePos":2014,"name":"wildcardChild","object":null}],"ellipsis":0,"rparen":0}]}],"rbrace":2030},"else":{"children":[],"start":2037,"end":2082,"code":"{\n\tn.children = append(n.children, child)\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":2037,"list":[{"children":[],"start":2041,"end":2079,"code":"n.children = append(n.children, child)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":2041,"end":2051,"code":"n.children","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":2041,"end":2042,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":2041,"name":"n","object":null},"sel":{"children":[],"start":2043,"end":2051,"code":"children","nodeType":"Identifier","column":0,"line":0,"namePos":2043,"name":"children","object":null}}],"tokenPos":2052,"token":42,"rhs":[{"children":[],"start":2054,"end":2079,"code":"append(n.children, child)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":2054,"end":2060,"code":"append","nodeType":"Identifier","column":0,"line":0,"namePos":2054,"name":"append","object":null},"lparen":0,"args":[{"children":[],"start":2061,"end":2071,"code":"n.children","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":2061,"end":2062,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":2061,"name":"n","object":null},"sel":{"children":[],"start":2063,"end":2071,"code":"children","nodeType":"Identifier","column":0,"line":0,"namePos":2063,"name":"children","object":null}},{"children":[],"start":2073,"end":2078,"code":"child","nodeType":"Identifier","column":0,"line":0,"namePos":2073,"name":"child","object":null}],"ellipsis":0,"rparen":0}]}],"rbrace":2081}}],"rbrace":2083}},{"children":[],"start":2086,"end":2263,"code":"func countParams(path string) uint16 {\n\tvar n uint16\n\ts := bytesconv.StringToBytes(path)\n\tn += uint16(bytes.Count(s, strColon))\n\tn += uint16(bytes.Count(s, strStar))\n\treturn n\n}","nodeType":"FunctionDeclaration","column":0,"line":0,"doc":null,"receiver":null,"name":{"children":[],"start":2091,"end":2102,"code":"countParams","nodeType":"Identifier","column":0,"line":0,"namePos":2091,"name":"countParams","object":null},"type":{"children":[],"start":2086,"end":2122,"code":"func(path string) uint16","nodeType":"FunctionType","column":0,"line":0,"Function":2086,"TypeParams":null,"Params":{"children":[],"start":2102,"end":2115,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":2102,"list":[{"children":[],"start":2103,"end":2114,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":2103,"end":2107,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":2103,"name":"path","object":null}],"type":{"children":[],"start":2108,"end":2114,"code":"string","nodeType":"Identifier","column":0,"line":0,"namePos":2108,"name":"string","object":null},"tag":null,"comment":null}],"closing":2114},"Results":{"children":[],"start":2116,"end":2122,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":0,"list":[{"children":[],"start":2116,"end":2122,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":null,"type":{"children":[],"start":2116,"end":2122,"code":"uint16","nodeType":"Identifier","column":0,"line":0,"namePos":2116,"name":"uint16","object":null},"tag":null,"comment":null}],"closing":0}},"body":{"children":[],"start":2123,"end":2263,"code":"{\n\tvar n uint16\n\ts := bytesconv.StringToBytes(path)\n\tn += uint16(bytes.Count(s, strColon))\n\tn += uint16(bytes.Count(s, strStar))\n\treturn n\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":2123,"list":[{"children":[],"start":2126,"end":2138,"code":"var n uint16","nodeType":"DeclarationStatement","column":0,"line":0,"declaration":{"children":[],"start":2126,"end":2138,"code":"var n uint16","nodeType":"GenericDeclaration","column":0,"line":0,"doc":null,"tokenPosition":2126,"token":85,"lparen":0,"specifications":[{"children":[],"start":2130,"end":2138,"code":"n uint16","nodeType":"ValueSpecification","column":0,"line":0,"doc":null,"names":[{"children":[],"start":2130,"end":2131,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":2130,"name":"n","object":null}],"type":{"children":[],"start":2132,"end":2138,"code":"uint16","nodeType":"Identifier","column":0,"line":0,"namePos":2132,"name":"uint16","object":null},"values":[],"comment":null}],"rparen":0}},{"children":[],"start":2140,"end":2174,"code":"s := bytesconv.StringToBytes(path)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":2140,"end":2141,"code":"s","nodeType":"Identifier","column":0,"line":0,"namePos":2140,"name":"s","object":null}],"tokenPos":2142,"token":47,"rhs":[{"children":[],"start":2145,"end":2174,"code":"bytesconv.StringToBytes(path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":2145,"end":2168,"code":"bytesconv.StringToBytes","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":2145,"end":2154,"code":"bytesconv","nodeType":"Identifier","column":0,"line":0,"namePos":2145,"name":"bytesconv","object":null},"sel":{"children":[],"start":2155,"end":2168,"code":"StringToBytes","nodeType":"Identifier","column":0,"line":0,"namePos":2155,"name":"StringToBytes","object":null}},"lparen":0,"args":[{"children":[],"start":2169,"end":2173,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":2169,"name":"path","object":null}],"ellipsis":0,"rparen":0}]},{"children":[],"start":2176,"end":2213,"code":"n += uint16(bytes.Count(s, strColon))","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":2176,"end":2177,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":2176,"name":"n","object":null}],"tokenPos":2178,"token":23,"rhs":[{"children":[],"start":2181,"end":2213,"code":"uint16(bytes.Count(s, strColon))","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":2181,"end":2187,"code":"uint16","nodeType":"Identifier","column":0,"line":0,"namePos":2181,"name":"uint16","object":null},"lparen":0,"args":[{"children":[],"start":2188,"end":2212,"code":"bytes.Count(s, strColon)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":2188,"end":2199,"code":"bytes.Count","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":2188,"end":2193,"code":"bytes","nodeType":"Identifier","column":0,"line":0,"namePos":2188,"name":"bytes","object":null},"sel":{"children":[],"start":2194,"end":2199,"code":"Count","nodeType":"Identifier","column":0,"line":0,"namePos":2194,"name":"Count","object":null}},"lparen":0,"args":[{"children":[],"start":2200,"end":2201,"code":"s","nodeType":"Identifier","column":0,"line":0,"namePos":2200,"name":"s","object":null},{"children":[],"start":2203,"end":2211,"code":"strColon","nodeType":"Identifier","column":0,"line":0,"namePos":2203,"name":"strColon","object":null}],"ellipsis":0,"rparen":0}],"ellipsis":0,"rparen":0}]},{"children":[],"start":2215,"end":2251,"code":"n += uint16(bytes.Count(s, strStar))","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":2215,"end":2216,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":2215,"name":"n","object":null}],"tokenPos":2217,"token":23,"rhs":[{"children":[],"start":2220,"end":2251,"code":"uint16(bytes.Count(s, strStar))","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":2220,"end":2226,"code":"uint16","nodeType":"Identifier","column":0,"line":0,"namePos":2220,"name":"uint16","object":null},"lparen":0,"args":[{"children":[],"start":2227,"end":2250,"code":"bytes.Count(s, strStar)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":2227,"end":2238,"code":"bytes.Count","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":2227,"end":2232,"code":"bytes","nodeType":"Identifier","column":0,"line":0,"namePos":2227,"name":"bytes","object":null},"sel":{"children":[],"start":2233,"end":2238,"code":"Count","nodeType":"Identifier","column":0,"line":0,"namePos":2233,"name":"Count","object":null}},"lparen":0,"args":[{"children":[],"start":2239,"end":2240,"code":"s","nodeType":"Identifier","column":0,"line":0,"namePos":2239,"name":"s","object":null},{"children":[],"start":2242,"end":2249,"code":"strStar","nodeType":"Identifier","column":0,"line":0,"namePos":2242,"name":"strStar","object":null}],"ellipsis":0,"rparen":0}],"ellipsis":0,"rparen":0}]},{"children":[],"start":2253,"end":2261,"code":"return n","nodeType":"ReturnStatement","column":0,"line":0,"return":2253,"results":[{"children":[],"start":2260,"end":2261,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":2260,"name":"n","object":null}]}],"rbrace":2262}},{"children":[],"start":2265,"end":2384,"code":"func countSections(path string) uint16 {\n\ts := bytesconv.StringToBytes(path)\n\treturn uint16(bytes.Count(s, strSlash))\n}","nodeType":"FunctionDeclaration","column":0,"line":0,"doc":null,"receiver":null,"name":{"children":[],"start":2270,"end":2283,"code":"countSections","nodeType":"Identifier","column":0,"line":0,"namePos":2270,"name":"countSections","object":null},"type":{"children":[],"start":2265,"end":2303,"code":"func(path string) uint16","nodeType":"FunctionType","column":0,"line":0,"Function":2265,"TypeParams":null,"Params":{"children":[],"start":2283,"end":2296,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":2283,"list":[{"children":[],"start":2284,"end":2295,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":2284,"end":2288,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":2284,"name":"path","object":null}],"type":{"children":[],"start":2289,"end":2295,"code":"string","nodeType":"Identifier","column":0,"line":0,"namePos":2289,"name":"string","object":null},"tag":null,"comment":null}],"closing":2295},"Results":{"children":[],"start":2297,"end":2303,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":0,"list":[{"children":[],"start":2297,"end":2303,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":null,"type":{"children":[],"start":2297,"end":2303,"code":"uint16","nodeType":"Identifier","column":0,"line":0,"namePos":2297,"name":"uint16","object":null},"tag":null,"comment":null}],"closing":0}},"body":{"children":[],"start":2304,"end":2384,"code":"{\n\ts := bytesconv.StringToBytes(path)\n\treturn uint16(bytes.Count(s, strSlash))\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":2304,"list":[{"children":[],"start":2307,"end":2341,"code":"s := bytesconv.StringToBytes(path)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":2307,"end":2308,"code":"s","nodeType":"Identifier","column":0,"line":0,"namePos":2307,"name":"s","object":null}],"tokenPos":2309,"token":47,"rhs":[{"children":[],"start":2312,"end":2341,"code":"bytesconv.StringToBytes(path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":2312,"end":2335,"code":"bytesconv.StringToBytes","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":2312,"end":2321,"code":"bytesconv","nodeType":"Identifier","column":0,"line":0,"namePos":2312,"name":"bytesconv","object":null},"sel":{"children":[],"start":2322,"end":2335,"code":"StringToBytes","nodeType":"Identifier","column":0,"line":0,"namePos":2322,"name":"StringToBytes","object":null}},"lparen":0,"args":[{"children":[],"start":2336,"end":2340,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":2336,"name":"path","object":null}],"ellipsis":0,"rparen":0}]},{"children":[],"start":2343,"end":2382,"code":"return uint16(bytes.Count(s, strSlash))","nodeType":"ReturnStatement","column":0,"line":0,"return":2343,"results":[{"children":[],"start":2350,"end":2382,"code":"uint16(bytes.Count(s, strSlash))","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":2350,"end":2356,"code":"uint16","nodeType":"Identifier","column":0,"line":0,"namePos":2350,"name":"uint16","object":null},"lparen":0,"args":[{"children":[],"start":2357,"end":2381,"code":"bytes.Count(s, strSlash)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":2357,"end":2368,"code":"bytes.Count","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":2357,"end":2362,"code":"bytes","nodeType":"Identifier","column":0,"line":0,"namePos":2357,"name":"bytes","object":null},"sel":{"children":[],"start":2363,"end":2368,"code":"Count","nodeType":"Identifier","column":0,"line":0,"namePos":2363,"name":"Count","object":null}},"lparen":0,"args":[{"children":[],"start":2369,"end":2370,"code":"s","nodeType":"Identifier","column":0,"line":0,"namePos":2369,"name":"s","object":null},{"children":[],"start":2372,"end":2380,"code":"strSlash","nodeType":"Identifier","column":0,"line":0,"namePos":2372,"name":"strSlash","object":null}],"ellipsis":0,"rparen":0}],"ellipsis":0,"rparen":0}]}],"rbrace":2383}},{"children":[],"start":2386,"end":2405,"code":"type nodeType uint8","nodeType":"GenericDeclaration","column":0,"line":0,"doc":null,"tokenPosition":2386,"token":84,"lparen":0,"specifications":[{"children":[],"start":2391,"end":2405,"code":"nodeType uint8","nodeType":"TypeSpecification","column":0,"line":0,"doc":null,"name":{"children":[],"start":2391,"end":2399,"code":"nodeType","nodeType":"Identifier","column":0,"line":0,"namePos":2391,"name":"nodeType","object":null},"typeParams":null,"assign":0,"type":{"children":[],"start":2400,"end":2405,"code":"uint8","nodeType":"Identifier","column":0,"line":0,"namePos":2400,"name":"uint8","object":null},"comment":null}],"rparen":0},{"children":[],"start":2407,"end":2463,"code":"const (\n\tstatic\tnodeType\t= iota\n\troot\n\tparam\n\tcatchAll\n)","nodeType":"GenericDeclaration","column":0,"line":0,"doc":null,"tokenPosition":2407,"token":64,"lparen":2413,"specifications":[{"children":[],"start":2416,"end":2438,"code":"static nodeType = iota","nodeType":"ValueSpecification","column":0,"line":0,"doc":null,"names":[{"children":[],"start":2416,"end":2422,"code":"static","nodeType":"Identifier","column":0,"line":0,"namePos":2416,"name":"static","object":null}],"type":{"children":[],"start":2423,"end":2431,"code":"nodeType","nodeType":"Identifier","column":0,"line":0,"namePos":2423,"name":"nodeType","object":null},"values":[{"children":[],"start":2434,"end":2438,"code":"iota","nodeType":"Identifier","column":0,"line":0,"namePos":2434,"name":"iota","object":null}],"comment":null},{"children":[],"start":2440,"end":2444,"code":"root","nodeType":"ValueSpecification","column":0,"line":0,"doc":null,"names":[{"children":[],"start":2440,"end":2444,"code":"root","nodeType":"Identifier","column":0,"line":0,"namePos":2440,"name":"root","object":null}],"type":null,"values":[],"comment":null},{"children":[],"start":2446,"end":2451,"code":"param","nodeType":"ValueSpecification","column":0,"line":0,"doc":null,"names":[{"children":[],"start":2446,"end":2451,"code":"param","nodeType":"Identifier","column":0,"line":0,"namePos":2446,"name":"param","object":null}],"type":null,"values":[],"comment":null},{"children":[],"start":2453,"end":2461,"code":"catchAll","nodeType":"ValueSpecification","column":0,"line":0,"doc":null,"names":[{"children":[],"start":2453,"end":2461,"code":"catchAll","nodeType":"Identifier","column":0,"line":0,"namePos":2453,"name":"catchAll","object":null}],"type":null,"values":[],"comment":null}],"rparen":2462},{"children":[],"start":2465,"end":2705,"code":"type node struct {\n\tpath\t\tstring\n\tindices\t\tstring\n\twildChild\tbool\n\tnType\t\tnodeType\n\tpriority\tuint32\n\tchildren\t[]*node\n\thandlers\tHandlersChain\n\tfullPath\tstring\n}","nodeType":"GenericDeclaration","column":0,"line":0,"doc":null,"tokenPosition":2465,"token":84,"lparen":0,"specifications":[{"children":[],"start":2470,"end":2705,"code":"node struct {\n\tpath\t\tstring\n\tindices\t\tstring\n\twildChild\tbool\n\tnType\t\tnodeType\n\tpriority\tuint32\n\tchildren\t[]*node\n\thandlers\tHandlersChain\n\tfullPath\tstring\n}","nodeType":"TypeSpecification","column":0,"line":0,"doc":null,"name":{"children":[],"start":2470,"end":2474,"code":"node","nodeType":"Identifier","column":0,"line":0,"namePos":2470,"name":"node","object":null},"typeParams":null,"assign":0,"type":{"children":[],"start":2475,"end":2705,"code":"struct {\n\tpath\t\tstring\n\tindices\t\tstring\n\twildChild\tbool\n\tnType\t\tnodeType\n\tpriority\tuint32\n\tchildren\t[]*node\n\thandlers\tHandlersChain\n\tfullPath\tstring\n}","nodeType":"StructType","column":0,"line":0,"struct":2475,"fields":{"children":[],"start":2482,"end":2705,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":2482,"list":[{"children":[],"start":2485,"end":2501,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":2485,"end":2489,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":2485,"name":"path","object":null}],"type":{"children":[],"start":2495,"end":2501,"code":"string","nodeType":"Identifier","column":0,"line":0,"namePos":2495,"name":"string","object":null},"tag":null,"comment":null},{"children":[],"start":2503,"end":2519,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":2503,"end":2510,"code":"indices","nodeType":"Identifier","column":0,"line":0,"namePos":2503,"name":"indices","object":null}],"type":{"children":[],"start":2513,"end":2519,"code":"string","nodeType":"Identifier","column":0,"line":0,"namePos":2513,"name":"string","object":null},"tag":null,"comment":null},{"children":[],"start":2521,"end":2535,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":2521,"end":2530,"code":"wildChild","nodeType":"Identifier","column":0,"line":0,"namePos":2521,"name":"wildChild","object":null}],"type":{"children":[],"start":2531,"end":2535,"code":"bool","nodeType":"Identifier","column":0,"line":0,"namePos":2531,"name":"bool","object":null},"tag":null,"comment":null},{"children":[],"start":2537,"end":2555,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":2537,"end":2542,"code":"nType","nodeType":"Identifier","column":0,"line":0,"namePos":2537,"name":"nType","object":null}],"type":{"children":[],"start":2547,"end":2555,"code":"nodeType","nodeType":"Identifier","column":0,"line":0,"namePos":2547,"name":"nodeType","object":null},"tag":null,"comment":null},{"children":[],"start":2557,"end":2573,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":2557,"end":2565,"code":"priority","nodeType":"Identifier","column":0,"line":0,"namePos":2557,"name":"priority","object":null}],"type":{"children":[],"start":2567,"end":2573,"code":"uint32","nodeType":"Identifier","column":0,"line":0,"namePos":2567,"name":"uint32","object":null},"tag":null,"comment":null},{"children":[],"start":2575,"end":2592,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":2575,"end":2583,"code":"children","nodeType":"Identifier","column":0,"line":0,"namePos":2575,"name":"children","object":null}],"type":{"children":[],"start":2585,"end":2592,"code":"[]*node","nodeType":"ArrayType","column":0,"line":0,"leftBracket":2585,"length":null,"element":{"children":[],"start":2587,"end":2592,"code":"*node","nodeType":"StarExpression","column":0,"line":0,"star":2587,"expression":{"children":[],"start":2588,"end":2592,"code":"node","nodeType":"Identifier","column":0,"line":0,"namePos":2588,"name":"node","object":null}}},"tag":null,"comment":null},{"children":[],"start":2662,"end":2685,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":2662,"end":2670,"code":"handlers","nodeType":"Identifier","column":0,"line":0,"namePos":2662,"name":"handlers","object":null}],"type":{"children":[],"start":2672,"end":2685,"code":"HandlersChain","nodeType":"Identifier","column":0,"line":0,"namePos":2672,"name":"HandlersChain","object":null},"tag":null,"comment":null},{"children":[],"start":2687,"end":2703,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":2687,"end":2695,"code":"fullPath","nodeType":"Identifier","column":0,"line":0,"namePos":2687,"name":"fullPath","object":null}],"type":{"children":[],"start":2697,"end":2703,"code":"string","nodeType":"Identifier","column":0,"line":0,"namePos":2697,"name":"string","object":null},"tag":null,"comment":null}],"closing":2704},"incomplete":false},"comment":null}],"rparen":0},{"children":[],"start":2775,"end":3355,"code":"func (n *node) incrementChildPrio(pos int) int {\n\tcs := n.children\n\tcs[pos].priority++\n\tprio := cs[pos].priority\n\tnewPos := pos\n\tfor ; newPos \u003e 0 \u0026\u0026 cs[newPos-1].priority \u003c prio; newPos-- {\n\t\tcs[newPos-1], cs[newPos] = cs[newPos], cs[newPos-1]\n\t}\n\tif newPos != pos {\n\t\tn.indices = n.indices[:newPos] + n.indices[pos:pos+1] + n.indices[newPos:pos] + n.indices[pos+1:]\n\t}\n\treturn newPos\n}","nodeType":"FunctionDeclaration","column":0,"line":0,"doc":null,"receiver":{"children":[],"start":2780,"end":2789,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":2780,"list":[{"children":[],"start":2781,"end":2788,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":2781,"end":2782,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":2781,"name":"n","object":null}],"type":{"children":[],"start":2783,"end":2788,"code":"*node","nodeType":"StarExpression","column":0,"line":0,"star":2783,"expression":{"children":[],"start":2784,"end":2788,"code":"node","nodeType":"Identifier","column":0,"line":0,"namePos":2784,"name":"node","object":null}},"tag":null,"comment":null}],"closing":2788},"name":{"children":[],"start":2790,"end":2808,"code":"incrementChildPrio","nodeType":"Identifier","column":0,"line":0,"namePos":2790,"name":"incrementChildPrio","object":null},"type":{"children":[],"start":2775,"end":2821,"code":"func(pos int) int","nodeType":"FunctionType","column":0,"line":0,"Function":2775,"TypeParams":null,"Params":{"children":[],"start":2808,"end":2817,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":2808,"list":[{"children":[],"start":2809,"end":2816,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":2809,"end":2812,"code":"pos","nodeType":"Identifier","column":0,"line":0,"namePos":2809,"name":"pos","object":null}],"type":{"children":[],"start":2813,"end":2816,"code":"int","nodeType":"Identifier","column":0,"line":0,"namePos":2813,"name":"int","object":null},"tag":null,"comment":null}],"closing":2816},"Results":{"children":[],"start":2818,"end":2821,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":0,"list":[{"children":[],"start":2818,"end":2821,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":null,"type":{"children":[],"start":2818,"end":2821,"code":"int","nodeType":"Identifier","column":0,"line":0,"namePos":2818,"name":"int","object":null},"tag":null,"comment":null}],"closing":0}},"body":{"children":[],"start":2822,"end":3355,"code":"{\n\tcs := n.children\n\tcs[pos].priority++\n\tprio := cs[pos].priority\n\tnewPos := pos\n\tfor ; newPos \u003e 0 \u0026\u0026 cs[newPos-1].priority \u003c prio; newPos-- {\n\t\tcs[newPos-1], cs[newPos] = cs[newPos], cs[newPos-1]\n\t}\n\tif newPos != pos {\n\t\tn.indices = n.indices[:newPos] + n.indices[pos:pos+1] + n.indices[newPos:pos] + n.indices[pos+1:]\n\t}\n\treturn newPos\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":2822,"list":[{"children":[],"start":2825,"end":2841,"code":"cs := n.children","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":2825,"end":2827,"code":"cs","nodeType":"Identifier","column":0,"line":0,"namePos":2825,"name":"cs","object":null}],"tokenPos":2828,"token":47,"rhs":[{"children":[],"start":2831,"end":2841,"code":"n.children","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":2831,"end":2832,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":2831,"name":"n","object":null},"sel":{"children":[],"start":2833,"end":2841,"code":"children","nodeType":"Identifier","column":0,"line":0,"namePos":2833,"name":"children","object":null}}]},{"children":[],"start":2843,"end":2861,"code":"cs[pos].priority++","nodeType":"IncrementDecrementStatement","column":0,"line":0,"Expression":{"children":[],"start":2843,"end":2859,"code":"cs[pos].priority","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":2843,"end":2850,"code":"cs[pos]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":2843,"end":2845,"code":"cs","nodeType":"Identifier","column":0,"line":0,"namePos":2843,"name":"cs","object":null},"leftBracket":2845,"index":{"children":[],"start":2846,"end":2849,"code":"pos","nodeType":"Identifier","column":0,"line":0,"namePos":2846,"name":"pos","object":null},"rightBracket":2849},"sel":{"children":[],"start":2851,"end":2859,"code":"priority","nodeType":"Identifier","column":0,"line":0,"namePos":2851,"name":"priority","object":null}},"TokenPosition":2859,"Token":37},{"children":[],"start":2863,"end":2887,"code":"prio := cs[pos].priority","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":2863,"end":2867,"code":"prio","nodeType":"Identifier","column":0,"line":0,"namePos":2863,"name":"prio","object":null}],"tokenPos":2868,"token":47,"rhs":[{"children":[],"start":2871,"end":2887,"code":"cs[pos].priority","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":2871,"end":2878,"code":"cs[pos]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":2871,"end":2873,"code":"cs","nodeType":"Identifier","column":0,"line":0,"namePos":2871,"name":"cs","object":null},"leftBracket":2873,"index":{"children":[],"start":2874,"end":2877,"code":"pos","nodeType":"Identifier","column":0,"line":0,"namePos":2874,"name":"pos","object":null},"rightBracket":2877},"sel":{"children":[],"start":2879,"end":2887,"code":"priority","nodeType":"Identifier","column":0,"line":0,"namePos":2879,"name":"priority","object":null}}]},{"children":[],"start":2926,"end":2939,"code":"newPos := pos","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":2926,"end":2932,"code":"newPos","nodeType":"Identifier","column":0,"line":0,"namePos":2926,"name":"newPos","object":null}],"tokenPos":2933,"token":47,"rhs":[{"children":[],"start":2936,"end":2939,"code":"pos","nodeType":"Identifier","column":0,"line":0,"namePos":2936,"name":"pos","object":null}]},{"children":[],"start":2941,"end":3083,"code":"for ; newPos \u003e 0 \u0026\u0026 cs[newPos-1].priority \u003c prio; newPos-- {\n\tcs[newPos-1], cs[newPos] = cs[newPos], cs[newPos-1]\n}","nodeType":"ForStatement","column":0,"line":0,"for":2941,"initialization":null,"condition":{"children":[],"start":2947,"end":2989,"code":"newPos \u003e 0 \u0026\u0026 cs[newPos-1].priority \u003c prio","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":2947,"end":2957,"code":"newPos \u003e 0","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":2947,"end":2953,"code":"newPos","nodeType":"Identifier","column":0,"line":0,"namePos":2947,"name":"newPos","object":null},"opPos":2954,"op":41,"rightExpression":{"children":[],"start":2956,"end":2957,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":2956,"kind":5,"value":"0"}},"opPos":2958,"op":34,"rightExpression":{"children":[],"start":2961,"end":2989,"code":"cs[newPos-1].priority \u003c prio","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":2961,"end":2982,"code":"cs[newPos-1].priority","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":2961,"end":2973,"code":"cs[newPos-1]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":2961,"end":2963,"code":"cs","nodeType":"Identifier","column":0,"line":0,"namePos":2961,"name":"cs","object":null},"leftBracket":2963,"index":{"children":[],"start":2964,"end":2972,"code":"newPos - 1","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":2964,"end":2970,"code":"newPos","nodeType":"Identifier","column":0,"line":0,"namePos":2964,"name":"newPos","object":null},"opPos":2970,"op":13,"rightExpression":{"children":[],"start":2971,"end":2972,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":2971,"kind":5,"value":"1"}},"rightBracket":2972},"sel":{"children":[],"start":2974,"end":2982,"code":"priority","nodeType":"Identifier","column":0,"line":0,"namePos":2974,"name":"priority","object":null}},"opPos":2983,"op":40,"rightExpression":{"children":[],"start":2985,"end":2989,"code":"prio","nodeType":"Identifier","column":0,"line":0,"namePos":2985,"name":"prio","object":null}}},"post":{"children":[],"start":2991,"end":2999,"code":"newPos--","nodeType":"IncrementDecrementStatement","column":0,"line":0,"Expression":{"children":[],"start":2991,"end":2997,"code":"newPos","nodeType":"Identifier","column":0,"line":0,"namePos":2991,"name":"newPos","object":null},"TokenPosition":2997,"Token":38},"body":{"children":[],"start":3000,"end":3083,"code":"{\n\tcs[newPos-1], cs[newPos] = cs[newPos], cs[newPos-1]\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":3000,"list":[{"children":[],"start":3029,"end":3080,"code":"cs[newPos-1], cs[newPos] = cs[newPos], cs[newPos-1]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":3029,"end":3041,"code":"cs[newPos-1]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":3029,"end":3031,"code":"cs","nodeType":"Identifier","column":0,"line":0,"namePos":3029,"name":"cs","object":null},"leftBracket":3031,"index":{"children":[],"start":3032,"end":3040,"code":"newPos - 1","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":3032,"end":3038,"code":"newPos","nodeType":"Identifier","column":0,"line":0,"namePos":3032,"name":"newPos","object":null},"opPos":3038,"op":13,"rightExpression":{"children":[],"start":3039,"end":3040,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":3039,"kind":5,"value":"1"}},"rightBracket":3040},{"children":[],"start":3043,"end":3053,"code":"cs[newPos]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":3043,"end":3045,"code":"cs","nodeType":"Identifier","column":0,"line":0,"namePos":3043,"name":"cs","object":null},"leftBracket":3045,"index":{"children":[],"start":3046,"end":3052,"code":"newPos","nodeType":"Identifier","column":0,"line":0,"namePos":3046,"name":"newPos","object":null},"rightBracket":3052}],"tokenPos":3054,"token":42,"rhs":[{"children":[],"start":3056,"end":3066,"code":"cs[newPos]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":3056,"end":3058,"code":"cs","nodeType":"Identifier","column":0,"line":0,"namePos":3056,"name":"cs","object":null},"leftBracket":3058,"index":{"children":[],"start":3059,"end":3065,"code":"newPos","nodeType":"Identifier","column":0,"line":0,"namePos":3059,"name":"newPos","object":null},"rightBracket":3065},{"children":[],"start":3068,"end":3080,"code":"cs[newPos-1]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":3068,"end":3070,"code":"cs","nodeType":"Identifier","column":0,"line":0,"namePos":3068,"name":"cs","object":null},"leftBracket":3070,"index":{"children":[],"start":3071,"end":3079,"code":"newPos - 1","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":3071,"end":3077,"code":"newPos","nodeType":"Identifier","column":0,"line":0,"namePos":3071,"name":"newPos","object":null},"opPos":3077,"op":13,"rightExpression":{"children":[],"start":3078,"end":3079,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":3078,"kind":5,"value":"1"}},"rightBracket":3079}]}],"rbrace":3082}},{"children":[],"start":3118,"end":3337,"code":"if newPos != pos {\n\tn.indices = n.indices[:newPos] + n.indices[pos:pos+1] + n.indices[newPos:pos] + n.indices[pos+1:]\n}","nodeType":"IfStatement","column":0,"line":0,"if":3118,"initialization":null,"condition":{"children":[],"start":3121,"end":3134,"code":"newPos != pos","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":3121,"end":3127,"code":"newPos","nodeType":"Identifier","column":0,"line":0,"namePos":3121,"name":"newPos","object":null},"opPos":3128,"op":44,"rightExpression":{"children":[],"start":3131,"end":3134,"code":"pos","nodeType":"Identifier","column":0,"line":0,"namePos":3131,"name":"pos","object":null}},"body":{"children":[],"start":3135,"end":3337,"code":"{\n\tn.indices = n.indices[:newPos] + n.indices[pos:pos+1] + n.indices[newPos:pos] + n.indices[pos+1:]\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":3135,"list":[{"children":[],"start":3139,"end":3304,"code":"n.indices = n.indices[:newPos] + n.indices[pos:pos+1] + n.indices[newPos:pos] + n.indices[pos+1:]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":3139,"end":3148,"code":"n.indices","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":3139,"end":3140,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":3139,"name":"n","object":null},"sel":{"children":[],"start":3141,"end":3148,"code":"indices","nodeType":"Identifier","column":0,"line":0,"namePos":3141,"name":"indices","object":null}}],"tokenPos":3149,"token":42,"rhs":[{"children":[],"start":3151,"end":3304,"code":"n.indices[:newPos] + n.indices[pos:pos+1] + n.indices[newPos:pos] + n.indices[pos+1:]","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":3151,"end":3284,"code":"n.indices[:newPos] + n.indices[pos:pos+1] + n.indices[newPos:pos]","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":3151,"end":3231,"code":"n.indices[:newPos] + n.indices[pos:pos+1]","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":3151,"end":3169,"code":"n.indices[:newPos]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":3151,"end":3160,"code":"n.indices","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":3151,"end":3152,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":3151,"name":"n","object":null},"sel":{"children":[],"start":3153,"end":3160,"code":"indices","nodeType":"Identifier","column":0,"line":0,"namePos":3153,"name":"indices","object":null}},"leftBracket":3160,"low":null,"high":{"children":[],"start":3162,"end":3168,"code":"newPos","nodeType":"Identifier","column":0,"line":0,"namePos":3162,"name":"newPos","object":null},"max":null,"slice3":false,"rightBracket":3168},"opPos":3170,"op":12,"rightExpression":{"children":[],"start":3211,"end":3231,"code":"n.indices[pos : pos+1]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":3211,"end":3220,"code":"n.indices","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":3211,"end":3212,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":3211,"name":"n","object":null},"sel":{"children":[],"start":3213,"end":3220,"code":"indices","nodeType":"Identifier","column":0,"line":0,"namePos":3213,"name":"indices","object":null}},"leftBracket":3220,"low":{"children":[],"start":3221,"end":3224,"code":"pos","nodeType":"Identifier","column":0,"line":0,"namePos":3221,"name":"pos","object":null},"high":{"children":[],"start":3225,"end":3230,"code":"pos + 1","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":3225,"end":3228,"code":"pos","nodeType":"Identifier","column":0,"line":0,"namePos":3225,"name":"pos","object":null},"opPos":3228,"op":12,"rightExpression":{"children":[],"start":3229,"end":3230,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":3229,"kind":5,"value":"1"}},"max":null,"slice3":false,"rightBracket":3230}},"opPos":3232,"op":12,"rightExpression":{"children":[],"start":3263,"end":3284,"code":"n.indices[newPos:pos]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":3263,"end":3272,"code":"n.indices","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":3263,"end":3264,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":3263,"name":"n","object":null},"sel":{"children":[],"start":3265,"end":3272,"code":"indices","nodeType":"Identifier","column":0,"line":0,"namePos":3265,"name":"indices","object":null}},"leftBracket":3272,"low":{"children":[],"start":3273,"end":3279,"code":"newPos","nodeType":"Identifier","column":0,"line":0,"namePos":3273,"name":"newPos","object":null},"high":{"children":[],"start":3280,"end":3283,"code":"pos","nodeType":"Identifier","column":0,"line":0,"namePos":3280,"name":"pos","object":null},"max":null,"slice3":false,"rightBracket":3283}},"opPos":3285,"op":12,"rightExpression":{"children":[],"start":3287,"end":3304,"code":"n.indices[pos+1:]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":3287,"end":3296,"code":"n.indices","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":3287,"end":3288,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":3287,"name":"n","object":null},"sel":{"children":[],"start":3289,"end":3296,"code":"indices","nodeType":"Identifier","column":0,"line":0,"namePos":3289,"name":"indices","object":null}},"leftBracket":3296,"low":{"children":[],"start":3297,"end":3302,"code":"pos + 1","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":3297,"end":3300,"code":"pos","nodeType":"Identifier","column":0,"line":0,"namePos":3297,"name":"pos","object":null},"opPos":3300,"op":12,"rightExpression":{"children":[],"start":3301,"end":3302,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":3301,"kind":5,"value":"1"}},"high":null,"max":null,"slice3":false,"rightBracket":3303}}]}],"rbrace":3336},"else":null},{"children":[],"start":3340,"end":3353,"code":"return newPos","nodeType":"ReturnStatement","column":0,"line":0,"return":3340,"results":[{"children":[],"start":3347,"end":3353,"code":"newPos","nodeType":"Identifier","column":0,"line":0,"namePos":3347,"name":"newPos","object":null}]}],"rbrace":3354}},{"children":[],"start":3441,"end":6456,"code":"func (n *node) addRoute(path string, handlers HandlersChain) {\n\tfullPath := path\n\tn.priority++\n\tif len(n.path) == 0 \u0026\u0026 len(n.children) == 0 {\n\t\tn.insertChild(path, fullPath, handlers)\n\t\tn.nType = root\n\t\treturn\n\t}\n\tparentFullPathIndex := 0\nwalk:\n\tfor {\n\t\ti := longestCommonPrefix(path, n.path)\n\t\tif i \u003c len(n.path) {\n\t\t\tchild := node{path: n.path[i:], wildChild: n.wildChild, nType: static, indices: n.indices, children: n.children, handlers: n.handlers, priority: n.priority - 1, fullPath: n.fullPath}\n\t\t\tn.children = []*node{\u0026child}\n\t\t\tn.indices = bytesconv.BytesToString([]byte{n.path[i]})\n\t\t\tn.path = path[:i]\n\t\t\tn.handlers = nil\n\t\t\tn.wildChild = false\n\t\t\tn.fullPath = fullPath[:parentFullPathIndex+i]\n\t\t}\n\t\tif i \u003c len(path) {\n\t\t\tpath = path[i:]\n\t\t\tc := path[0]\n\t\t\tif n.nType == param \u0026\u0026 c == '/' \u0026\u0026 len(n.children) == 1 {\n\t\t\t\tparentFullPathIndex += len(n.path)\n\t\t\t\tn = n.children[0]\n\t\t\t\tn.priority++\n\t\t\t\tcontinue walk\n\t\t\t}\n\t\t\tfor i, max := 0, len(n.indices); i \u003c max; i++ {\n\t\t\t\tif c == n.indices[i] {\n\t\t\t\t\tparentFullPathIndex += len(n.path)\n\t\t\t\t\ti = n.incrementChildPrio(i)\n\t\t\t\t\tn = n.children[i]\n\t\t\t\t\tcontinue walk\n\t\t\t\t}\n\t\t\t}\n\t\t\tif c != ':' \u0026\u0026 c != '*' \u0026\u0026 n.nType != catchAll {\n\t\t\t\tn.indices += bytesconv.BytesToString([]byte{c})\n\t\t\t\tchild := \u0026node{fullPath: fullPath}\n\t\t\t\tn.addChild(child)\n\t\t\t\tn.incrementChildPrio(len(n.indices) - 1)\n\t\t\t\tn = child\n\t\t\t} else if n.wildChild {\n\t\t\t\tn = n.children[len(n.children)-1]\n\t\t\t\tn.priority++\n\t\t\t\tif len(path) \u003e= len(n.path) \u0026\u0026 n.path == path[:len(n.path)] \u0026\u0026 n.nType != catchAll \u0026\u0026 (len(n.path) \u003e= len(path) || path[len(n.path)] == '/') {\n\t\t\t\t\tcontinue walk\n\t\t\t\t}\n\t\t\t\tpathSeg := path\n\t\t\t\tif n.nType != catchAll {\n\t\t\t\t\tpathSeg = strings.SplitN(pathSeg, \"/\", 2)[0]\n\t\t\t\t}\n\t\t\t\tprefix := fullPath[:strings.Index(fullPath, pathSeg)] + n.path\n\t\t\t\tpanic(\"'\" + pathSeg + \"' in new path '\" + fullPath + \"' conflicts with existing wildcard '\" + n.path + \"' in existing prefix '\" + prefix + \"'\")\n\t\t\t}\n\t\t\tn.insertChild(path, fullPath, handlers)\n\t\t\treturn\n\t\t}\n\t\tif n.handlers != nil {\n\t\t\tpanic(\"handlers are already registered for path '\" + fullPath + \"'\")\n\t\t}\n\t\tn.handlers = handlers\n\t\tn.fullPath = fullPath\n\t\treturn\n\t}\n}","nodeType":"FunctionDeclaration","column":0,"line":0,"doc":null,"receiver":{"children":[],"start":3446,"end":3455,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":3446,"list":[{"children":[],"start":3447,"end":3454,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":3447,"end":3448,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":3447,"name":"n","object":null}],"type":{"children":[],"start":3449,"end":3454,"code":"*node","nodeType":"StarExpression","column":0,"line":0,"star":3449,"expression":{"children":[],"start":3450,"end":3454,"code":"node","nodeType":"Identifier","column":0,"line":0,"namePos":3450,"name":"node","object":null}},"tag":null,"comment":null}],"closing":3454},"name":{"children":[],"start":3456,"end":3464,"code":"addRoute","nodeType":"Identifier","column":0,"line":0,"namePos":3456,"name":"addRoute","object":null},"type":{"children":[],"start":3441,"end":3501,"code":"func(path string, handlers HandlersChain)","nodeType":"FunctionType","column":0,"line":0,"Function":3441,"TypeParams":null,"Params":{"children":[],"start":3464,"end":3501,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":3464,"list":[{"children":[],"start":3465,"end":3476,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":3465,"end":3469,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":3465,"name":"path","object":null}],"type":{"children":[],"start":3470,"end":3476,"code":"string","nodeType":"Identifier","column":0,"line":0,"namePos":3470,"name":"string","object":null},"tag":null,"comment":null},{"children":[],"start":3478,"end":3500,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":3478,"end":3486,"code":"handlers","nodeType":"Identifier","column":0,"line":0,"namePos":3478,"name":"handlers","object":null}],"type":{"children":[],"start":3487,"end":3500,"code":"HandlersChain","nodeType":"Identifier","column":0,"line":0,"namePos":3487,"name":"HandlersChain","object":null},"tag":null,"comment":null}],"closing":3500},"Results":null},"body":{"children":[],"start":3502,"end":6456,"code":"{\n\tfullPath := path\n\tn.priority++\n\tif len(n.path) == 0 \u0026\u0026 len(n.children) == 0 {\n\t\tn.insertChild(path, fullPath, handlers)\n\t\tn.nType = root\n\t\treturn\n\t}\n\tparentFullPathIndex := 0\nwalk:\n\tfor {\n\t\ti := longestCommonPrefix(path, n.path)\n\t\tif i \u003c len(n.path) {\n\t\t\tchild := node{path: n.path[i:], wildChild: n.wildChild, nType: static, indices: n.indices, children: n.children, handlers: n.handlers, priority: n.priority - 1, fullPath: n.fullPath}\n\t\t\tn.children = []*node{\u0026child}\n\t\t\tn.indices = bytesconv.BytesToString([]byte{n.path[i]})\n\t\t\tn.path = path[:i]\n\t\t\tn.handlers = nil\n\t\t\tn.wildChild = false\n\t\t\tn.fullPath = fullPath[:parentFullPathIndex+i]\n\t\t}\n\t\tif i \u003c len(path) {\n\t\t\tpath = path[i:]\n\t\t\tc := path[0]\n\t\t\tif n.nType == param \u0026\u0026 c == '/' \u0026\u0026 len(n.children) == 1 {\n\t\t\t\tparentFullPathIndex += len(n.path)\n\t\t\t\tn = n.children[0]\n\t\t\t\tn.priority++\n\t\t\t\tcontinue walk\n\t\t\t}\n\t\t\tfor i, max := 0, len(n.indices); i \u003c max; i++ {\n\t\t\t\tif c == n.indices[i] {\n\t\t\t\t\tparentFullPathIndex += len(n.path)\n\t\t\t\t\ti = n.incrementChildPrio(i)\n\t\t\t\t\tn = n.children[i]\n\t\t\t\t\tcontinue walk\n\t\t\t\t}\n\t\t\t}\n\t\t\tif c != ':' \u0026\u0026 c != '*' \u0026\u0026 n.nType != catchAll {\n\t\t\t\tn.indices += bytesconv.BytesToString([]byte{c})\n\t\t\t\tchild := \u0026node{fullPath: fullPath}\n\t\t\t\tn.addChild(child)\n\t\t\t\tn.incrementChildPrio(len(n.indices) - 1)\n\t\t\t\tn = child\n\t\t\t} else if n.wildChild {\n\t\t\t\tn = n.children[len(n.children)-1]\n\t\t\t\tn.priority++\n\t\t\t\tif len(path) \u003e= len(n.path) \u0026\u0026 n.path == path[:len(n.path)] \u0026\u0026 n.nType != catchAll \u0026\u0026 (len(n.path) \u003e= len(path) || path[len(n.path)] == '/') {\n\t\t\t\t\tcontinue walk\n\t\t\t\t}\n\t\t\t\tpathSeg := path\n\t\t\t\tif n.nType != catchAll {\n\t\t\t\t\tpathSeg = strings.SplitN(pathSeg, \"/\", 2)[0]\n\t\t\t\t}\n\t\t\t\tprefix := fullPath[:strings.Index(fullPath, pathSeg)] + n.path\n\t\t\t\tpanic(\"'\" + pathSeg + \"' in new path '\" + fullPath + \"' conflicts with existing wildcard '\" + n.path + \"' in existing prefix '\" + prefix + \"'\")\n\t\t\t}\n\t\t\tn.insertChild(path, fullPath, handlers)\n\t\t\treturn\n\t\t}\n\t\tif n.handlers != nil {\n\t\t\tpanic(\"handlers are already registered for path '\" + fullPath + \"'\")\n\t\t}\n\t\tn.handlers = handlers\n\t\tn.fullPath = fullPath\n\t\treturn\n\t}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":3502,"list":[{"children":[],"start":3505,"end":3521,"code":"fullPath := path","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":3505,"end":3513,"code":"fullPath","nodeType":"Identifier","column":0,"line":0,"namePos":3505,"name":"fullPath","object":null}],"tokenPos":3514,"token":47,"rhs":[{"children":[],"start":3517,"end":3521,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":3517,"name":"path","object":null}]},{"children":[],"start":3523,"end":3535,"code":"n.priority++","nodeType":"IncrementDecrementStatement","column":0,"line":0,"Expression":{"children":[],"start":3523,"end":3533,"code":"n.priority","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":3523,"end":3524,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":3523,"name":"n","object":null},"sel":{"children":[],"start":3525,"end":3533,"code":"priority","nodeType":"Identifier","column":0,"line":0,"namePos":3525,"name":"priority","object":null}},"TokenPosition":3533,"Token":37},{"children":[],"start":3553,"end":3669,"code":"if len(n.path) == 0 \u0026\u0026 len(n.children) == 0 {\n\tn.insertChild(path, fullPath, handlers)\n\tn.nType = root\n\treturn\n}","nodeType":"IfStatement","column":0,"line":0,"if":3553,"initialization":null,"condition":{"children":[],"start":3556,"end":3596,"code":"len(n.path) == 0 \u0026\u0026 len(n.children) == 0","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":3556,"end":3572,"code":"len(n.path) == 0","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":3556,"end":3567,"code":"len(n.path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":3556,"end":3559,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":3556,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":3560,"end":3566,"code":"n.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":3560,"end":3561,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":3560,"name":"n","object":null},"sel":{"children":[],"start":3562,"end":3566,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":3562,"name":"path","object":null}}],"ellipsis":0,"rparen":0},"opPos":3568,"op":39,"rightExpression":{"children":[],"start":3571,"end":3572,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":3571,"kind":5,"value":"0"}},"opPos":3573,"op":34,"rightExpression":{"children":[],"start":3576,"end":3596,"code":"len(n.children) == 0","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":3576,"end":3591,"code":"len(n.children)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":3576,"end":3579,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":3576,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":3580,"end":3590,"code":"n.children","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":3580,"end":3581,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":3580,"name":"n","object":null},"sel":{"children":[],"start":3582,"end":3590,"code":"children","nodeType":"Identifier","column":0,"line":0,"namePos":3582,"name":"children","object":null}}],"ellipsis":0,"rparen":0},"opPos":3592,"op":39,"rightExpression":{"children":[],"start":3595,"end":3596,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":3595,"kind":5,"value":"0"}}},"body":{"children":[],"start":3597,"end":3669,"code":"{\n\tn.insertChild(path, fullPath, handlers)\n\tn.nType = root\n\treturn\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":3597,"list":[{"children":[],"start":3601,"end":3640,"code":"n.insertChild(path, fullPath, handlers)","nodeType":"ExpressionStatement","column":0,"line":0,"Expression":{"children":[],"start":3601,"end":3640,"code":"n.insertChild(path, fullPath, handlers)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":3601,"end":3614,"code":"n.insertChild","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":3601,"end":3602,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":3601,"name":"n","object":null},"sel":{"children":[],"start":3603,"end":3614,"code":"insertChild","nodeType":"Identifier","column":0,"line":0,"namePos":3603,"name":"insertChild","object":null}},"lparen":0,"args":[{"children":[],"start":3615,"end":3619,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":3615,"name":"path","object":null},{"children":[],"start":3621,"end":3629,"code":"fullPath","nodeType":"Identifier","column":0,"line":0,"namePos":3621,"name":"fullPath","object":null},{"children":[],"start":3631,"end":3639,"code":"handlers","nodeType":"Identifier","column":0,"line":0,"namePos":3631,"name":"handlers","object":null}],"ellipsis":0,"rparen":0}},{"children":[],"start":3643,"end":3657,"code":"n.nType = root","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":3643,"end":3650,"code":"n.nType","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":3643,"end":3644,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":3643,"name":"n","object":null},"sel":{"children":[],"start":3645,"end":3650,"code":"nType","nodeType":"Identifier","column":0,"line":0,"namePos":3645,"name":"nType","object":null}}],"tokenPos":3651,"token":42,"rhs":[{"children":[],"start":3653,"end":3657,"code":"root","nodeType":"Identifier","column":0,"line":0,"namePos":3653,"name":"root","object":null}]},{"children":[],"start":3660,"end":3666,"code":"return","nodeType":"ReturnStatement","column":0,"line":0,"return":3660,"results":[]}],"rbrace":3668},"else":null},{"children":[],"start":3672,"end":3696,"code":"parentFullPathIndex := 0","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":3672,"end":3691,"code":"parentFullPathIndex","nodeType":"Identifier","column":0,"line":0,"namePos":3672,"name":"parentFullPathIndex","object":null}],"tokenPos":3692,"token":47,"rhs":[{"children":[],"start":3695,"end":3696,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":3695,"kind":5,"value":"0"}]},{"children":[],"start":3698,"end":6454,"code":"walk:\n\tfor {\n\t\ti := longestCommonPrefix(path, n.path)\n\t\tif i \u003c len(n.path) {\n\t\t\tchild := node{path: n.path[i:], wildChild: n.wildChild, nType: static, indices: n.indices, children: n.children, handlers: n.handlers, priority: n.priority - 1, fullPath: n.fullPath}\n\t\t\tn.children = []*node{\u0026child}\n\t\t\tn.indices = bytesconv.BytesToString([]byte{n.path[i]})\n\t\t\tn.path = path[:i]\n\t\t\tn.handlers = nil\n\t\t\tn.wildChild = false\n\t\t\tn.fullPath = fullPath[:parentFullPathIndex+i]\n\t\t}\n\t\tif i \u003c len(path) {\n\t\t\tpath = path[i:]\n\t\t\tc := path[0]\n\t\t\tif n.nType == param \u0026\u0026 c == '/' \u0026\u0026 len(n.children) == 1 {\n\t\t\t\tparentFullPathIndex += len(n.path)\n\t\t\t\tn = n.children[0]\n\t\t\t\tn.priority++\n\t\t\t\tcontinue walk\n\t\t\t}\n\t\t\tfor i, max := 0, len(n.indices); i \u003c max; i++ {\n\t\t\t\tif c == n.indices[i] {\n\t\t\t\t\tparentFullPathIndex += len(n.path)\n\t\t\t\t\ti = n.incrementChildPrio(i)\n\t\t\t\t\tn = n.children[i]\n\t\t\t\t\tcontinue walk\n\t\t\t\t}\n\t\t\t}\n\t\t\tif c != ':' \u0026\u0026 c != '*' \u0026\u0026 n.nType != catchAll {\n\t\t\t\tn.indices += bytesconv.BytesToString([]byte{c})\n\t\t\t\tchild := \u0026node{fullPath: fullPath}\n\t\t\t\tn.addChild(child)\n\t\t\t\tn.incrementChildPrio(len(n.indices) - 1)\n\t\t\t\tn = child\n\t\t\t} else if n.wildChild {\n\t\t\t\tn = n.children[len(n.children)-1]\n\t\t\t\tn.priority++\n\t\t\t\tif len(path) \u003e= len(n.path) \u0026\u0026 n.path == path[:len(n.path)] \u0026\u0026 n.nType != catchAll \u0026\u0026 (len(n.path) \u003e= len(path) || path[len(n.path)] == '/') {\n\t\t\t\t\tcontinue walk\n\t\t\t\t}\n\t\t\t\tpathSeg := path\n\t\t\t\tif n.nType != catchAll {\n\t\t\t\t\tpathSeg = strings.SplitN(pathSeg, \"/\", 2)[0]\n\t\t\t\t}\n\t\t\t\tprefix := fullPath[:strings.Index(fullPath, pathSeg)] + n.path\n\t\t\t\tpanic(\"'\" + pathSeg + \"' in new path '\" + fullPath + \"' conflicts with existing wildcard '\" + n.path + \"' in existing prefix '\" + prefix + \"'\")\n\t\t\t}\n\t\t\tn.insertChild(path, fullPath, handlers)\n\t\t\treturn\n\t\t}\n\t\tif n.handlers != nil {\n\t\t\tpanic(\"handlers are already registered for path '\" + fullPath + \"'\")\n\t\t}\n\t\tn.handlers = handlers\n\t\tn.fullPath = fullPath\n\t\treturn\n\t}","nodeType":"LabeledStatement","column":0,"line":0,"statement":{"children":[],"start":3705,"end":6454,"code":"for {\n\ti := longestCommonPrefix(path, n.path)\n\tif i \u003c len(n.path) {\n\t\tchild := node{path: n.path[i:], wildChild: n.wildChild, nType: static, indices: n.indices, children: n.children, handlers: n.handlers, priority: n.priority - 1, fullPath: n.fullPath}\n\t\tn.children = []*node{\u0026child}\n\t\tn.indices = bytesconv.BytesToString([]byte{n.path[i]})\n\t\tn.path = path[:i]\n\t\tn.handlers = nil\n\t\tn.wildChild = false\n\t\tn.fullPath = fullPath[:parentFullPathIndex+i]\n\t}\n\tif i \u003c len(path) {\n\t\tpath = path[i:]\n\t\tc := path[0]\n\t\tif n.nType == param \u0026\u0026 c == '/' \u0026\u0026 len(n.children) == 1 {\n\t\t\tparentFullPathIndex += len(n.path)\n\t\t\tn = n.children[0]\n\t\t\tn.priority++\n\t\t\tcontinue walk\n\t\t}\n\t\tfor i, max := 0, len(n.indices); i \u003c max; i++ {\n\t\t\tif c == n.indices[i] {\n\t\t\t\tparentFullPathIndex += len(n.path)\n\t\t\t\ti = n.incrementChildPrio(i)\n\t\t\t\tn = n.children[i]\n\t\t\t\tcontinue walk\n\t\t\t}\n\t\t}\n\t\tif c != ':' \u0026\u0026 c != '*' \u0026\u0026 n.nType != catchAll {\n\t\t\tn.indices += bytesconv.BytesToString([]byte{c})\n\t\t\tchild := \u0026node{fullPath: fullPath}\n\t\t\tn.addChild(child)\n\t\t\tn.incrementChildPrio(len(n.indices) - 1)\n\t\t\tn = child\n\t\t} else if n.wildChild {\n\t\t\tn = n.children[len(n.children)-1]\n\t\t\tn.priority++\n\t\t\tif len(path) \u003e= len(n.path) \u0026\u0026 n.path == path[:len(n.path)] \u0026\u0026 n.nType != catchAll \u0026\u0026 (len(n.path) \u003e= len(path) || path[len(n.path)] == '/') {\n\t\t\t\tcontinue walk\n\t\t\t}\n\t\t\tpathSeg := path\n\t\t\tif n.nType != catchAll {\n\t\t\t\tpathSeg = strings.SplitN(pathSeg, \"/\", 2)[0]\n\t\t\t}\n\t\t\tprefix := fullPath[:strings.Index(fullPath, pathSeg)] + n.path\n\t\t\tpanic(\"'\" + pathSeg + \"' in new path '\" + fullPath + \"' conflicts with existing wildcard '\" + n.path + \"' in existing prefix '\" + prefix + \"'\")\n\t\t}\n\t\tn.insertChild(path, fullPath, handlers)\n\t\treturn\n\t}\n\tif n.handlers != nil {\n\t\tpanic(\"handlers are already registered for path '\" + fullPath + \"'\")\n\t}\n\tn.handlers = handlers\n\tn.fullPath = fullPath\n\treturn\n}","nodeType":"ForStatement","column":0,"line":0,"for":3705,"initialization":null,"condition":null,"post":null,"body":{"children":[],"start":3709,"end":6454,"code":"{\n\ti := longestCommonPrefix(path, n.path)\n\tif i \u003c len(n.path) {\n\t\tchild := node{path: n.path[i:], wildChild: n.wildChild, nType: static, indices: n.indices, children: n.children, handlers: n.handlers, priority: n.priority - 1, fullPath: n.fullPath}\n\t\tn.children = []*node{\u0026child}\n\t\tn.indices = bytesconv.BytesToString([]byte{n.path[i]})\n\t\tn.path = path[:i]\n\t\tn.handlers = nil\n\t\tn.wildChild = false\n\t\tn.fullPath = fullPath[:parentFullPathIndex+i]\n\t}\n\tif i \u003c len(path) {\n\t\tpath = path[i:]\n\t\tc := path[0]\n\t\tif n.nType == param \u0026\u0026 c == '/' \u0026\u0026 len(n.children) == 1 {\n\t\t\tparentFullPathIndex += len(n.path)\n\t\t\tn = n.children[0]\n\t\t\tn.priority++\n\t\t\tcontinue walk\n\t\t}\n\t\tfor i, max := 0, len(n.indices); i \u003c max; i++ {\n\t\t\tif c == n.indices[i] {\n\t\t\t\tparentFullPathIndex += len(n.path)\n\t\t\t\ti = n.incrementChildPrio(i)\n\t\t\t\tn = n.children[i]\n\t\t\t\tcontinue walk\n\t\t\t}\n\t\t}\n\t\tif c != ':' \u0026\u0026 c != '*' \u0026\u0026 n.nType != catchAll {\n\t\t\tn.indices += bytesconv.BytesToString([]byte{c})\n\t\t\tchild := \u0026node{fullPath: fullPath}\n\t\t\tn.addChild(child)\n\t\t\tn.incrementChildPrio(len(n.indices) - 1)\n\t\t\tn = child\n\t\t} else if n.wildChild {\n\t\t\tn = n.children[len(n.children)-1]\n\t\t\tn.priority++\n\t\t\tif len(path) \u003e= len(n.path) \u0026\u0026 n.path == path[:len(n.path)] \u0026\u0026 n.nType != catchAll \u0026\u0026 (len(n.path) \u003e= len(path) || path[len(n.path)] == '/') {\n\t\t\t\tcontinue walk\n\t\t\t}\n\t\t\tpathSeg := path\n\t\t\tif n.nType != catchAll {\n\t\t\t\tpathSeg = strings.SplitN(pathSeg, \"/\", 2)[0]\n\t\t\t}\n\t\t\tprefix := fullPath[:strings.Index(fullPath, pathSeg)] + n.path\n\t\t\tpanic(\"'\" + pathSeg + \"' in new path '\" + fullPath + \"' conflicts with existing wildcard '\" + n.path + \"' in existing prefix '\" + prefix + \"'\")\n\t\t}\n\t\tn.insertChild(path, fullPath, handlers)\n\t\treturn\n\t}\n\tif n.handlers != nil {\n\t\tpanic(\"handlers are already registered for path '\" + fullPath + \"'\")\n\t}\n\tn.handlers = handlers\n\tn.fullPath = fullPath\n\treturn\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":3709,"list":[{"children":[],"start":3874,"end":3912,"code":"i := longestCommonPrefix(path, n.path)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":3874,"end":3875,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":3874,"name":"i","object":null}],"tokenPos":3876,"token":47,"rhs":[{"children":[],"start":3879,"end":3912,"code":"longestCommonPrefix(path, n.path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":3879,"end":3898,"code":"longestCommonPrefix","nodeType":"Identifier","column":0,"line":0,"namePos":3879,"name":"longestCommonPrefix","object":null},"lparen":0,"args":[{"children":[],"start":3899,"end":3903,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":3899,"name":"path","object":null},{"children":[],"start":3905,"end":3911,"code":"n.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":3905,"end":3906,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":3905,"name":"n","object":null},"sel":{"children":[],"start":3907,"end":3911,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":3907,"name":"path","object":null}}],"ellipsis":0,"rparen":0}]},{"children":[],"start":3932,"end":4456,"code":"if i \u003c len(n.path) {\n\tchild := node{path: n.path[i:], wildChild: n.wildChild, nType: static, indices: n.indices, children: n.children, handlers: n.handlers, priority: n.priority - 1, fullPath: n.fullPath}\n\tn.children = []*node{\u0026child}\n\tn.indices = bytesconv.BytesToString([]byte{n.path[i]})\n\tn.path = path[:i]\n\tn.handlers = nil\n\tn.wildChild = false\n\tn.fullPath = fullPath[:parentFullPathIndex+i]\n}","nodeType":"IfStatement","column":0,"line":0,"if":3932,"initialization":null,"condition":{"children":[],"start":3935,"end":3950,"code":"i \u003c len(n.path)","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":3935,"end":3936,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":3935,"name":"i","object":null},"opPos":3937,"op":40,"rightExpression":{"children":[],"start":3939,"end":3950,"code":"len(n.path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":3939,"end":3942,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":3939,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":3943,"end":3949,"code":"n.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":3943,"end":3944,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":3943,"name":"n","object":null},"sel":{"children":[],"start":3945,"end":3949,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":3945,"name":"path","object":null}}],"ellipsis":0,"rparen":0}},"body":{"children":[],"start":3951,"end":4456,"code":"{\n\tchild := node{path: n.path[i:], wildChild: n.wildChild, nType: static, indices: n.indices, children: n.children, handlers: n.handlers, priority: n.priority - 1, fullPath: n.fullPath}\n\tn.children = []*node{\u0026child}\n\tn.indices = bytesconv.BytesToString([]byte{n.path[i]})\n\tn.path = path[:i]\n\tn.handlers = nil\n\tn.wildChild = false\n\tn.fullPath = fullPath[:parentFullPathIndex+i]\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":3951,"list":[{"children":[],"start":3956,"end":4191,"code":"child := node{path: n.path[i:], wildChild: n.wildChild, nType: static, indices: n.indices, children: n.children, handlers: n.handlers, priority: n.priority - 1, fullPath: n.fullPath}","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":3956,"end":3961,"code":"child","nodeType":"Identifier","column":0,"line":0,"namePos":3956,"name":"child","object":null}],"tokenPos":3962,"token":47,"rhs":[{"children":[],"start":3965,"end":4191,"code":"node{path: n.path[i:], wildChild: n.wildChild, nType: static, indices: n.indices, children: n.children, handlers: n.handlers, priority: n.priority - 1, fullPath: n.fullPath}","nodeType":"CompositeLiteral","column":0,"line":0,"type":{"children":[],"start":3965,"end":3969,"code":"node","nodeType":"Identifier","column":0,"line":0,"namePos":3965,"name":"node","object":null},"lbrace":3969,"elements":[{"children":[],"start":3975,"end":3996,"code":"path: n.path[i:]","nodeType":"KeyValueExpression","column":0,"line":0,"key":{"children":[],"start":3975,"end":3979,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":3975,"name":"path","object":null},"colon":0,"value":{"children":[],"start":3986,"end":3996,"code":"n.path[i:]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":3986,"end":3992,"code":"n.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":3986,"end":3987,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":3986,"name":"n","object":null},"sel":{"children":[],"start":3988,"end":3992,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":3988,"name":"path","object":null}},"leftBracket":3992,"low":{"children":[],"start":3993,"end":3994,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":3993,"name":"i","object":null},"high":null,"max":null,"slice3":false,"rightBracket":3995}},{"children":[],"start":4002,"end":4024,"code":"wildChild: n.wildChild","nodeType":"KeyValueExpression","column":0,"line":0,"key":{"children":[],"start":4002,"end":4011,"code":"wildChild","nodeType":"Identifier","column":0,"line":0,"namePos":4002,"name":"wildChild","object":null},"colon":0,"value":{"children":[],"start":4013,"end":4024,"code":"n.wildChild","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":4013,"end":4014,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":4013,"name":"n","object":null},"sel":{"children":[],"start":4015,"end":4024,"code":"wildChild","nodeType":"Identifier","column":0,"line":0,"namePos":4015,"name":"wildChild","object":null}}},{"children":[],"start":4030,"end":4047,"code":"nType: static","nodeType":"KeyValueExpression","column":0,"line":0,"key":{"children":[],"start":4030,"end":4035,"code":"nType","nodeType":"Identifier","column":0,"line":0,"namePos":4030,"name":"nType","object":null},"colon":0,"value":{"children":[],"start":4041,"end":4047,"code":"static","nodeType":"Identifier","column":0,"line":0,"namePos":4041,"name":"static","object":null}},{"children":[],"start":4053,"end":4073,"code":"indices: n.indices","nodeType":"KeyValueExpression","column":0,"line":0,"key":{"children":[],"start":4053,"end":4060,"code":"indices","nodeType":"Identifier","column":0,"line":0,"namePos":4053,"name":"indices","object":null},"colon":0,"value":{"children":[],"start":4064,"end":4073,"code":"n.indices","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":4064,"end":4065,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":4064,"name":"n","object":null},"sel":{"children":[],"start":4066,"end":4073,"code":"indices","nodeType":"Identifier","column":0,"line":0,"namePos":4066,"name":"indices","object":null}}},{"children":[],"start":4079,"end":4100,"code":"children: n.children","nodeType":"KeyValueExpression","column":0,"line":0,"key":{"children":[],"start":4079,"end":4087,"code":"children","nodeType":"Identifier","column":0,"line":0,"namePos":4079,"name":"children","object":null},"colon":0,"value":{"children":[],"start":4090,"end":4100,"code":"n.children","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":4090,"end":4091,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":4090,"name":"n","object":null},"sel":{"children":[],"start":4092,"end":4100,"code":"children","nodeType":"Identifier","column":0,"line":0,"namePos":4092,"name":"children","object":null}}},{"children":[],"start":4106,"end":4127,"code":"handlers: n.handlers","nodeType":"KeyValueExpression","column":0,"line":0,"key":{"children":[],"start":4106,"end":4114,"code":"handlers","nodeType":"Identifier","column":0,"line":0,"namePos":4106,"name":"handlers","object":null},"colon":0,"value":{"children":[],"start":4117,"end":4127,"code":"n.handlers","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":4117,"end":4118,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":4117,"name":"n","object":null},"sel":{"children":[],"start":4119,"end":4127,"code":"handlers","nodeType":"Identifier","column":0,"line":0,"namePos":4119,"name":"handlers","object":null}}},{"children":[],"start":4133,"end":4158,"code":"priority: n.priority - 1","nodeType":"KeyValueExpression","column":0,"line":0,"key":{"children":[],"start":4133,"end":4141,"code":"priority","nodeType":"Identifier","column":0,"line":0,"namePos":4133,"name":"priority","object":null},"colon":0,"value":{"children":[],"start":4144,"end":4158,"code":"n.priority - 1","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":4144,"end":4154,"code":"n.priority","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":4144,"end":4145,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":4144,"name":"n","object":null},"sel":{"children":[],"start":4146,"end":4154,"code":"priority","nodeType":"Identifier","column":0,"line":0,"namePos":4146,"name":"priority","object":null}},"opPos":4155,"op":13,"rightExpression":{"children":[],"start":4157,"end":4158,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":4157,"kind":5,"value":"1"}}},{"children":[],"start":4164,"end":4185,"code":"fullPath: n.fullPath","nodeType":"KeyValueExpression","column":0,"line":0,"key":{"children":[],"start":4164,"end":4172,"code":"fullPath","nodeType":"Identifier","column":0,"line":0,"namePos":4164,"name":"fullPath","object":null},"colon":0,"value":{"children":[],"start":4175,"end":4185,"code":"n.fullPath","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":4175,"end":4176,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":4175,"name":"n","object":null},"sel":{"children":[],"start":4177,"end":4185,"code":"fullPath","nodeType":"Identifier","column":0,"line":0,"namePos":4177,"name":"fullPath","object":null}}}],"rbrace":4190,"incomplete":false}]},{"children":[],"start":4196,"end":4224,"code":"n.children = []*node{\u0026child}","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":4196,"end":4206,"code":"n.children","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":4196,"end":4197,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":4196,"name":"n","object":null},"sel":{"children":[],"start":4198,"end":4206,"code":"children","nodeType":"Identifier","column":0,"line":0,"namePos":4198,"name":"children","object":null}}],"tokenPos":4207,"token":42,"rhs":[{"children":[],"start":4209,"end":4224,"code":"[]*node{\u0026child}","nodeType":"CompositeLiteral","column":0,"line":0,"type":{"children":[],"start":4209,"end":4216,"code":"[]*node","nodeType":"ArrayType","column":0,"line":0,"leftBracket":4209,"length":null,"element":{"children":[],"start":4211,"end":4216,"code":"*node","nodeType":"StarExpression","column":0,"line":0,"star":4211,"expression":{"children":[],"start":4212,"end":4216,"code":"node","nodeType":"Identifier","column":0,"line":0,"namePos":4212,"name":"node","object":null}}},"lbrace":4216,"elements":[{"children":[],"start":4217,"end":4223,"code":"\u0026child","nodeType":"UnaryExpression","column":0,"line":0,"opPos":4217,"op":17,"expression":{"children":[],"start":4218,"end":4223,"code":"child","nodeType":"Identifier","column":0,"line":0,"namePos":4218,"name":"child","object":null}}],"rbrace":4223,"incomplete":false}]},{"children":[],"start":4285,"end":4339,"code":"n.indices = bytesconv.BytesToString([]byte{n.path[i]})","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":4285,"end":4294,"code":"n.indices","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":4285,"end":4286,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":4285,"name":"n","object":null},"sel":{"children":[],"start":4287,"end":4294,"code":"indices","nodeType":"Identifier","column":0,"line":0,"namePos":4287,"name":"indices","object":null}}],"tokenPos":4295,"token":42,"rhs":[{"children":[],"start":4297,"end":4339,"code":"bytesconv.BytesToString([]byte{n.path[i]})","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":4297,"end":4320,"code":"bytesconv.BytesToString","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":4297,"end":4306,"code":"bytesconv","nodeType":"Identifier","column":0,"line":0,"namePos":4297,"name":"bytesconv","object":null},"sel":{"children":[],"start":4307,"end":4320,"code":"BytesToString","nodeType":"Identifier","column":0,"line":0,"namePos":4307,"name":"BytesToString","object":null}},"lparen":0,"args":[{"children":[],"start":4321,"end":4338,"code":"[]byte{n.path[i]}","nodeType":"CompositeLiteral","column":0,"line":0,"type":{"children":[],"start":4321,"end":4327,"code":"[]byte","nodeType":"ArrayType","column":0,"line":0,"leftBracket":4321,"length":null,"element":{"children":[],"start":4323,"end":4327,"code":"byte","nodeType":"Identifier","column":0,"line":0,"namePos":4323,"name":"byte","object":null}},"lbrace":4327,"elements":[{"children":[],"start":4328,"end":4337,"code":"n.path[i]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":4328,"end":4334,"code":"n.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":4328,"end":4329,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":4328,"name":"n","object":null},"sel":{"children":[],"start":4330,"end":4334,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":4330,"name":"path","object":null}},"leftBracket":4334,"index":{"children":[],"start":4335,"end":4336,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":4335,"name":"i","object":null},"rightBracket":4336}],"rbrace":4337,"incomplete":false}],"ellipsis":0,"rparen":0}]},{"children":[],"start":4343,"end":4360,"code":"n.path = path[:i]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":4343,"end":4349,"code":"n.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":4343,"end":4344,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":4343,"name":"n","object":null},"sel":{"children":[],"start":4345,"end":4349,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":4345,"name":"path","object":null}}],"tokenPos":4350,"token":42,"rhs":[{"children":[],"start":4352,"end":4360,"code":"path[:i]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":4352,"end":4356,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":4352,"name":"path","object":null},"leftBracket":4356,"low":null,"high":{"children":[],"start":4358,"end":4359,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":4358,"name":"i","object":null},"max":null,"slice3":false,"rightBracket":4359}]},{"children":[],"start":4364,"end":4380,"code":"n.handlers = nil","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":4364,"end":4374,"code":"n.handlers","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":4364,"end":4365,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":4364,"name":"n","object":null},"sel":{"children":[],"start":4366,"end":4374,"code":"handlers","nodeType":"Identifier","column":0,"line":0,"namePos":4366,"name":"handlers","object":null}}],"tokenPos":4375,"token":42,"rhs":[{"children":[],"start":4377,"end":4380,"code":"nil","nodeType":"Identifier","column":0,"line":0,"namePos":4377,"name":"nil","object":null}]},{"children":[],"start":4384,"end":4403,"code":"n.wildChild = false","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":4384,"end":4395,"code":"n.wildChild","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":4384,"end":4385,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":4384,"name":"n","object":null},"sel":{"children":[],"start":4386,"end":4395,"code":"wildChild","nodeType":"Identifier","column":0,"line":0,"namePos":4386,"name":"wildChild","object":null}}],"tokenPos":4396,"token":42,"rhs":[{"children":[],"start":4398,"end":4403,"code":"false","nodeType":"Identifier","column":0,"line":0,"namePos":4398,"name":"false","object":null}]},{"children":[],"start":4407,"end":4452,"code":"n.fullPath = fullPath[:parentFullPathIndex+i]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":4407,"end":4417,"code":"n.fullPath","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":4407,"end":4408,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":4407,"name":"n","object":null},"sel":{"children":[],"start":4409,"end":4417,"code":"fullPath","nodeType":"Identifier","column":0,"line":0,"namePos":4409,"name":"fullPath","object":null}}],"tokenPos":4418,"token":42,"rhs":[{"children":[],"start":4420,"end":4452,"code":"fullPath[:parentFullPathIndex+i]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":4420,"end":4428,"code":"fullPath","nodeType":"Identifier","column":0,"line":0,"namePos":4420,"name":"fullPath","object":null},"leftBracket":4428,"low":null,"high":{"children":[],"start":4430,"end":4451,"code":"parentFullPathIndex + i","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":4430,"end":4449,"code":"parentFullPathIndex","nodeType":"Identifier","column":0,"line":0,"namePos":4430,"name":"parentFullPathIndex","object":null},"opPos":4449,"op":12,"rightExpression":{"children":[],"start":4450,"end":4451,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":4450,"name":"i","object":null}},"max":null,"slice3":false,"rightBracket":4451}]}],"rbrace":4455},"else":null},{"children":[],"start":4500,"end":6250,"code":"if i \u003c len(path) {\n\tpath = path[i:]\n\tc := path[0]\n\tif n.nType == param \u0026\u0026 c == '/' \u0026\u0026 len(n.children) == 1 {\n\t\tparentFullPathIndex += len(n.path)\n\t\tn = n.children[0]\n\t\tn.priority++\n\t\tcontinue walk\n\t}\n\tfor i, max := 0, len(n.indices); i \u003c max; i++ {\n\t\tif c == n.indices[i] {\n\t\t\tparentFullPathIndex += len(n.path)\n\t\t\ti = n.incrementChildPrio(i)\n\t\t\tn = n.children[i]\n\t\t\tcontinue walk\n\t\t}\n\t}\n\tif c != ':' \u0026\u0026 c != '*' \u0026\u0026 n.nType != catchAll {\n\t\tn.indices += bytesconv.BytesToString([]byte{c})\n\t\tchild := \u0026node{fullPath: fullPath}\n\t\tn.addChild(child)\n\t\tn.incrementChildPrio(len(n.indices) - 1)\n\t\tn = child\n\t} else if n.wildChild {\n\t\tn = n.children[len(n.children)-1]\n\t\tn.priority++\n\t\tif len(path) \u003e= len(n.path) \u0026\u0026 n.path == path[:len(n.path)] \u0026\u0026 n.nType != catchAll \u0026\u0026 (len(n.path) \u003e= len(path) || path[len(n.path)] == '/') {\n\t\t\tcontinue walk\n\t\t}\n\t\tpathSeg := path\n\t\tif n.nType != catchAll {\n\t\t\tpathSeg = strings.SplitN(pathSeg, \"/\", 2)[0]\n\t\t}\n\t\tprefix := fullPath[:strings.Index(fullPath, pathSeg)] + n.path\n\t\tpanic(\"'\" + pathSeg + \"' in new path '\" + fullPath + \"' conflicts with existing wildcard '\" + n.path + \"' in existing prefix '\" + prefix + \"'\")\n\t}\n\tn.insertChild(path, fullPath, handlers)\n\treturn\n}","nodeType":"IfStatement","column":0,"line":0,"if":4500,"initialization":null,"condition":{"children":[],"start":4503,"end":4516,"code":"i \u003c len(path)","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":4503,"end":4504,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":4503,"name":"i","object":null},"opPos":4505,"op":40,"rightExpression":{"children":[],"start":4507,"end":4516,"code":"len(path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":4507,"end":4510,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":4507,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":4511,"end":4515,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":4511,"name":"path","object":null}],"ellipsis":0,"rparen":0}},"body":{"children":[],"start":4517,"end":6250,"code":"{\n\tpath = path[i:]\n\tc := path[0]\n\tif n.nType == param \u0026\u0026 c == '/' \u0026\u0026 len(n.children) == 1 {\n\t\tparentFullPathIndex += len(n.path)\n\t\tn = n.children[0]\n\t\tn.priority++\n\t\tcontinue walk\n\t}\n\tfor i, max := 0, len(n.indices); i \u003c max; i++ {\n\t\tif c == n.indices[i] {\n\t\t\tparentFullPathIndex += len(n.path)\n\t\t\ti = n.incrementChildPrio(i)\n\t\t\tn = n.children[i]\n\t\t\tcontinue walk\n\t\t}\n\t}\n\tif c != ':' \u0026\u0026 c != '*' \u0026\u0026 n.nType != catchAll {\n\t\tn.indices += bytesconv.BytesToString([]byte{c})\n\t\tchild := \u0026node{fullPath: fullPath}\n\t\tn.addChild(child)\n\t\tn.incrementChildPrio(len(n.indices) - 1)\n\t\tn = child\n\t} else if n.wildChild {\n\t\tn = n.children[len(n.children)-1]\n\t\tn.priority++\n\t\tif len(path) \u003e= len(n.path) \u0026\u0026 n.path == path[:len(n.path)] \u0026\u0026 n.nType != catchAll \u0026\u0026 (len(n.path) \u003e= len(path) || path[len(n.path)] == '/') {\n\t\t\tcontinue walk\n\t\t}\n\t\tpathSeg := path\n\t\tif n.nType != catchAll {\n\t\t\tpathSeg = strings.SplitN(pathSeg, \"/\", 2)[0]\n\t\t}\n\t\tprefix := fullPath[:strings.Index(fullPath, pathSeg)] + n.path\n\t\tpanic(\"'\" + pathSeg + \"' in new path '\" + fullPath + \"' conflicts with existing wildcard '\" + n.path + \"' in existing prefix '\" + prefix + \"'\")\n\t}\n\tn.insertChild(path, fullPath, handlers)\n\treturn\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":4517,"list":[{"children":[],"start":4522,"end":4537,"code":"path = path[i:]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":4522,"end":4526,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":4522,"name":"path","object":null}],"tokenPos":4527,"token":42,"rhs":[{"children":[],"start":4529,"end":4537,"code":"path[i:]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":4529,"end":4533,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":4529,"name":"path","object":null},"leftBracket":4533,"low":{"children":[],"start":4534,"end":4535,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":4534,"name":"i","object":null},"high":null,"max":null,"slice3":false,"rightBracket":4536}]},{"children":[],"start":4541,"end":4553,"code":"c := path[0]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":4541,"end":4542,"code":"c","nodeType":"Identifier","column":0,"line":0,"namePos":4541,"name":"c","object":null}],"tokenPos":4543,"token":47,"rhs":[{"children":[],"start":4546,"end":4553,"code":"path[0]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":4546,"end":4550,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":4546,"name":"path","object":null},"leftBracket":4550,"index":{"children":[],"start":4551,"end":4552,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":4551,"kind":5,"value":"0"},"rightBracket":4552}]},{"children":[],"start":4580,"end":4738,"code":"if n.nType == param \u0026\u0026 c == '/' \u0026\u0026 len(n.children) == 1 {\n\tparentFullPathIndex += len(n.path)\n\tn = n.children[0]\n\tn.priority++\n\tcontinue walk\n}","nodeType":"IfStatement","column":0,"line":0,"if":4580,"initialization":null,"condition":{"children":[],"start":4583,"end":4635,"code":"n.nType == param \u0026\u0026 c == '/' \u0026\u0026 len(n.children) == 1","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":4583,"end":4611,"code":"n.nType == param \u0026\u0026 c == '/'","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":4583,"end":4599,"code":"n.nType == param","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":4583,"end":4590,"code":"n.nType","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":4583,"end":4584,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":4583,"name":"n","object":null},"sel":{"children":[],"start":4585,"end":4590,"code":"nType","nodeType":"Identifier","column":0,"line":0,"namePos":4585,"name":"nType","object":null}},"opPos":4591,"op":39,"rightExpression":{"children":[],"start":4594,"end":4599,"code":"param","nodeType":"Identifier","column":0,"line":0,"namePos":4594,"name":"param","object":null}},"opPos":4600,"op":34,"rightExpression":{"children":[],"start":4603,"end":4611,"code":"c == '/'","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":4603,"end":4604,"code":"c","nodeType":"Identifier","column":0,"line":0,"namePos":4603,"name":"c","object":null},"opPos":4605,"op":39,"rightExpression":{"children":[],"start":4608,"end":4611,"code":"'/'","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":4608,"kind":8,"value":"'/'"}}},"opPos":4612,"op":34,"rightExpression":{"children":[],"start":4615,"end":4635,"code":"len(n.children) == 1","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":4615,"end":4630,"code":"len(n.children)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":4615,"end":4618,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":4615,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":4619,"end":4629,"code":"n.children","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":4619,"end":4620,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":4619,"name":"n","object":null},"sel":{"children":[],"start":4621,"end":4629,"code":"children","nodeType":"Identifier","column":0,"line":0,"namePos":4621,"name":"children","object":null}}],"ellipsis":0,"rparen":0},"opPos":4631,"op":39,"rightExpression":{"children":[],"start":4634,"end":4635,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":4634,"kind":5,"value":"1"}}},"body":{"children":[],"start":4636,"end":4738,"code":"{\n\tparentFullPathIndex += len(n.path)\n\tn = n.children[0]\n\tn.priority++\n\tcontinue walk\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":4636,"list":[{"children":[],"start":4642,"end":4676,"code":"parentFullPathIndex += len(n.path)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":4642,"end":4661,"code":"parentFullPathIndex","nodeType":"Identifier","column":0,"line":0,"namePos":4642,"name":"parentFullPathIndex","object":null}],"tokenPos":4662,"token":23,"rhs":[{"children":[],"start":4665,"end":4676,"code":"len(n.path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":4665,"end":4668,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":4665,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":4669,"end":4675,"code":"n.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":4669,"end":4670,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":4669,"name":"n","object":null},"sel":{"children":[],"start":4671,"end":4675,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":4671,"name":"path","object":null}}],"ellipsis":0,"rparen":0}]},{"children":[],"start":4681,"end":4698,"code":"n = n.children[0]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":4681,"end":4682,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":4681,"name":"n","object":null}],"tokenPos":4683,"token":42,"rhs":[{"children":[],"start":4685,"end":4698,"code":"n.children[0]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":4685,"end":4695,"code":"n.children","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":4685,"end":4686,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":4685,"name":"n","object":null},"sel":{"children":[],"start":4687,"end":4695,"code":"children","nodeType":"Identifier","column":0,"line":0,"namePos":4687,"name":"children","object":null}},"leftBracket":4695,"index":{"children":[],"start":4696,"end":4697,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":4696,"kind":5,"value":"0"},"rightBracket":4697}]},{"children":[],"start":4703,"end":4715,"code":"n.priority++","nodeType":"IncrementDecrementStatement","column":0,"line":0,"Expression":{"children":[],"start":4703,"end":4713,"code":"n.priority","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":4703,"end":4704,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":4703,"name":"n","object":null},"sel":{"children":[],"start":4705,"end":4713,"code":"priority","nodeType":"Identifier","column":0,"line":0,"namePos":4705,"name":"priority","object":null}},"TokenPosition":4713,"Token":37},{"children":[],"start":4720,"end":4733,"code":"continue walk","nodeType":"BranchStatement","column":0,"line":0,"tokenPosition":4720,"token":65,"label":{"children":[],"start":4729,"end":4733,"code":"walk","nodeType":"Identifier","column":0,"line":0,"namePos":4729,"name":"walk","object":null}}],"rbrace":4737},"else":null},{"children":[],"start":4797,"end":4997,"code":"for i, max := 0, len(n.indices); i \u003c max; i++ {\n\tif c == n.indices[i] {\n\t\tparentFullPathIndex += len(n.path)\n\t\ti = n.incrementChildPrio(i)\n\t\tn = n.children[i]\n\t\tcontinue walk\n\t}\n}","nodeType":"ForStatement","column":0,"line":0,"for":4797,"initialization":{"children":[],"start":4801,"end":4828,"code":"i, max := 0, len(n.indices)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":4801,"end":4802,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":4801,"name":"i","object":null},{"children":[],"start":4804,"end":4807,"code":"max","nodeType":"Identifier","column":0,"line":0,"namePos":4804,"name":"max","object":null}],"tokenPos":4808,"token":47,"rhs":[{"children":[],"start":4811,"end":4812,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":4811,"kind":5,"value":"0"},{"children":[],"start":4814,"end":4828,"code":"len(n.indices)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":4814,"end":4817,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":4814,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":4818,"end":4827,"code":"n.indices","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":4818,"end":4819,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":4818,"name":"n","object":null},"sel":{"children":[],"start":4820,"end":4827,"code":"indices","nodeType":"Identifier","column":0,"line":0,"namePos":4820,"name":"indices","object":null}}],"ellipsis":0,"rparen":0}]},"condition":{"children":[],"start":4830,"end":4837,"code":"i \u003c max","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":4830,"end":4831,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":4830,"name":"i","object":null},"opPos":4832,"op":40,"rightExpression":{"children":[],"start":4834,"end":4837,"code":"max","nodeType":"Identifier","column":0,"line":0,"namePos":4834,"name":"max","object":null}},"post":{"children":[],"start":4839,"end":4842,"code":"i++","nodeType":"IncrementDecrementStatement","column":0,"line":0,"Expression":{"children":[],"start":4839,"end":4840,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":4839,"name":"i","object":null},"TokenPosition":4840,"Token":37},"body":{"children":[],"start":4843,"end":4997,"code":"{\n\tif c == n.indices[i] {\n\t\tparentFullPathIndex += len(n.path)\n\t\ti = n.incrementChildPrio(i)\n\t\tn = n.children[i]\n\t\tcontinue walk\n\t}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":4843,"list":[{"children":[],"start":4849,"end":4992,"code":"if c == n.indices[i] {\n\tparentFullPathIndex += len(n.path)\n\ti = n.incrementChildPrio(i)\n\tn = n.children[i]\n\tcontinue walk\n}","nodeType":"IfStatement","column":0,"line":0,"if":4849,"initialization":null,"condition":{"children":[],"start":4852,"end":4869,"code":"c == n.indices[i]","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":4852,"end":4853,"code":"c","nodeType":"Identifier","column":0,"line":0,"namePos":4852,"name":"c","object":null},"opPos":4854,"op":39,"rightExpression":{"children":[],"start":4857,"end":4869,"code":"n.indices[i]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":4857,"end":4866,"code":"n.indices","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":4857,"end":4858,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":4857,"name":"n","object":null},"sel":{"children":[],"start":4859,"end":4866,"code":"indices","nodeType":"Identifier","column":0,"line":0,"namePos":4859,"name":"indices","object":null}},"leftBracket":4866,"index":{"children":[],"start":4867,"end":4868,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":4867,"name":"i","object":null},"rightBracket":4868}},"body":{"children":[],"start":4870,"end":4992,"code":"{\n\tparentFullPathIndex += len(n.path)\n\ti = n.incrementChildPrio(i)\n\tn = n.children[i]\n\tcontinue walk\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":4870,"list":[{"children":[],"start":4877,"end":4911,"code":"parentFullPathIndex += len(n.path)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":4877,"end":4896,"code":"parentFullPathIndex","nodeType":"Identifier","column":0,"line":0,"namePos":4877,"name":"parentFullPathIndex","object":null}],"tokenPos":4897,"token":23,"rhs":[{"children":[],"start":4900,"end":4911,"code":"len(n.path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":4900,"end":4903,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":4900,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":4904,"end":4910,"code":"n.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":4904,"end":4905,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":4904,"name":"n","object":null},"sel":{"children":[],"start":4906,"end":4910,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":4906,"name":"path","object":null}}],"ellipsis":0,"rparen":0}]},{"children":[],"start":4917,"end":4944,"code":"i = n.incrementChildPrio(i)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":4917,"end":4918,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":4917,"name":"i","object":null}],"tokenPos":4919,"token":42,"rhs":[{"children":[],"start":4921,"end":4944,"code":"n.incrementChildPrio(i)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":4921,"end":4941,"code":"n.incrementChildPrio","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":4921,"end":4922,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":4921,"name":"n","object":null},"sel":{"children":[],"start":4923,"end":4941,"code":"incrementChildPrio","nodeType":"Identifier","column":0,"line":0,"namePos":4923,"name":"incrementChildPrio","object":null}},"lparen":0,"args":[{"children":[],"start":4942,"end":4943,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":4942,"name":"i","object":null}],"ellipsis":0,"rparen":0}]},{"children":[],"start":4950,"end":4967,"code":"n = n.children[i]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":4950,"end":4951,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":4950,"name":"n","object":null}],"tokenPos":4952,"token":42,"rhs":[{"children":[],"start":4954,"end":4967,"code":"n.children[i]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":4954,"end":4964,"code":"n.children","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":4954,"end":4955,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":4954,"name":"n","object":null},"sel":{"children":[],"start":4956,"end":4964,"code":"children","nodeType":"Identifier","column":0,"line":0,"namePos":4956,"name":"children","object":null}},"leftBracket":4964,"index":{"children":[],"start":4965,"end":4966,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":4965,"name":"i","object":null},"rightBracket":4966}]},{"children":[],"start":4973,"end":4986,"code":"continue walk","nodeType":"BranchStatement","column":0,"line":0,"tokenPosition":4973,"token":65,"label":{"children":[],"start":4982,"end":4986,"code":"walk","nodeType":"Identifier","column":0,"line":0,"namePos":4982,"name":"walk","object":null}}],"rbrace":4991},"else":null}],"rbrace":4996}},{"children":[],"start":5028,"end":6192,"code":"if c != ':' \u0026\u0026 c != '*' \u0026\u0026 n.nType != catchAll {\n\tn.indices += bytesconv.BytesToString([]byte{c})\n\tchild := \u0026node{fullPath: fullPath}\n\tn.addChild(child)\n\tn.incrementChildPrio(len(n.indices) - 1)\n\tn = child\n} else if n.wildChild {\n\tn = n.children[len(n.children)-1]\n\tn.priority++\n\tif len(path) \u003e= len(n.path) \u0026\u0026 n.path == path[:len(n.path)] \u0026\u0026 n.nType != catchAll \u0026\u0026 (len(n.path) \u003e= len(path) || path[len(n.path)] == '/') {\n\t\tcontinue walk\n\t}\n\tpathSeg := path\n\tif n.nType != catchAll {\n\t\tpathSeg = strings.SplitN(pathSeg, \"/\", 2)[0]\n\t}\n\tprefix := fullPath[:strings.Index(fullPath, pathSeg)] + n.path\n\tpanic(\"'\" + pathSeg + \"' in new path '\" + fullPath + \"' conflicts with existing wildcard '\" + n.path + \"' in existing prefix '\" + prefix + \"'\")\n}","nodeType":"IfStatement","column":0,"line":0,"if":5028,"initialization":null,"condition":{"children":[],"start":5031,"end":5074,"code":"c != ':' \u0026\u0026 c != '*' \u0026\u0026 n.nType != catchAll","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":5031,"end":5051,"code":"c != ':' \u0026\u0026 c != '*'","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":5031,"end":5039,"code":"c != ':'","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":5031,"end":5032,"code":"c","nodeType":"Identifier","column":0,"line":0,"namePos":5031,"name":"c","object":null},"opPos":5033,"op":44,"rightExpression":{"children":[],"start":5036,"end":5039,"code":"':'","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":5036,"kind":8,"value":"':'"}},"opPos":5040,"op":34,"rightExpression":{"children":[],"start":5043,"end":5051,"code":"c != '*'","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":5043,"end":5044,"code":"c","nodeType":"Identifier","column":0,"line":0,"namePos":5043,"name":"c","object":null},"opPos":5045,"op":44,"rightExpression":{"children":[],"start":5048,"end":5051,"code":"'*'","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":5048,"kind":8,"value":"'*'"}}},"opPos":5052,"op":34,"rightExpression":{"children":[],"start":5055,"end":5074,"code":"n.nType != catchAll","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":5055,"end":5062,"code":"n.nType","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":5055,"end":5056,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":5055,"name":"n","object":null},"sel":{"children":[],"start":5057,"end":5062,"code":"nType","nodeType":"Identifier","column":0,"line":0,"namePos":5057,"name":"nType","object":null}},"opPos":5063,"op":44,"rightExpression":{"children":[],"start":5066,"end":5074,"code":"catchAll","nodeType":"Identifier","column":0,"line":0,"namePos":5066,"name":"catchAll","object":null}}},"body":{"children":[],"start":5075,"end":5323,"code":"{\n\tn.indices += bytesconv.BytesToString([]byte{c})\n\tchild := \u0026node{fullPath: fullPath}\n\tn.addChild(child)\n\tn.incrementChildPrio(len(n.indices) - 1)\n\tn = child\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":5075,"list":[{"children":[],"start":5139,"end":5186,"code":"n.indices += bytesconv.BytesToString([]byte{c})","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":5139,"end":5148,"code":"n.indices","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":5139,"end":5140,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":5139,"name":"n","object":null},"sel":{"children":[],"start":5141,"end":5148,"code":"indices","nodeType":"Identifier","column":0,"line":0,"namePos":5141,"name":"indices","object":null}}],"tokenPos":5149,"token":23,"rhs":[{"children":[],"start":5152,"end":5186,"code":"bytesconv.BytesToString([]byte{c})","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":5152,"end":5175,"code":"bytesconv.BytesToString","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":5152,"end":5161,"code":"bytesconv","nodeType":"Identifier","column":0,"line":0,"namePos":5152,"name":"bytesconv","object":null},"sel":{"children":[],"start":5162,"end":5175,"code":"BytesToString","nodeType":"Identifier","column":0,"line":0,"namePos":5162,"name":"BytesToString","object":null}},"lparen":0,"args":[{"children":[],"start":5176,"end":5185,"code":"[]byte{c}","nodeType":"CompositeLiteral","column":0,"line":0,"type":{"children":[],"start":5176,"end":5182,"code":"[]byte","nodeType":"ArrayType","column":0,"line":0,"leftBracket":5176,"length":null,"element":{"children":[],"start":5178,"end":5182,"code":"byte","nodeType":"Identifier","column":0,"line":0,"namePos":5178,"name":"byte","object":null}},"lbrace":5182,"elements":[{"children":[],"start":5183,"end":5184,"code":"c","nodeType":"Identifier","column":0,"line":0,"namePos":5183,"name":"c","object":null}],"rbrace":5184,"incomplete":false}],"ellipsis":0,"rparen":0}]},{"children":[],"start":5191,"end":5237,"code":"child := \u0026node{fullPath: fullPath}","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":5191,"end":5196,"code":"child","nodeType":"Identifier","column":0,"line":0,"namePos":5191,"name":"child","object":null}],"tokenPos":5197,"token":47,"rhs":[{"children":[],"start":5200,"end":5237,"code":"\u0026node{fullPath: fullPath}","nodeType":"UnaryExpression","column":0,"line":0,"opPos":5200,"op":17,"expression":{"children":[],"start":5201,"end":5237,"code":"node{fullPath: fullPath}","nodeType":"CompositeLiteral","column":0,"line":0,"type":{"children":[],"start":5201,"end":5205,"code":"node","nodeType":"Identifier","column":0,"line":0,"namePos":5201,"name":"node","object":null},"lbrace":5205,"elements":[{"children":[],"start":5212,"end":5230,"code":"fullPath: fullPath","nodeType":"KeyValueExpression","column":0,"line":0,"key":{"children":[],"start":5212,"end":5220,"code":"fullPath","nodeType":"Identifier","column":0,"line":0,"namePos":5212,"name":"fullPath","object":null},"colon":0,"value":{"children":[],"start":5222,"end":5230,"code":"fullPath","nodeType":"Identifier","column":0,"line":0,"namePos":5222,"name":"fullPath","object":null}}],"rbrace":5236,"incomplete":false}}]},{"children":[],"start":5242,"end":5259,"code":"n.addChild(child)","nodeType":"ExpressionStatement","column":0,"line":0,"Expression":{"children":[],"start":5242,"end":5259,"code":"n.addChild(child)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":5242,"end":5252,"code":"n.addChild","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":5242,"end":5243,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":5242,"name":"n","object":null},"sel":{"children":[],"start":5244,"end":5252,"code":"addChild","nodeType":"Identifier","column":0,"line":0,"namePos":5244,"name":"addChild","object":null}},"lparen":0,"args":[{"children":[],"start":5253,"end":5258,"code":"child","nodeType":"Identifier","column":0,"line":0,"namePos":5253,"name":"child","object":null}],"ellipsis":0,"rparen":0}},{"children":[],"start":5264,"end":5304,"code":"n.incrementChildPrio(len(n.indices) - 1)","nodeType":"ExpressionStatement","column":0,"line":0,"Expression":{"children":[],"start":5264,"end":5304,"code":"n.incrementChildPrio(len(n.indices) - 1)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":5264,"end":5284,"code":"n.incrementChildPrio","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":5264,"end":5265,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":5264,"name":"n","object":null},"sel":{"children":[],"start":5266,"end":5284,"code":"incrementChildPrio","nodeType":"Identifier","column":0,"line":0,"namePos":5266,"name":"incrementChildPrio","object":null}},"lparen":0,"args":[{"children":[],"start":5285,"end":5303,"code":"len(n.indices) - 1","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":5285,"end":5299,"code":"len(n.indices)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":5285,"end":5288,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":5285,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":5289,"end":5298,"code":"n.indices","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":5289,"end":5290,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":5289,"name":"n","object":null},"sel":{"children":[],"start":5291,"end":5298,"code":"indices","nodeType":"Identifier","column":0,"line":0,"namePos":5291,"name":"indices","object":null}}],"ellipsis":0,"rparen":0},"opPos":5300,"op":13,"rightExpression":{"children":[],"start":5302,"end":5303,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":5302,"kind":5,"value":"1"}}],"ellipsis":0,"rparen":0}},{"children":[],"start":5309,"end":5318,"code":"n = child","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":5309,"end":5310,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":5309,"name":"n","object":null}],"tokenPos":5311,"token":42,"rhs":[{"children":[],"start":5313,"end":5318,"code":"child","nodeType":"Identifier","column":0,"line":0,"namePos":5313,"name":"child","object":null}]}],"rbrace":5322},"else":{"children":[],"start":5329,"end":6192,"code":"if n.wildChild {\n\tn = n.children[len(n.children)-1]\n\tn.priority++\n\tif len(path) \u003e= len(n.path) \u0026\u0026 n.path == path[:len(n.path)] \u0026\u0026 n.nType != catchAll \u0026\u0026 (len(n.path) \u003e= len(path) || path[len(n.path)] == '/') {\n\t\tcontinue walk\n\t}\n\tpathSeg := path\n\tif n.nType != catchAll {\n\t\tpathSeg = strings.SplitN(pathSeg, \"/\", 2)[0]\n\t}\n\tprefix := fullPath[:strings.Index(fullPath, pathSeg)] + n.path\n\tpanic(\"'\" + pathSeg + \"' in new path '\" + fullPath + \"' conflicts with existing wildcard '\" + n.path + \"' in existing prefix '\" + prefix + \"'\")\n}","nodeType":"IfStatement","column":0,"line":0,"if":5329,"initialization":null,"condition":{"children":[],"start":5332,"end":5343,"code":"n.wildChild","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":5332,"end":5333,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":5332,"name":"n","object":null},"sel":{"children":[],"start":5334,"end":5343,"code":"wildChild","nodeType":"Identifier","column":0,"line":0,"namePos":5334,"name":"wildChild","object":null}},"body":{"children":[],"start":5344,"end":6192,"code":"{\n\tn = n.children[len(n.children)-1]\n\tn.priority++\n\tif len(path) \u003e= len(n.path) \u0026\u0026 n.path == path[:len(n.path)] \u0026\u0026 n.nType != catchAll \u0026\u0026 (len(n.path) \u003e= len(path) || path[len(n.path)] == '/') {\n\t\tcontinue walk\n\t}\n\tpathSeg := path\n\tif n.nType != catchAll {\n\t\tpathSeg = strings.SplitN(pathSeg, \"/\", 2)[0]\n\t}\n\tprefix := fullPath[:strings.Index(fullPath, pathSeg)] + n.path\n\tpanic(\"'\" + pathSeg + \"' in new path '\" + fullPath + \"' conflicts with existing wildcard '\" + n.path + \"' in existing prefix '\" + prefix + \"'\")\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":5344,"list":[{"children":[],"start":5441,"end":5474,"code":"n = n.children[len(n.children)-1]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":5441,"end":5442,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":5441,"name":"n","object":null}],"tokenPos":5443,"token":42,"rhs":[{"children":[],"start":5445,"end":5474,"code":"n.children[len(n.children)-1]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":5445,"end":5455,"code":"n.children","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":5445,"end":5446,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":5445,"name":"n","object":null},"sel":{"children":[],"start":5447,"end":5455,"code":"children","nodeType":"Identifier","column":0,"line":0,"namePos":5447,"name":"children","object":null}},"leftBracket":5455,"index":{"children":[],"start":5456,"end":5473,"code":"len(n.children) - 1","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":5456,"end":5471,"code":"len(n.children)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":5456,"end":5459,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":5456,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":5460,"end":5470,"code":"n.children","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":5460,"end":5461,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":5460,"name":"n","object":null},"sel":{"children":[],"start":5462,"end":5470,"code":"children","nodeType":"Identifier","column":0,"line":0,"namePos":5462,"name":"children","object":null}}],"ellipsis":0,"rparen":0},"opPos":5471,"op":13,"rightExpression":{"children":[],"start":5472,"end":5473,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":5472,"kind":5,"value":"1"}},"rightBracket":5473}]},{"children":[],"start":5479,"end":5491,"code":"n.priority++","nodeType":"IncrementDecrementStatement","column":0,"line":0,"Expression":{"children":[],"start":5479,"end":5489,"code":"n.priority","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":5479,"end":5480,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":5479,"name":"n","object":null},"sel":{"children":[],"start":5481,"end":5489,"code":"priority","nodeType":"Identifier","column":0,"line":0,"namePos":5481,"name":"priority","object":null}},"TokenPosition":5489,"Token":37},{"children":[],"start":5534,"end":5821,"code":"if len(path) \u003e= len(n.path) \u0026\u0026 n.path == path[:len(n.path)] \u0026\u0026 n.nType != catchAll \u0026\u0026 (len(n.path) \u003e= len(path) || path[len(n.path)] == '/') {\n\tcontinue walk\n}","nodeType":"IfStatement","column":0,"line":0,"if":5534,"initialization":null,"condition":{"children":[],"start":5537,"end":5794,"code":"len(path) \u003e= len(n.path) \u0026\u0026 n.path == path[:len(n.path)] \u0026\u0026 n.nType != catchAll \u0026\u0026 (len(n.path) \u003e= len(path) || path[len(n.path)] == '/')","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":5537,"end":5674,"code":"len(path) \u003e= len(n.path) \u0026\u0026 n.path == path[:len(n.path)] \u0026\u0026 n.nType != catchAll","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":5537,"end":5593,"code":"len(path) \u003e= len(n.path) \u0026\u0026 n.path == path[:len(n.path)]","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":5537,"end":5561,"code":"len(path) \u003e= len(n.path)","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":5537,"end":5546,"code":"len(path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":5537,"end":5540,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":5537,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":5541,"end":5545,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":5541,"name":"path","object":null}],"ellipsis":0,"rparen":0},"opPos":5547,"op":46,"rightExpression":{"children":[],"start":5550,"end":5561,"code":"len(n.path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":5550,"end":5553,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":5550,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":5554,"end":5560,"code":"n.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":5554,"end":5555,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":5554,"name":"n","object":null},"sel":{"children":[],"start":5556,"end":5560,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":5556,"name":"path","object":null}}],"ellipsis":0,"rparen":0}},"opPos":5562,"op":34,"rightExpression":{"children":[],"start":5565,"end":5593,"code":"n.path == path[:len(n.path)]","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":5565,"end":5571,"code":"n.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":5565,"end":5566,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":5565,"name":"n","object":null},"sel":{"children":[],"start":5567,"end":5571,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":5567,"name":"path","object":null}},"opPos":5572,"op":39,"rightExpression":{"children":[],"start":5575,"end":5593,"code":"path[:len(n.path)]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":5575,"end":5579,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":5575,"name":"path","object":null},"leftBracket":5579,"low":null,"high":{"children":[],"start":5581,"end":5592,"code":"len(n.path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":5581,"end":5584,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":5581,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":5585,"end":5591,"code":"n.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":5585,"end":5586,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":5585,"name":"n","object":null},"sel":{"children":[],"start":5587,"end":5591,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":5587,"name":"path","object":null}}],"ellipsis":0,"rparen":0},"max":null,"slice3":false,"rightBracket":5592}}},"opPos":5594,"op":34,"rightExpression":{"children":[],"start":5655,"end":5674,"code":"n.nType != catchAll","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":5655,"end":5662,"code":"n.nType","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":5655,"end":5656,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":5655,"name":"n","object":null},"sel":{"children":[],"start":5657,"end":5662,"code":"nType","nodeType":"Identifier","column":0,"line":0,"namePos":5657,"name":"nType","object":null}},"opPos":5663,"op":44,"rightExpression":{"children":[],"start":5666,"end":5674,"code":"catchAll","nodeType":"Identifier","column":0,"line":0,"namePos":5666,"name":"catchAll","object":null}}},"opPos":5675,"op":34,"rightExpression":{"children":[],"start":5740,"end":5794,"code":"(len(n.path) \u003e= len(path) || path[len(n.path)] == '/')","nodeType":"ParenthesizedExpression","column":0,"line":0,"lparen":5740,"expression":{"children":[],"start":5741,"end":5793,"code":"len(n.path) \u003e= len(path) || path[len(n.path)] == '/'","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":5741,"end":5765,"code":"len(n.path) \u003e= len(path)","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":5741,"end":5752,"code":"len(n.path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":5741,"end":5744,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":5741,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":5745,"end":5751,"code":"n.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":5745,"end":5746,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":5745,"name":"n","object":null},"sel":{"children":[],"start":5747,"end":5751,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":5747,"name":"path","object":null}}],"ellipsis":0,"rparen":0},"opPos":5753,"op":46,"rightExpression":{"children":[],"start":5756,"end":5765,"code":"len(path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":5756,"end":5759,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":5756,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":5760,"end":5764,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":5760,"name":"path","object":null}],"ellipsis":0,"rparen":0}},"opPos":5766,"op":35,"rightExpression":{"children":[],"start":5769,"end":5793,"code":"path[len(n.path)] == '/'","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":5769,"end":5786,"code":"path[len(n.path)]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":5769,"end":5773,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":5769,"name":"path","object":null},"leftBracket":5773,"index":{"children":[],"start":5774,"end":5785,"code":"len(n.path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":5774,"end":5777,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":5774,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":5778,"end":5784,"code":"n.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":5778,"end":5779,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":5778,"name":"n","object":null},"sel":{"children":[],"start":5780,"end":5784,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":5780,"name":"path","object":null}}],"ellipsis":0,"rparen":0},"rightBracket":5785},"opPos":5787,"op":39,"rightExpression":{"children":[],"start":5790,"end":5793,"code":"'/'","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":5790,"kind":8,"value":"'/'"}}},"rparen":5793}},"body":{"children":[],"start":5795,"end":5821,"code":"{\n\tcontinue walk\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":5795,"list":[{"children":[],"start":5802,"end":5815,"code":"continue walk","nodeType":"BranchStatement","column":0,"line":0,"tokenPosition":5802,"token":65,"label":{"children":[],"start":5811,"end":5815,"code":"walk","nodeType":"Identifier","column":0,"line":0,"namePos":5811,"name":"walk","object":null}}],"rbrace":5820},"else":null},{"children":[],"start":5852,"end":5867,"code":"pathSeg := path","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":5852,"end":5859,"code":"pathSeg","nodeType":"Identifier","column":0,"line":0,"namePos":5852,"name":"pathSeg","object":null}],"tokenPos":5860,"token":47,"rhs":[{"children":[],"start":5863,"end":5867,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":5863,"name":"path","object":null}]},{"children":[],"start":5872,"end":5952,"code":"if n.nType != catchAll {\n\tpathSeg = strings.SplitN(pathSeg, \"/\", 2)[0]\n}","nodeType":"IfStatement","column":0,"line":0,"if":5872,"initialization":null,"condition":{"children":[],"start":5875,"end":5894,"code":"n.nType != catchAll","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":5875,"end":5882,"code":"n.nType","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":5875,"end":5876,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":5875,"name":"n","object":null},"sel":{"children":[],"start":5877,"end":5882,"code":"nType","nodeType":"Identifier","column":0,"line":0,"namePos":5877,"name":"nType","object":null}},"opPos":5883,"op":44,"rightExpression":{"children":[],"start":5886,"end":5894,"code":"catchAll","nodeType":"Identifier","column":0,"line":0,"namePos":5886,"name":"catchAll","object":null}},"body":{"children":[],"start":5895,"end":5952,"code":"{\n\tpathSeg = strings.SplitN(pathSeg, \"/\", 2)[0]\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":5895,"list":[{"children":[],"start":5902,"end":5946,"code":"pathSeg = strings.SplitN(pathSeg, \"/\", 2)[0]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":5902,"end":5909,"code":"pathSeg","nodeType":"Identifier","column":0,"line":0,"namePos":5902,"name":"pathSeg","object":null}],"tokenPos":5910,"token":42,"rhs":[{"children":[],"start":5912,"end":5946,"code":"strings.SplitN(pathSeg, \"/\", 2)[0]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":5912,"end":5943,"code":"strings.SplitN(pathSeg, \"/\", 2)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":5912,"end":5926,"code":"strings.SplitN","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":5912,"end":5919,"code":"strings","nodeType":"Identifier","column":0,"line":0,"namePos":5912,"name":"strings","object":null},"sel":{"children":[],"start":5920,"end":5926,"code":"SplitN","nodeType":"Identifier","column":0,"line":0,"namePos":5920,"name":"SplitN","object":null}},"lparen":0,"args":[{"children":[],"start":5927,"end":5934,"code":"pathSeg","nodeType":"Identifier","column":0,"line":0,"namePos":5927,"name":"pathSeg","object":null},{"children":[],"start":5936,"end":5939,"code":"\"/\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":5936,"kind":9,"value":"\"/\""},{"children":[],"start":5941,"end":5942,"code":"2","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":5941,"kind":5,"value":"2"}],"ellipsis":0,"rparen":0},"leftBracket":5943,"index":{"children":[],"start":5944,"end":5945,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":5944,"kind":5,"value":"0"},"rightBracket":5945}]}],"rbrace":5951},"else":null},{"children":[],"start":5957,"end":6019,"code":"prefix := fullPath[:strings.Index(fullPath, pathSeg)] + n.path","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":5957,"end":5963,"code":"prefix","nodeType":"Identifier","column":0,"line":0,"namePos":5957,"name":"prefix","object":null}],"tokenPos":5964,"token":47,"rhs":[{"children":[],"start":5967,"end":6019,"code":"fullPath[:strings.Index(fullPath, pathSeg)] + n.path","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":5967,"end":6010,"code":"fullPath[:strings.Index(fullPath, pathSeg)]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":5967,"end":5975,"code":"fullPath","nodeType":"Identifier","column":0,"line":0,"namePos":5967,"name":"fullPath","object":null},"leftBracket":5975,"low":null,"high":{"children":[],"start":5977,"end":6009,"code":"strings.Index(fullPath, pathSeg)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":5977,"end":5990,"code":"strings.Index","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":5977,"end":5984,"code":"strings","nodeType":"Identifier","column":0,"line":0,"namePos":5977,"name":"strings","object":null},"sel":{"children":[],"start":5985,"end":5990,"code":"Index","nodeType":"Identifier","column":0,"line":0,"namePos":5985,"name":"Index","object":null}},"lparen":0,"args":[{"children":[],"start":5991,"end":5999,"code":"fullPath","nodeType":"Identifier","column":0,"line":0,"namePos":5991,"name":"fullPath","object":null},{"children":[],"start":6001,"end":6008,"code":"pathSeg","nodeType":"Identifier","column":0,"line":0,"namePos":6001,"name":"pathSeg","object":null}],"ellipsis":0,"rparen":0},"max":null,"slice3":false,"rightBracket":6009},"opPos":6011,"op":12,"rightExpression":{"children":[],"start":6013,"end":6019,"code":"n.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":6013,"end":6014,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":6013,"name":"n","object":null},"sel":{"children":[],"start":6015,"end":6019,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":6015,"name":"path","object":null}}}]},{"children":[],"start":6024,"end":6187,"code":"panic(\"'\" + pathSeg + \"' in new path '\" + fullPath + \"' conflicts with existing wildcard '\" + n.path + \"' in existing prefix '\" + prefix + \"'\")","nodeType":"ExpressionStatement","column":0,"line":0,"Expression":{"children":[],"start":6024,"end":6187,"code":"panic(\"'\" + pathSeg + \"' in new path '\" + fullPath + \"' conflicts with existing wildcard '\" + n.path + \"' in existing prefix '\" + prefix + \"'\")","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":6024,"end":6029,"code":"panic","nodeType":"Identifier","column":0,"line":0,"namePos":6024,"name":"panic","object":null},"lparen":0,"args":[{"children":[],"start":6030,"end":6186,"code":"\"'\" + pathSeg + \"' in new path '\" + fullPath + \"' conflicts with existing wildcard '\" + n.path + \"' in existing prefix '\" + prefix + \"'\"","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":6030,"end":6175,"code":"\"'\" + pathSeg + \"' in new path '\" + fullPath + \"' conflicts with existing wildcard '\" + n.path + \"' in existing prefix '\" + prefix","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":6030,"end":6166,"code":"\"'\" + pathSeg + \"' in new path '\" + fullPath + \"' conflicts with existing wildcard '\" + n.path + \"' in existing prefix '\"","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":6030,"end":6134,"code":"\"'\" + pathSeg + \"' in new path '\" + fullPath + \"' conflicts with existing wildcard '\" + n.path","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":6030,"end":6125,"code":"\"'\" + pathSeg + \"' in new path '\" + fullPath + \"' conflicts with existing wildcard '\"","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":6030,"end":6079,"code":"\"'\" + pathSeg + \"' in new path '\" + fullPath","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":6030,"end":6068,"code":"\"'\" + pathSeg + \"' in new path '\"","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":6030,"end":6043,"code":"\"'\" + pathSeg","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":6030,"end":6033,"code":"\"'\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":6030,"kind":9,"value":"\"'\""},"opPos":6034,"op":12,"rightExpression":{"children":[],"start":6036,"end":6043,"code":"pathSeg","nodeType":"Identifier","column":0,"line":0,"namePos":6036,"name":"pathSeg","object":null}},"opPos":6044,"op":12,"rightExpression":{"children":[],"start":6051,"end":6068,"code":"\"' in new path '\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":6051,"kind":9,"value":"\"' in new path '\""}},"opPos":6069,"op":12,"rightExpression":{"children":[],"start":6071,"end":6079,"code":"fullPath","nodeType":"Identifier","column":0,"line":0,"namePos":6071,"name":"fullPath","object":null}},"opPos":6080,"op":12,"rightExpression":{"children":[],"start":6087,"end":6125,"code":"\"' conflicts with existing wildcard '\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":6087,"kind":9,"value":"\"' conflicts with existing wildcard '\""}},"opPos":6126,"op":12,"rightExpression":{"children":[],"start":6128,"end":6134,"code":"n.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":6128,"end":6129,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":6128,"name":"n","object":null},"sel":{"children":[],"start":6130,"end":6134,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":6130,"name":"path","object":null}}},"opPos":6135,"op":12,"rightExpression":{"children":[],"start":6142,"end":6166,"code":"\"' in existing prefix '\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":6142,"kind":9,"value":"\"' in existing prefix '\""}},"opPos":6167,"op":12,"rightExpression":{"children":[],"start":6169,"end":6175,"code":"prefix","nodeType":"Identifier","column":0,"line":0,"namePos":6169,"name":"prefix","object":null}},"opPos":6176,"op":12,"rightExpression":{"children":[],"start":6183,"end":6186,"code":"\"'\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":6183,"kind":9,"value":"\"'\""}}],"ellipsis":0,"rparen":0}}],"rbrace":6191},"else":null}},{"children":[],"start":6197,"end":6236,"code":"n.insertChild(path, fullPath, handlers)","nodeType":"ExpressionStatement","column":0,"line":0,"Expression":{"children":[],"start":6197,"end":6236,"code":"n.insertChild(path, fullPath, handlers)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":6197,"end":6210,"code":"n.insertChild","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":6197,"end":6198,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":6197,"name":"n","object":null},"sel":{"children":[],"start":6199,"end":6210,"code":"insertChild","nodeType":"Identifier","column":0,"line":0,"namePos":6199,"name":"insertChild","object":null}},"lparen":0,"args":[{"children":[],"start":6211,"end":6215,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":6211,"name":"path","object":null},{"children":[],"start":6217,"end":6225,"code":"fullPath","nodeType":"Identifier","column":0,"line":0,"namePos":6217,"name":"fullPath","object":null},{"children":[],"start":6227,"end":6235,"code":"handlers","nodeType":"Identifier","column":0,"line":0,"namePos":6227,"name":"handlers","object":null}],"ellipsis":0,"rparen":0}},{"children":[],"start":6240,"end":6246,"code":"return","nodeType":"ReturnStatement","column":0,"line":0,"return":6240,"results":[]}],"rbrace":6249},"else":null},{"children":[],"start":6296,"end":6394,"code":"if n.handlers != nil {\n\tpanic(\"handlers are already registered for path '\" + fullPath + \"'\")\n}","nodeType":"IfStatement","column":0,"line":0,"if":6296,"initialization":null,"condition":{"children":[],"start":6299,"end":6316,"code":"n.handlers != nil","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":6299,"end":6309,"code":"n.handlers","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":6299,"end":6300,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":6299,"name":"n","object":null},"sel":{"children":[],"start":6301,"end":6309,"code":"handlers","nodeType":"Identifier","column":0,"line":0,"namePos":6301,"name":"handlers","object":null}},"opPos":6310,"op":44,"rightExpression":{"children":[],"start":6313,"end":6316,"code":"nil","nodeType":"Identifier","column":0,"line":0,"namePos":6313,"name":"nil","object":null}},"body":{"children":[],"start":6317,"end":6394,"code":"{\n\tpanic(\"handlers are already registered for path '\" + fullPath + \"'\")\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":6317,"list":[{"children":[],"start":6322,"end":6390,"code":"panic(\"handlers are already registered for path '\" + fullPath + \"'\")","nodeType":"ExpressionStatement","column":0,"line":0,"Expression":{"children":[],"start":6322,"end":6390,"code":"panic(\"handlers are already registered for path '\" + fullPath + \"'\")","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":6322,"end":6327,"code":"panic","nodeType":"Identifier","column":0,"line":0,"namePos":6322,"name":"panic","object":null},"lparen":0,"args":[{"children":[],"start":6328,"end":6389,"code":"\"handlers are already registered for path '\" + fullPath + \"'\"","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":6328,"end":6383,"code":"\"handlers are already registered for path '\" + fullPath","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":6328,"end":6372,"code":"\"handlers are already registered for path '\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":6328,"kind":9,"value":"\"handlers are already registered for path '\""},"opPos":6373,"op":12,"rightExpression":{"children":[],"start":6375,"end":6383,"code":"fullPath","nodeType":"Identifier","column":0,"line":0,"namePos":6375,"name":"fullPath","object":null}},"opPos":6384,"op":12,"rightExpression":{"children":[],"start":6386,"end":6389,"code":"\"'\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":6386,"kind":9,"value":"\"'\""}}],"ellipsis":0,"rparen":0}}],"rbrace":6393},"else":null},{"children":[],"start":6397,"end":6418,"code":"n.handlers = handlers","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":6397,"end":6407,"code":"n.handlers","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":6397,"end":6398,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":6397,"name":"n","object":null},"sel":{"children":[],"start":6399,"end":6407,"code":"handlers","nodeType":"Identifier","column":0,"line":0,"namePos":6399,"name":"handlers","object":null}}],"tokenPos":6408,"token":42,"rhs":[{"children":[],"start":6410,"end":6418,"code":"handlers","nodeType":"Identifier","column":0,"line":0,"namePos":6410,"name":"handlers","object":null}]},{"children":[],"start":6421,"end":6442,"code":"n.fullPath = fullPath","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":6421,"end":6431,"code":"n.fullPath","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":6421,"end":6422,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":6421,"name":"n","object":null},"sel":{"children":[],"start":6423,"end":6431,"code":"fullPath","nodeType":"Identifier","column":0,"line":0,"namePos":6423,"name":"fullPath","object":null}}],"tokenPos":6432,"token":42,"rhs":[{"children":[],"start":6434,"end":6442,"code":"fullPath","nodeType":"Identifier","column":0,"line":0,"namePos":6434,"name":"fullPath","object":null}]},{"children":[],"start":6445,"end":6451,"code":"return","nodeType":"ReturnStatement","column":0,"line":0,"return":6445,"results":[]}],"rbrace":6453}},"label":{"children":[],"start":3698,"end":3702,"code":"walk","nodeType":"Identifier","column":0,"line":0,"namePos":3698,"name":"walk","object":null},"colon":3702}],"rbrace":6455}},{"children":[],"start":6584,"end":7105,"code":"func findWildcard(path string) (wildcard string, i int, valid bool) {\n\tfor start, c := range []byte(path) {\n\t\tif c != ':' \u0026\u0026 c != '*' {\n\t\t\tcontinue\n\t\t}\n\t\tvalid = true\n\t\tfor end, c := range []byte(path[start+1:]) {\n\t\t\tswitch c {\n\t\t\tcase '/':\n\t\t\t\treturn path[start : start+1+end], start, valid\n\t\t\tcase ':', '*':\n\t\t\t\tvalid = false\n\t\t\t}\n\t\t}\n\t\treturn path[start:], start, valid\n\t}\n\treturn \"\", -1, false\n}","nodeType":"FunctionDeclaration","column":0,"line":0,"doc":null,"receiver":null,"name":{"children":[],"start":6589,"end":6601,"code":"findWildcard","nodeType":"Identifier","column":0,"line":0,"namePos":6589,"name":"findWildcard","object":null},"type":{"children":[],"start":6584,"end":6651,"code":"func(path string) (wildcard string, i int, valid bool)","nodeType":"FunctionType","column":0,"line":0,"Function":6584,"TypeParams":null,"Params":{"children":[],"start":6601,"end":6614,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":6601,"list":[{"children":[],"start":6602,"end":6613,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":6602,"end":6606,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":6602,"name":"path","object":null}],"type":{"children":[],"start":6607,"end":6613,"code":"string","nodeType":"Identifier","column":0,"line":0,"namePos":6607,"name":"string","object":null},"tag":null,"comment":null}],"closing":6613},"Results":{"children":[],"start":6615,"end":6651,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":6615,"list":[{"children":[],"start":6616,"end":6631,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":6616,"end":6624,"code":"wildcard","nodeType":"Identifier","column":0,"line":0,"namePos":6616,"name":"wildcard","object":null}],"type":{"children":[],"start":6625,"end":6631,"code":"string","nodeType":"Identifier","column":0,"line":0,"namePos":6625,"name":"string","object":null},"tag":null,"comment":null},{"children":[],"start":6633,"end":6638,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":6633,"end":6634,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":6633,"name":"i","object":null}],"type":{"children":[],"start":6635,"end":6638,"code":"int","nodeType":"Identifier","column":0,"line":0,"namePos":6635,"name":"int","object":null},"tag":null,"comment":null},{"children":[],"start":6640,"end":6650,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":6640,"end":6645,"code":"valid","nodeType":"Identifier","column":0,"line":0,"namePos":6640,"name":"valid","object":null}],"type":{"children":[],"start":6646,"end":6650,"code":"bool","nodeType":"Identifier","column":0,"line":0,"namePos":6646,"name":"bool","object":null},"tag":null,"comment":null}],"closing":6650}},"body":{"children":[],"start":6652,"end":7105,"code":"{\n\tfor start, c := range []byte(path) {\n\t\tif c != ':' \u0026\u0026 c != '*' {\n\t\t\tcontinue\n\t\t}\n\t\tvalid = true\n\t\tfor end, c := range []byte(path[start+1:]) {\n\t\t\tswitch c {\n\t\t\tcase '/':\n\t\t\t\treturn path[start : start+1+end], start, valid\n\t\t\tcase ':', '*':\n\t\t\t\tvalid = false\n\t\t\t}\n\t\t}\n\t\treturn path[start:], start, valid\n\t}\n\treturn \"\", -1, false\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":6652,"list":[{"children":[],"start":6670,"end":7081,"code":"for start, c := range []byte(path) {\n\tif c != ':' \u0026\u0026 c != '*' {\n\t\tcontinue\n\t}\n\tvalid = true\n\tfor end, c := range []byte(path[start+1:]) {\n\t\tswitch c {\n\t\tcase '/':\n\t\t\treturn path[start : start+1+end], start, valid\n\t\tcase ':', '*':\n\t\t\tvalid = false\n\t\t}\n\t}\n\treturn path[start:], start, valid\n}","nodeType":"RangeStatement","column":0,"line":0,"for":6670,"key":{"children":[],"start":6674,"end":6679,"code":"start","nodeType":"Identifier","column":0,"line":0,"namePos":6674,"name":"start","object":null},"value":{"children":[],"start":6681,"end":6682,"code":"c","nodeType":"Identifier","column":0,"line":0,"namePos":6681,"name":"c","object":null},"tokenPos":6683,"token":47,"range":6686,"expression":{"children":[],"start":6692,"end":6704,"code":"[]byte(path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":6692,"end":6698,"code":"[]byte","nodeType":"ArrayType","column":0,"line":0,"leftBracket":6692,"length":null,"element":{"children":[],"start":6694,"end":6698,"code":"byte","nodeType":"Identifier","column":0,"line":0,"namePos":6694,"name":"byte","object":null}},"lparen":0,"args":[{"children":[],"start":6699,"end":6703,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":6699,"name":"path","object":null}],"ellipsis":0,"rparen":0},"body":{"children":[],"start":6705,"end":7081,"code":"{\n\tif c != ':' \u0026\u0026 c != '*' {\n\t\tcontinue\n\t}\n\tvalid = true\n\tfor end, c := range []byte(path[start+1:]) {\n\t\tswitch c {\n\t\tcase '/':\n\t\t\treturn path[start : start+1+end], start, valid\n\t\tcase ':', '*':\n\t\t\tvalid = false\n\t\t}\n\t}\n\treturn path[start:], start, valid\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":6705,"list":[{"children":[],"start":6768,"end":6809,"code":"if c != ':' \u0026\u0026 c != '*' {\n\tcontinue\n}","nodeType":"IfStatement","column":0,"line":0,"if":6768,"initialization":null,"condition":{"children":[],"start":6771,"end":6791,"code":"c != ':' \u0026\u0026 c != '*'","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":6771,"end":6779,"code":"c != ':'","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":6771,"end":6772,"code":"c","nodeType":"Identifier","column":0,"line":0,"namePos":6771,"name":"c","object":null},"opPos":6773,"op":44,"rightExpression":{"children":[],"start":6776,"end":6779,"code":"':'","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":6776,"kind":8,"value":"':'"}},"opPos":6780,"op":34,"rightExpression":{"children":[],"start":6783,"end":6791,"code":"c != '*'","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":6783,"end":6784,"code":"c","nodeType":"Identifier","column":0,"line":0,"namePos":6783,"name":"c","object":null},"opPos":6785,"op":44,"rightExpression":{"children":[],"start":6788,"end":6791,"code":"'*'","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":6788,"kind":8,"value":"'*'"}}},"body":{"children":[],"start":6792,"end":6809,"code":"{\n\tcontinue\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":6792,"list":[{"children":[],"start":6797,"end":6805,"code":"continue","nodeType":"BranchStatement","column":0,"line":0,"tokenPosition":6797,"token":65,"label":null}],"rbrace":6808},"else":null},{"children":[],"start":6860,"end":6872,"code":"valid = true","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":6860,"end":6865,"code":"valid","nodeType":"Identifier","column":0,"line":0,"namePos":6860,"name":"valid","object":null}],"tokenPos":6866,"token":42,"rhs":[{"children":[],"start":6868,"end":6872,"code":"true","nodeType":"Identifier","column":0,"line":0,"namePos":6868,"name":"true","object":null}]},{"children":[],"start":6875,"end":7042,"code":"for end, c := range []byte(path[start+1:]) {\n\tswitch c {\n\tcase '/':\n\t\treturn path[start : start+1+end], start, valid\n\tcase ':', '*':\n\t\tvalid = false\n\t}\n}","nodeType":"RangeStatement","column":0,"line":0,"for":6875,"key":{"children":[],"start":6879,"end":6882,"code":"end","nodeType":"Identifier","column":0,"line":0,"namePos":6879,"name":"end","object":null},"value":{"children":[],"start":6884,"end":6885,"code":"c","nodeType":"Identifier","column":0,"line":0,"namePos":6884,"name":"c","object":null},"tokenPos":6886,"token":47,"range":6889,"expression":{"children":[],"start":6895,"end":6917,"code":"[]byte(path[start+1:])","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":6895,"end":6901,"code":"[]byte","nodeType":"ArrayType","column":0,"line":0,"leftBracket":6895,"length":null,"element":{"children":[],"start":6897,"end":6901,"code":"byte","nodeType":"Identifier","column":0,"line":0,"namePos":6897,"name":"byte","object":null}},"lparen":0,"args":[{"children":[],"start":6902,"end":6916,"code":"path[start+1:]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":6902,"end":6906,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":6902,"name":"path","object":null},"leftBracket":6906,"low":{"children":[],"start":6907,"end":6914,"code":"start + 1","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":6907,"end":6912,"code":"start","nodeType":"Identifier","column":0,"line":0,"namePos":6907,"name":"start","object":null},"opPos":6912,"op":12,"rightExpression":{"children":[],"start":6913,"end":6914,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":6913,"kind":5,"value":"1"}},"high":null,"max":null,"slice3":false,"rightBracket":6915}],"ellipsis":0,"rparen":0},"body":{"children":[],"start":6918,"end":7042,"code":"{\n\tswitch c {\n\tcase '/':\n\t\treturn path[start : start+1+end], start, valid\n\tcase ':', '*':\n\t\tvalid = false\n\t}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":6918,"list":[{"children":[],"start":6923,"end":7038,"code":"switch c {\ncase '/':\n\treturn path[start : start+1+end], start, valid\ncase ':', '*':\n\tvalid = false\n}","nodeType":"SwitchStatement","column":0,"line":0,"switch":6923,"initialization":null,"tag":{"children":[],"start":6930,"end":6931,"code":"c","nodeType":"Identifier","column":0,"line":0,"namePos":6930,"name":"c","object":null},"body":{"children":[],"start":6932,"end":7038,"code":"{\n\tcase '/':\n\t\treturn path[start : start+1+end], start, valid\n\tcase ':', '*':\n\t\tvalid = false\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":6932,"list":[{"children":[],"start":6937,"end":6997,"code":"case '/':\n\treturn path[start : start+1+end], start, valid","nodeType":"CaseClause","column":0,"line":0,"case":6937,"list":[{"children":[],"start":6942,"end":6945,"code":"'/'","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":6942,"kind":8,"value":"'/'"}],"colon":6945,"body":[{"children":[],"start":6951,"end":6997,"code":"return path[start : start+1+end], start, valid","nodeType":"ReturnStatement","column":0,"line":0,"return":6951,"results":[{"children":[],"start":6958,"end":6983,"code":"path[start : start+1+end]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":6958,"end":6962,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":6958,"name":"path","object":null},"leftBracket":6962,"low":{"children":[],"start":6963,"end":6968,"code":"start","nodeType":"Identifier","column":0,"line":0,"namePos":6963,"name":"start","object":null},"high":{"children":[],"start":6971,"end":6982,"code":"start + 1 + end","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":6971,"end":6978,"code":"start + 1","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":6971,"end":6976,"code":"start","nodeType":"Identifier","column":0,"line":0,"namePos":6971,"name":"start","object":null},"opPos":6976,"op":12,"rightExpression":{"children":[],"start":6977,"end":6978,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":6977,"kind":5,"value":"1"}},"opPos":6978,"op":12,"rightExpression":{"children":[],"start":6979,"end":6982,"code":"end","nodeType":"Identifier","column":0,"line":0,"namePos":6979,"name":"end","object":null}},"max":null,"slice3":false,"rightBracket":6982},{"children":[],"start":6985,"end":6990,"code":"start","nodeType":"Identifier","column":0,"line":0,"namePos":6985,"name":"start","object":null},{"children":[],"start":6992,"end":6997,"code":"valid","nodeType":"Identifier","column":0,"line":0,"namePos":6992,"name":"valid","object":null}]}]},{"children":[],"start":7001,"end":7033,"code":"case ':', '*':\n\tvalid = false","nodeType":"CaseClause","column":0,"line":0,"case":7001,"list":[{"children":[],"start":7006,"end":7009,"code":"':'","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":7006,"kind":8,"value":"':'"},{"children":[],"start":7011,"end":7014,"code":"'*'","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":7011,"kind":8,"value":"'*'"}],"colon":7014,"body":[{"children":[],"start":7020,"end":7033,"code":"valid = false","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":7020,"end":7025,"code":"valid","nodeType":"Identifier","column":0,"line":0,"namePos":7020,"name":"valid","object":null}],"tokenPos":7026,"token":42,"rhs":[{"children":[],"start":7028,"end":7033,"code":"false","nodeType":"Identifier","column":0,"line":0,"namePos":7028,"name":"false","object":null}]}]}],"rbrace":7037}}],"rbrace":7041}},{"children":[],"start":7045,"end":7078,"code":"return path[start:], start, valid","nodeType":"ReturnStatement","column":0,"line":0,"return":7045,"results":[{"children":[],"start":7052,"end":7064,"code":"path[start:]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":7052,"end":7056,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":7052,"name":"path","object":null},"leftBracket":7056,"low":{"children":[],"start":7057,"end":7062,"code":"start","nodeType":"Identifier","column":0,"line":0,"namePos":7057,"name":"start","object":null},"high":null,"max":null,"slice3":false,"rightBracket":7063},{"children":[],"start":7066,"end":7071,"code":"start","nodeType":"Identifier","column":0,"line":0,"namePos":7066,"name":"start","object":null},{"children":[],"start":7073,"end":7078,"code":"valid","nodeType":"Identifier","column":0,"line":0,"namePos":7073,"name":"valid","object":null}]}],"rbrace":7080}},{"children":[],"start":7083,"end":7103,"code":"return \"\", -1, false","nodeType":"ReturnStatement","column":0,"line":0,"return":7083,"results":[{"children":[],"start":7090,"end":7092,"code":"\"\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":7090,"kind":9,"value":"\"\""},{"children":[],"start":7094,"end":7096,"code":"-1","nodeType":"UnaryExpression","column":0,"line":0,"opPos":7094,"op":13,"expression":{"children":[],"start":7095,"end":7096,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":7095,"kind":5,"value":"1"}},{"children":[],"start":7098,"end":7103,"code":"false","nodeType":"Identifier","column":0,"line":0,"namePos":7098,"name":"false","object":null}]}],"rbrace":7104}},{"children":[],"start":7107,"end":9563,"code":"func (n *node) insertChild(path string, fullPath string, handlers HandlersChain) {\n\tfor {\n\t\twildcard, i, valid := findWildcard(path)\n\t\tif i \u003c 0 {\n\t\t\tbreak\n\t\t}\n\t\tif !valid {\n\t\t\tpanic(\"only one wildcard per path segment is allowed, has: '\" + wildcard + \"' in path '\" + fullPath + \"'\")\n\t\t}\n\t\tif len(wildcard) \u003c 2 {\n\t\t\tpanic(\"wildcards must be named with a non-empty name in path '\" + fullPath + \"'\")\n\t\t}\n\t\tif wildcard[0] == ':' {\n\t\t\tif i \u003e 0 {\n\t\t\t\tn.path = path[:i]\n\t\t\t\tpath = path[i:]\n\t\t\t}\n\t\t\tchild := \u0026node{nType: param, path: wildcard, fullPath: fullPath}\n\t\t\tn.addChild(child)\n\t\t\tn.wildChild = true\n\t\t\tn = child\n\t\t\tn.priority++\n\t\t\tif len(wildcard) \u003c len(path) {\n\t\t\t\tpath = path[len(wildcard):]\n\t\t\t\tchild := \u0026node{priority: 1, fullPath: fullPath}\n\t\t\t\tn.addChild(child)\n\t\t\t\tn = child\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tn.handlers = handlers\n\t\t\treturn\n\t\t}\n\t\tif i+len(wildcard) != len(path) {\n\t\t\tpanic(\"catch-all routes are only allowed at the end of the path in path '\" + fullPath + \"'\")\n\t\t}\n\t\tif len(n.path) \u003e 0 \u0026\u0026 n.path[len(n.path)-1] == '/' {\n\t\t\tpathSeg := strings.SplitN(n.children[0].path, \"/\", 2)[0]\n\t\t\tpanic(\"catch-all wildcard '\" + path + \"' in new path '\" + fullPath + \"' conflicts with existing path segment '\" + pathSeg + \"' in existing prefix '\" + n.path + pathSeg + \"'\")\n\t\t}\n\t\ti--\n\t\tif path[i] != '/' {\n\t\t\tpanic(\"no / before catch-all in path '\" + fullPath + \"'\")\n\t\t}\n\t\tn.path = path[:i]\n\t\tchild := \u0026node{wildChild: true, nType: catchAll, fullPath: fullPath}\n\t\tn.addChild(child)\n\t\tn.indices = string('/')\n\t\tn = child\n\t\tn.priority++\n\t\tchild = \u0026node{path: path[i:], nType: catchAll, handlers: handlers, priority: 1, fullPath: fullPath}\n\t\tn.children = []*node{child}\n\t\treturn\n\t}\n\tn.path = path\n\tn.handlers = handlers\n\tn.fullPath = fullPath\n}","nodeType":"FunctionDeclaration","column":0,"line":0,"doc":null,"receiver":{"children":[],"start":7112,"end":7121,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":7112,"list":[{"children":[],"start":7113,"end":7120,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":7113,"end":7114,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":7113,"name":"n","object":null}],"type":{"children":[],"start":7115,"end":7120,"code":"*node","nodeType":"StarExpression","column":0,"line":0,"star":7115,"expression":{"children":[],"start":7116,"end":7120,"code":"node","nodeType":"Identifier","column":0,"line":0,"namePos":7116,"name":"node","object":null}},"tag":null,"comment":null}],"closing":7120},"name":{"children":[],"start":7122,"end":7133,"code":"insertChild","nodeType":"Identifier","column":0,"line":0,"namePos":7122,"name":"insertChild","object":null},"type":{"children":[],"start":7107,"end":7187,"code":"func(path string, fullPath string, handlers HandlersChain)","nodeType":"FunctionType","column":0,"line":0,"Function":7107,"TypeParams":null,"Params":{"children":[],"start":7133,"end":7187,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":7133,"list":[{"children":[],"start":7134,"end":7145,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":7134,"end":7138,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":7134,"name":"path","object":null}],"type":{"children":[],"start":7139,"end":7145,"code":"string","nodeType":"Identifier","column":0,"line":0,"namePos":7139,"name":"string","object":null},"tag":null,"comment":null},{"children":[],"start":7147,"end":7162,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":7147,"end":7155,"code":"fullPath","nodeType":"Identifier","column":0,"line":0,"namePos":7147,"name":"fullPath","object":null}],"type":{"children":[],"start":7156,"end":7162,"code":"string","nodeType":"Identifier","column":0,"line":0,"namePos":7156,"name":"string","object":null},"tag":null,"comment":null},{"children":[],"start":7164,"end":7186,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":7164,"end":7172,"code":"handlers","nodeType":"Identifier","column":0,"line":0,"namePos":7164,"name":"handlers","object":null}],"type":{"children":[],"start":7173,"end":7186,"code":"HandlersChain","nodeType":"Identifier","column":0,"line":0,"namePos":7173,"name":"HandlersChain","object":null},"tag":null,"comment":null}],"closing":7186},"Results":null},"body":{"children":[],"start":7188,"end":9563,"code":"{\n\tfor {\n\t\twildcard, i, valid := findWildcard(path)\n\t\tif i \u003c 0 {\n\t\t\tbreak\n\t\t}\n\t\tif !valid {\n\t\t\tpanic(\"only one wildcard per path segment is allowed, has: '\" + wildcard + \"' in path '\" + fullPath + \"'\")\n\t\t}\n\t\tif len(wildcard) \u003c 2 {\n\t\t\tpanic(\"wildcards must be named with a non-empty name in path '\" + fullPath + \"'\")\n\t\t}\n\t\tif wildcard[0] == ':' {\n\t\t\tif i \u003e 0 {\n\t\t\t\tn.path = path[:i]\n\t\t\t\tpath = path[i:]\n\t\t\t}\n\t\t\tchild := \u0026node{nType: param, path: wildcard, fullPath: fullPath}\n\t\t\tn.addChild(child)\n\t\t\tn.wildChild = true\n\t\t\tn = child\n\t\t\tn.priority++\n\t\t\tif len(wildcard) \u003c len(path) {\n\t\t\t\tpath = path[len(wildcard):]\n\t\t\t\tchild := \u0026node{priority: 1, fullPath: fullPath}\n\t\t\t\tn.addChild(child)\n\t\t\t\tn = child\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tn.handlers = handlers\n\t\t\treturn\n\t\t}\n\t\tif i+len(wildcard) != len(path) {\n\t\t\tpanic(\"catch-all routes are only allowed at the end of the path in path '\" + fullPath + \"'\")\n\t\t}\n\t\tif len(n.path) \u003e 0 \u0026\u0026 n.path[len(n.path)-1] == '/' {\n\t\t\tpathSeg := strings.SplitN(n.children[0].path, \"/\", 2)[0]\n\t\t\tpanic(\"catch-all wildcard '\" + path + \"' in new path '\" + fullPath + \"' conflicts with existing path segment '\" + pathSeg + \"' in existing prefix '\" + n.path + pathSeg + \"'\")\n\t\t}\n\t\ti--\n\t\tif path[i] != '/' {\n\t\t\tpanic(\"no / before catch-all in path '\" + fullPath + \"'\")\n\t\t}\n\t\tn.path = path[:i]\n\t\tchild := \u0026node{wildChild: true, nType: catchAll, fullPath: fullPath}\n\t\tn.addChild(child)\n\t\tn.indices = string('/')\n\t\tn = child\n\t\tn.priority++\n\t\tchild = \u0026node{path: path[i:], nType: catchAll, handlers: handlers, priority: 1, fullPath: fullPath}\n\t\tn.children = []*node{child}\n\t\treturn\n\t}\n\tn.path = path\n\tn.handlers = handlers\n\tn.fullPath = fullPath\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":7188,"list":[{"children":[],"start":7191,"end":9435,"code":"for {\n\twildcard, i, valid := findWildcard(path)\n\tif i \u003c 0 {\n\t\tbreak\n\t}\n\tif !valid {\n\t\tpanic(\"only one wildcard per path segment is allowed, has: '\" + wildcard + \"' in path '\" + fullPath + \"'\")\n\t}\n\tif len(wildcard) \u003c 2 {\n\t\tpanic(\"wildcards must be named with a non-empty name in path '\" + fullPath + \"'\")\n\t}\n\tif wildcard[0] == ':' {\n\t\tif i \u003e 0 {\n\t\t\tn.path = path[:i]\n\t\t\tpath = path[i:]\n\t\t}\n\t\tchild := \u0026node{nType: param, path: wildcard, fullPath: fullPath}\n\t\tn.addChild(child)\n\t\tn.wildChild = true\n\t\tn = child\n\t\tn.priority++\n\t\tif len(wildcard) \u003c len(path) {\n\t\t\tpath = path[len(wildcard):]\n\t\t\tchild := \u0026node{priority: 1, fullPath: fullPath}\n\t\t\tn.addChild(child)\n\t\t\tn = child\n\t\t\tcontinue\n\t\t}\n\t\tn.handlers = handlers\n\t\treturn\n\t}\n\tif i+len(wildcard) != len(path) {\n\t\tpanic(\"catch-all routes are only allowed at the end of the path in path '\" + fullPath + \"'\")\n\t}\n\tif len(n.path) \u003e 0 \u0026\u0026 n.path[len(n.path)-1] == '/' {\n\t\tpathSeg := strings.SplitN(n.children[0].path, \"/\", 2)[0]\n\t\tpanic(\"catch-all wildcard '\" + path + \"' in new path '\" + fullPath + \"' conflicts with existing path segment '\" + pathSeg + \"' in existing prefix '\" + n.path + pathSeg + \"'\")\n\t}\n\ti--\n\tif path[i] != '/' {\n\t\tpanic(\"no / before catch-all in path '\" + fullPath + \"'\")\n\t}\n\tn.path = path[:i]\n\tchild := \u0026node{wildChild: true, nType: catchAll, fullPath: fullPath}\n\tn.addChild(child)\n\tn.indices = string('/')\n\tn = child\n\tn.priority++\n\tchild = \u0026node{path: path[i:], nType: catchAll, handlers: handlers, priority: 1, fullPath: fullPath}\n\tn.children = []*node{child}\n\treturn\n}","nodeType":"ForStatement","column":0,"line":0,"for":7191,"initialization":null,"condition":null,"post":null,"body":{"children":[],"start":7195,"end":9435,"code":"{\n\twildcard, i, valid := findWildcard(path)\n\tif i \u003c 0 {\n\t\tbreak\n\t}\n\tif !valid {\n\t\tpanic(\"only one wildcard per path segment is allowed, has: '\" + wildcard + \"' in path '\" + fullPath + \"'\")\n\t}\n\tif len(wildcard) \u003c 2 {\n\t\tpanic(\"wildcards must be named with a non-empty name in path '\" + fullPath + \"'\")\n\t}\n\tif wildcard[0] == ':' {\n\t\tif i \u003e 0 {\n\t\t\tn.path = path[:i]\n\t\t\tpath = path[i:]\n\t\t}\n\t\tchild := \u0026node{nType: param, path: wildcard, fullPath: fullPath}\n\t\tn.addChild(child)\n\t\tn.wildChild = true\n\t\tn = child\n\t\tn.priority++\n\t\tif len(wildcard) \u003c len(path) {\n\t\t\tpath = path[len(wildcard):]\n\t\t\tchild := \u0026node{priority: 1, fullPath: fullPath}\n\t\t\tn.addChild(child)\n\t\t\tn = child\n\t\t\tcontinue\n\t\t}\n\t\tn.handlers = handlers\n\t\treturn\n\t}\n\tif i+len(wildcard) != len(path) {\n\t\tpanic(\"catch-all routes are only allowed at the end of the path in path '\" + fullPath + \"'\")\n\t}\n\tif len(n.path) \u003e 0 \u0026\u0026 n.path[len(n.path)-1] == '/' {\n\t\tpathSeg := strings.SplitN(n.children[0].path, \"/\", 2)[0]\n\t\tpanic(\"catch-all wildcard '\" + path + \"' in new path '\" + fullPath + \"' conflicts with existing path segment '\" + pathSeg + \"' in existing prefix '\" + n.path + pathSeg + \"'\")\n\t}\n\ti--\n\tif path[i] != '/' {\n\t\tpanic(\"no / before catch-all in path '\" + fullPath + \"'\")\n\t}\n\tn.path = path[:i]\n\tchild := \u0026node{wildChild: true, nType: catchAll, fullPath: fullPath}\n\tn.addChild(child)\n\tn.indices = string('/')\n\tn = child\n\tn.priority++\n\tchild = \u0026node{path: path[i:], nType: catchAll, handlers: handlers, priority: 1, fullPath: fullPath}\n\tn.children = []*node{child}\n\treturn\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":7195,"list":[{"children":[],"start":7237,"end":7277,"code":"wildcard, i, valid := findWildcard(path)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":7237,"end":7245,"code":"wildcard","nodeType":"Identifier","column":0,"line":0,"namePos":7237,"name":"wildcard","object":null},{"children":[],"start":7247,"end":7248,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":7247,"name":"i","object":null},{"children":[],"start":7250,"end":7255,"code":"valid","nodeType":"Identifier","column":0,"line":0,"namePos":7250,"name":"valid","object":null}],"tokenPos":7256,"token":47,"rhs":[{"children":[],"start":7259,"end":7277,"code":"findWildcard(path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":7259,"end":7271,"code":"findWildcard","nodeType":"Identifier","column":0,"line":0,"namePos":7259,"name":"findWildcard","object":null},"lparen":0,"args":[{"children":[],"start":7272,"end":7276,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":7272,"name":"path","object":null}],"ellipsis":0,"rparen":0}]},{"children":[],"start":7280,"end":7324,"code":"if i \u003c 0 {\n\tbreak\n}","nodeType":"IfStatement","column":0,"line":0,"if":7280,"initialization":null,"condition":{"children":[],"start":7283,"end":7288,"code":"i \u003c 0","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":7283,"end":7284,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":7283,"name":"i","object":null},"opPos":7285,"op":40,"rightExpression":{"children":[],"start":7287,"end":7288,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":7287,"kind":5,"value":"0"}},"body":{"children":[],"start":7289,"end":7324,"code":"{\n\tbreak\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":7289,"list":[{"children":[],"start":7315,"end":7320,"code":"break","nodeType":"BranchStatement","column":0,"line":0,"tokenPosition":7315,"token":61,"label":null}],"rbrace":7323},"else":null},{"children":[],"start":7394,"end":7523,"code":"if !valid {\n\tpanic(\"only one wildcard per path segment is allowed, has: '\" + wildcard + \"' in path '\" + fullPath + \"'\")\n}","nodeType":"IfStatement","column":0,"line":0,"if":7394,"initialization":null,"condition":{"children":[],"start":7397,"end":7403,"code":"!valid","nodeType":"UnaryExpression","column":0,"line":0,"opPos":7397,"op":43,"expression":{"children":[],"start":7398,"end":7403,"code":"valid","nodeType":"Identifier","column":0,"line":0,"namePos":7398,"name":"valid","object":null}},"body":{"children":[],"start":7404,"end":7523,"code":"{\n\tpanic(\"only one wildcard per path segment is allowed, has: '\" + wildcard + \"' in path '\" + fullPath + \"'\")\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":7404,"list":[{"children":[],"start":7409,"end":7519,"code":"panic(\"only one wildcard per path segment is allowed, has: '\" + wildcard + \"' in path '\" + fullPath + \"'\")","nodeType":"ExpressionStatement","column":0,"line":0,"Expression":{"children":[],"start":7409,"end":7519,"code":"panic(\"only one wildcard per path segment is allowed, has: '\" + wildcard + \"' in path '\" + fullPath + \"'\")","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":7409,"end":7414,"code":"panic","nodeType":"Identifier","column":0,"line":0,"namePos":7409,"name":"panic","object":null},"lparen":0,"args":[{"children":[],"start":7415,"end":7518,"code":"\"only one wildcard per path segment is allowed, has: '\" + wildcard + \"' in path '\" + fullPath + \"'\"","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":7415,"end":7512,"code":"\"only one wildcard per path segment is allowed, has: '\" + wildcard + \"' in path '\" + fullPath","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":7415,"end":7501,"code":"\"only one wildcard per path segment is allowed, has: '\" + wildcard + \"' in path '\"","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":7415,"end":7485,"code":"\"only one wildcard per path segment is allowed, has: '\" + wildcard","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":7415,"end":7470,"code":"\"only one wildcard per path segment is allowed, has: '\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":7415,"kind":9,"value":"\"only one wildcard per path segment is allowed, has: '\""},"opPos":7471,"op":12,"rightExpression":{"children":[],"start":7477,"end":7485,"code":"wildcard","nodeType":"Identifier","column":0,"line":0,"namePos":7477,"name":"wildcard","object":null}},"opPos":7486,"op":12,"rightExpression":{"children":[],"start":7488,"end":7501,"code":"\"' in path '\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":7488,"kind":9,"value":"\"' in path '\""}},"opPos":7502,"op":12,"rightExpression":{"children":[],"start":7504,"end":7512,"code":"fullPath","nodeType":"Identifier","column":0,"line":0,"namePos":7504,"name":"fullPath","object":null}},"opPos":7513,"op":12,"rightExpression":{"children":[],"start":7515,"end":7518,"code":"\"'\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":7515,"kind":9,"value":"\"'\""}}],"ellipsis":0,"rparen":0}}],"rbrace":7522},"else":null},{"children":[],"start":7565,"end":7676,"code":"if len(wildcard) \u003c 2 {\n\tpanic(\"wildcards must be named with a non-empty name in path '\" + fullPath + \"'\")\n}","nodeType":"IfStatement","column":0,"line":0,"if":7565,"initialization":null,"condition":{"children":[],"start":7568,"end":7585,"code":"len(wildcard) \u003c 2","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":7568,"end":7581,"code":"len(wildcard)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":7568,"end":7571,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":7568,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":7572,"end":7580,"code":"wildcard","nodeType":"Identifier","column":0,"line":0,"namePos":7572,"name":"wildcard","object":null}],"ellipsis":0,"rparen":0},"opPos":7582,"op":40,"rightExpression":{"children":[],"start":7584,"end":7585,"code":"2","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":7584,"kind":5,"value":"2"}},"body":{"children":[],"start":7586,"end":7676,"code":"{\n\tpanic(\"wildcards must be named with a non-empty name in path '\" + fullPath + \"'\")\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":7586,"list":[{"children":[],"start":7591,"end":7672,"code":"panic(\"wildcards must be named with a non-empty name in path '\" + fullPath + \"'\")","nodeType":"ExpressionStatement","column":0,"line":0,"Expression":{"children":[],"start":7591,"end":7672,"code":"panic(\"wildcards must be named with a non-empty name in path '\" + fullPath + \"'\")","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":7591,"end":7596,"code":"panic","nodeType":"Identifier","column":0,"line":0,"namePos":7591,"name":"panic","object":null},"lparen":0,"args":[{"children":[],"start":7597,"end":7671,"code":"\"wildcards must be named with a non-empty name in path '\" + fullPath + \"'\"","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":7597,"end":7665,"code":"\"wildcards must be named with a non-empty name in path '\" + fullPath","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":7597,"end":7654,"code":"\"wildcards must be named with a non-empty name in path '\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":7597,"kind":9,"value":"\"wildcards must be named with a non-empty name in path '\""},"opPos":7655,"op":12,"rightExpression":{"children":[],"start":7657,"end":7665,"code":"fullPath","nodeType":"Identifier","column":0,"line":0,"namePos":7657,"name":"fullPath","object":null}},"opPos":7666,"op":12,"rightExpression":{"children":[],"start":7668,"end":7671,"code":"\"'\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":7668,"kind":9,"value":"\"'\""}}],"ellipsis":0,"rparen":0}}],"rbrace":7675},"else":null},{"children":[],"start":7680,"end":8389,"code":"if wildcard[0] == ':' {\n\tif i \u003e 0 {\n\t\tn.path = path[:i]\n\t\tpath = path[i:]\n\t}\n\tchild := \u0026node{nType: param, path: wildcard, fullPath: fullPath}\n\tn.addChild(child)\n\tn.wildChild = true\n\tn = child\n\tn.priority++\n\tif len(wildcard) \u003c len(path) {\n\t\tpath = path[len(wildcard):]\n\t\tchild := \u0026node{priority: 1, fullPath: fullPath}\n\t\tn.addChild(child)\n\t\tn = child\n\t\tcontinue\n\t}\n\tn.handlers = handlers\n\treturn\n}","nodeType":"IfStatement","column":0,"line":0,"if":7680,"initialization":null,"condition":{"children":[],"start":7683,"end":7701,"code":"wildcard[0] == ':'","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":7683,"end":7694,"code":"wildcard[0]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":7683,"end":7691,"code":"wildcard","nodeType":"Identifier","column":0,"line":0,"namePos":7683,"name":"wildcard","object":null},"leftBracket":7691,"index":{"children":[],"start":7692,"end":7693,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":7692,"kind":5,"value":"0"},"rightBracket":7693},"opPos":7695,"op":39,"rightExpression":{"children":[],"start":7698,"end":7701,"code":"':'","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":7698,"kind":8,"value":"':'"}},"body":{"children":[],"start":7702,"end":8389,"code":"{\n\tif i \u003e 0 {\n\t\tn.path = path[:i]\n\t\tpath = path[i:]\n\t}\n\tchild := \u0026node{nType: param, path: wildcard, fullPath: fullPath}\n\tn.addChild(child)\n\tn.wildChild = true\n\tn = child\n\tn.priority++\n\tif len(wildcard) \u003c len(path) {\n\t\tpath = path[len(wildcard):]\n\t\tchild := \u0026node{priority: 1, fullPath: fullPath}\n\t\tn.addChild(child)\n\t\tn = child\n\t\tcontinue\n\t}\n\tn.handlers = handlers\n\treturn\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":7702,"list":[{"children":[],"start":7716,"end":7822,"code":"if i \u003e 0 {\n\tn.path = path[:i]\n\tpath = path[i:]\n}","nodeType":"IfStatement","column":0,"line":0,"if":7716,"initialization":null,"condition":{"children":[],"start":7719,"end":7724,"code":"i \u003e 0","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":7719,"end":7720,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":7719,"name":"i","object":null},"opPos":7721,"op":41,"rightExpression":{"children":[],"start":7723,"end":7724,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":7723,"kind":5,"value":"0"}},"body":{"children":[],"start":7725,"end":7822,"code":"{\n\tn.path = path[:i]\n\tpath = path[i:]\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":7725,"list":[{"children":[],"start":7780,"end":7797,"code":"n.path = path[:i]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":7780,"end":7786,"code":"n.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":7780,"end":7781,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":7780,"name":"n","object":null},"sel":{"children":[],"start":7782,"end":7786,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":7782,"name":"path","object":null}}],"tokenPos":7787,"token":42,"rhs":[{"children":[],"start":7789,"end":7797,"code":"path[:i]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":7789,"end":7793,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":7789,"name":"path","object":null},"leftBracket":7793,"low":null,"high":{"children":[],"start":7795,"end":7796,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":7795,"name":"i","object":null},"max":null,"slice3":false,"rightBracket":7796}]},{"children":[],"start":7802,"end":7817,"code":"path = path[i:]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":7802,"end":7806,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":7802,"name":"path","object":null}],"tokenPos":7807,"token":42,"rhs":[{"children":[],"start":7809,"end":7817,"code":"path[i:]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":7809,"end":7813,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":7809,"name":"path","object":null},"leftBracket":7813,"low":{"children":[],"start":7814,"end":7815,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":7814,"name":"i","object":null},"high":null,"max":null,"slice3":false,"rightBracket":7816}]}],"rbrace":7821},"else":null},{"children":[],"start":7827,"end":7916,"code":"child := \u0026node{nType: param, path: wildcard, fullPath: fullPath}","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":7827,"end":7832,"code":"child","nodeType":"Identifier","column":0,"line":0,"namePos":7827,"name":"child","object":null}],"tokenPos":7833,"token":47,"rhs":[{"children":[],"start":7836,"end":7916,"code":"\u0026node{nType: param, path: wildcard, fullPath: fullPath}","nodeType":"UnaryExpression","column":0,"line":0,"opPos":7836,"op":17,"expression":{"children":[],"start":7837,"end":7916,"code":"node{nType: param, path: wildcard, fullPath: fullPath}","nodeType":"CompositeLiteral","column":0,"line":0,"type":{"children":[],"start":7837,"end":7841,"code":"node","nodeType":"Identifier","column":0,"line":0,"namePos":7837,"name":"node","object":null},"lbrace":7841,"elements":[{"children":[],"start":7847,"end":7862,"code":"nType: param","nodeType":"KeyValueExpression","column":0,"line":0,"key":{"children":[],"start":7847,"end":7852,"code":"nType","nodeType":"Identifier","column":0,"line":0,"namePos":7847,"name":"nType","object":null},"colon":0,"value":{"children":[],"start":7857,"end":7862,"code":"param","nodeType":"Identifier","column":0,"line":0,"namePos":7857,"name":"param","object":null}},{"children":[],"start":7868,"end":7886,"code":"path: wildcard","nodeType":"KeyValueExpression","column":0,"line":0,"key":{"children":[],"start":7868,"end":7872,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":7868,"name":"path","object":null},"colon":0,"value":{"children":[],"start":7878,"end":7886,"code":"wildcard","nodeType":"Identifier","column":0,"line":0,"namePos":7878,"name":"wildcard","object":null}},{"children":[],"start":7892,"end":7910,"code":"fullPath: fullPath","nodeType":"KeyValueExpression","column":0,"line":0,"key":{"children":[],"start":7892,"end":7900,"code":"fullPath","nodeType":"Identifier","column":0,"line":0,"namePos":7892,"name":"fullPath","object":null},"colon":0,"value":{"children":[],"start":7902,"end":7910,"code":"fullPath","nodeType":"Identifier","column":0,"line":0,"namePos":7902,"name":"fullPath","object":null}}],"rbrace":7915,"incomplete":false}}]},{"children":[],"start":7920,"end":7937,"code":"n.addChild(child)","nodeType":"ExpressionStatement","column":0,"line":0,"Expression":{"children":[],"start":7920,"end":7937,"code":"n.addChild(child)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":7920,"end":7930,"code":"n.addChild","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":7920,"end":7921,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":7920,"name":"n","object":null},"sel":{"children":[],"start":7922,"end":7930,"code":"addChild","nodeType":"Identifier","column":0,"line":0,"namePos":7922,"name":"addChild","object":null}},"lparen":0,"args":[{"children":[],"start":7931,"end":7936,"code":"child","nodeType":"Identifier","column":0,"line":0,"namePos":7931,"name":"child","object":null}],"ellipsis":0,"rparen":0}},{"children":[],"start":7941,"end":7959,"code":"n.wildChild = true","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":7941,"end":7952,"code":"n.wildChild","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":7941,"end":7942,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":7941,"name":"n","object":null},"sel":{"children":[],"start":7943,"end":7952,"code":"wildChild","nodeType":"Identifier","column":0,"line":0,"namePos":7943,"name":"wildChild","object":null}}],"tokenPos":7953,"token":42,"rhs":[{"children":[],"start":7955,"end":7959,"code":"true","nodeType":"Identifier","column":0,"line":0,"namePos":7955,"name":"true","object":null}]},{"children":[],"start":7963,"end":7972,"code":"n = child","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":7963,"end":7964,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":7963,"name":"n","object":null}],"tokenPos":7965,"token":42,"rhs":[{"children":[],"start":7967,"end":7972,"code":"child","nodeType":"Identifier","column":0,"line":0,"namePos":7967,"name":"child","object":null}]},{"children":[],"start":7976,"end":7988,"code":"n.priority++","nodeType":"IncrementDecrementStatement","column":0,"line":0,"Expression":{"children":[],"start":7976,"end":7986,"code":"n.priority","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":7976,"end":7977,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":7976,"name":"n","object":null},"sel":{"children":[],"start":7978,"end":7986,"code":"priority","nodeType":"Identifier","column":0,"line":0,"namePos":7978,"name":"priority","object":null}},"TokenPosition":7986,"Token":37},{"children":[],"start":8101,"end":8287,"code":"if len(wildcard) \u003c len(path) {\n\tpath = path[len(wildcard):]\n\tchild := \u0026node{priority: 1, fullPath: fullPath}\n\tn.addChild(child)\n\tn = child\n\tcontinue\n}","nodeType":"IfStatement","column":0,"line":0,"if":8101,"initialization":null,"condition":{"children":[],"start":8104,"end":8129,"code":"len(wildcard) \u003c len(path)","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":8104,"end":8117,"code":"len(wildcard)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":8104,"end":8107,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":8104,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":8108,"end":8116,"code":"wildcard","nodeType":"Identifier","column":0,"line":0,"namePos":8108,"name":"wildcard","object":null}],"ellipsis":0,"rparen":0},"opPos":8118,"op":40,"rightExpression":{"children":[],"start":8120,"end":8129,"code":"len(path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":8120,"end":8123,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":8120,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":8124,"end":8128,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":8124,"name":"path","object":null}],"ellipsis":0,"rparen":0}},"body":{"children":[],"start":8130,"end":8287,"code":"{\n\tpath = path[len(wildcard):]\n\tchild := \u0026node{priority: 1, fullPath: fullPath}\n\tn.addChild(child)\n\tn = child\n\tcontinue\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":8130,"list":[{"children":[],"start":8136,"end":8163,"code":"path = path[len(wildcard):]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":8136,"end":8140,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":8136,"name":"path","object":null}],"tokenPos":8141,"token":42,"rhs":[{"children":[],"start":8143,"end":8163,"code":"path[len(wildcard):]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":8143,"end":8147,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":8143,"name":"path","object":null},"leftBracket":8147,"low":{"children":[],"start":8148,"end":8161,"code":"len(wildcard)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":8148,"end":8151,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":8148,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":8152,"end":8160,"code":"wildcard","nodeType":"Identifier","column":0,"line":0,"namePos":8152,"name":"wildcard","object":null}],"ellipsis":0,"rparen":0},"high":null,"max":null,"slice3":false,"rightBracket":8162}]},{"children":[],"start":8169,"end":8233,"code":"child := \u0026node{priority: 1, fullPath: fullPath}","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":8169,"end":8174,"code":"child","nodeType":"Identifier","column":0,"line":0,"namePos":8169,"name":"child","object":null}],"tokenPos":8175,"token":47,"rhs":[{"children":[],"start":8178,"end":8233,"code":"\u0026node{priority: 1, fullPath: fullPath}","nodeType":"UnaryExpression","column":0,"line":0,"opPos":8178,"op":17,"expression":{"children":[],"start":8179,"end":8233,"code":"node{priority: 1, fullPath: fullPath}","nodeType":"CompositeLiteral","column":0,"line":0,"type":{"children":[],"start":8179,"end":8183,"code":"node","nodeType":"Identifier","column":0,"line":0,"namePos":8179,"name":"node","object":null},"lbrace":8183,"elements":[{"children":[],"start":8190,"end":8201,"code":"priority: 1","nodeType":"KeyValueExpression","column":0,"line":0,"key":{"children":[],"start":8190,"end":8198,"code":"priority","nodeType":"Identifier","column":0,"line":0,"namePos":8190,"name":"priority","object":null},"colon":0,"value":{"children":[],"start":8200,"end":8201,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":8200,"kind":5,"value":"1"}},{"children":[],"start":8208,"end":8226,"code":"fullPath: fullPath","nodeType":"KeyValueExpression","column":0,"line":0,"key":{"children":[],"start":8208,"end":8216,"code":"fullPath","nodeType":"Identifier","column":0,"line":0,"namePos":8208,"name":"fullPath","object":null},"colon":0,"value":{"children":[],"start":8218,"end":8226,"code":"fullPath","nodeType":"Identifier","column":0,"line":0,"namePos":8218,"name":"fullPath","object":null}}],"rbrace":8232,"incomplete":false}}]},{"children":[],"start":8238,"end":8255,"code":"n.addChild(child)","nodeType":"ExpressionStatement","column":0,"line":0,"Expression":{"children":[],"start":8238,"end":8255,"code":"n.addChild(child)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":8238,"end":8248,"code":"n.addChild","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":8238,"end":8239,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":8238,"name":"n","object":null},"sel":{"children":[],"start":8240,"end":8248,"code":"addChild","nodeType":"Identifier","column":0,"line":0,"namePos":8240,"name":"addChild","object":null}},"lparen":0,"args":[{"children":[],"start":8249,"end":8254,"code":"child","nodeType":"Identifier","column":0,"line":0,"namePos":8249,"name":"child","object":null}],"ellipsis":0,"rparen":0}},{"children":[],"start":8260,"end":8269,"code":"n = child","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":8260,"end":8261,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":8260,"name":"n","object":null}],"tokenPos":8262,"token":42,"rhs":[{"children":[],"start":8264,"end":8269,"code":"child","nodeType":"Identifier","column":0,"line":0,"namePos":8264,"name":"child","object":null}]},{"children":[],"start":8274,"end":8282,"code":"continue","nodeType":"BranchStatement","column":0,"line":0,"tokenPosition":8274,"token":65,"label":null}],"rbrace":8286},"else":null},{"children":[],"start":8354,"end":8375,"code":"n.handlers = handlers","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":8354,"end":8364,"code":"n.handlers","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":8354,"end":8355,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":8354,"name":"n","object":null},"sel":{"children":[],"start":8356,"end":8364,"code":"handlers","nodeType":"Identifier","column":0,"line":0,"namePos":8356,"name":"handlers","object":null}}],"tokenPos":8365,"token":42,"rhs":[{"children":[],"start":8367,"end":8375,"code":"handlers","nodeType":"Identifier","column":0,"line":0,"namePos":8367,"name":"handlers","object":null}]},{"children":[],"start":8379,"end":8385,"code":"return","nodeType":"ReturnStatement","column":0,"line":0,"return":8379,"results":[]}],"rbrace":8388},"else":null},{"children":[],"start":8407,"end":8540,"code":"if i+len(wildcard) != len(path) {\n\tpanic(\"catch-all routes are only allowed at the end of the path in path '\" + fullPath + \"'\")\n}","nodeType":"IfStatement","column":0,"line":0,"if":8407,"initialization":null,"condition":{"children":[],"start":8410,"end":8438,"code":"i+len(wildcard) != len(path)","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":8410,"end":8425,"code":"i + len(wildcard)","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":8410,"end":8411,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":8410,"name":"i","object":null},"opPos":8411,"op":12,"rightExpression":{"children":[],"start":8412,"end":8425,"code":"len(wildcard)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":8412,"end":8415,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":8412,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":8416,"end":8424,"code":"wildcard","nodeType":"Identifier","column":0,"line":0,"namePos":8416,"name":"wildcard","object":null}],"ellipsis":0,"rparen":0}},"opPos":8426,"op":44,"rightExpression":{"children":[],"start":8429,"end":8438,"code":"len(path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":8429,"end":8432,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":8429,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":8433,"end":8437,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":8433,"name":"path","object":null}],"ellipsis":0,"rparen":0}},"body":{"children":[],"start":8439,"end":8540,"code":"{\n\tpanic(\"catch-all routes are only allowed at the end of the path in path '\" + fullPath + \"'\")\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":8439,"list":[{"children":[],"start":8444,"end":8536,"code":"panic(\"catch-all routes are only allowed at the end of the path in path '\" + fullPath + \"'\")","nodeType":"ExpressionStatement","column":0,"line":0,"Expression":{"children":[],"start":8444,"end":8536,"code":"panic(\"catch-all routes are only allowed at the end of the path in path '\" + fullPath + \"'\")","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":8444,"end":8449,"code":"panic","nodeType":"Identifier","column":0,"line":0,"namePos":8444,"name":"panic","object":null},"lparen":0,"args":[{"children":[],"start":8450,"end":8535,"code":"\"catch-all routes are only allowed at the end of the path in path '\" + fullPath + \"'\"","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":8450,"end":8529,"code":"\"catch-all routes are only allowed at the end of the path in path '\" + fullPath","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":8450,"end":8518,"code":"\"catch-all routes are only allowed at the end of the path in path '\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":8450,"kind":9,"value":"\"catch-all routes are only allowed at the end of the path in path '\""},"opPos":8519,"op":12,"rightExpression":{"children":[],"start":8521,"end":8529,"code":"fullPath","nodeType":"Identifier","column":0,"line":0,"namePos":8521,"name":"fullPath","object":null}},"opPos":8530,"op":12,"rightExpression":{"children":[],"start":8532,"end":8535,"code":"\"'\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":8532,"kind":9,"value":"\"'\""}}],"ellipsis":0,"rparen":0}}],"rbrace":8539},"else":null},{"children":[],"start":8544,"end":8854,"code":"if len(n.path) \u003e 0 \u0026\u0026 n.path[len(n.path)-1] == '/' {\n\tpathSeg := strings.SplitN(n.children[0].path, \"/\", 2)[0]\n\tpanic(\"catch-all wildcard '\" + path + \"' in new path '\" + fullPath + \"' conflicts with existing path segment '\" + pathSeg + \"' in existing prefix '\" + n.path + pathSeg + \"'\")\n}","nodeType":"IfStatement","column":0,"line":0,"if":8544,"initialization":null,"condition":{"children":[],"start":8547,"end":8594,"code":"len(n.path) \u003e 0 \u0026\u0026 n.path[len(n.path)-1] == '/'","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":8547,"end":8562,"code":"len(n.path) \u003e 0","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":8547,"end":8558,"code":"len(n.path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":8547,"end":8550,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":8547,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":8551,"end":8557,"code":"n.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":8551,"end":8552,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":8551,"name":"n","object":null},"sel":{"children":[],"start":8553,"end":8557,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":8553,"name":"path","object":null}}],"ellipsis":0,"rparen":0},"opPos":8559,"op":41,"rightExpression":{"children":[],"start":8561,"end":8562,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":8561,"kind":5,"value":"0"}},"opPos":8563,"op":34,"rightExpression":{"children":[],"start":8566,"end":8594,"code":"n.path[len(n.path)-1] == '/'","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":8566,"end":8587,"code":"n.path[len(n.path)-1]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":8566,"end":8572,"code":"n.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":8566,"end":8567,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":8566,"name":"n","object":null},"sel":{"children":[],"start":8568,"end":8572,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":8568,"name":"path","object":null}},"leftBracket":8572,"index":{"children":[],"start":8573,"end":8586,"code":"len(n.path) - 1","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":8573,"end":8584,"code":"len(n.path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":8573,"end":8576,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":8573,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":8577,"end":8583,"code":"n.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":8577,"end":8578,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":8577,"name":"n","object":null},"sel":{"children":[],"start":8579,"end":8583,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":8579,"name":"path","object":null}}],"ellipsis":0,"rparen":0},"opPos":8584,"op":13,"rightExpression":{"children":[],"start":8585,"end":8586,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":8585,"kind":5,"value":"1"}},"rightBracket":8586},"opPos":8588,"op":39,"rightExpression":{"children":[],"start":8591,"end":8594,"code":"'/'","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":8591,"kind":8,"value":"'/'"}}},"body":{"children":[],"start":8595,"end":8854,"code":"{\n\tpathSeg := strings.SplitN(n.children[0].path, \"/\", 2)[0]\n\tpanic(\"catch-all wildcard '\" + path + \"' in new path '\" + fullPath + \"' conflicts with existing path segment '\" + pathSeg + \"' in existing prefix '\" + n.path + pathSeg + \"'\")\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":8595,"list":[{"children":[],"start":8600,"end":8656,"code":"pathSeg := strings.SplitN(n.children[0].path, \"/\", 2)[0]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":8600,"end":8607,"code":"pathSeg","nodeType":"Identifier","column":0,"line":0,"namePos":8600,"name":"pathSeg","object":null}],"tokenPos":8608,"token":47,"rhs":[{"children":[],"start":8611,"end":8656,"code":"strings.SplitN(n.children[0].path, \"/\", 2)[0]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":8611,"end":8653,"code":"strings.SplitN(n.children[0].path, \"/\", 2)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":8611,"end":8625,"code":"strings.SplitN","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":8611,"end":8618,"code":"strings","nodeType":"Identifier","column":0,"line":0,"namePos":8611,"name":"strings","object":null},"sel":{"children":[],"start":8619,"end":8625,"code":"SplitN","nodeType":"Identifier","column":0,"line":0,"namePos":8619,"name":"SplitN","object":null}},"lparen":0,"args":[{"children":[],"start":8626,"end":8644,"code":"n.children[0].path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":8626,"end":8639,"code":"n.children[0]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":8626,"end":8636,"code":"n.children","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":8626,"end":8627,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":8626,"name":"n","object":null},"sel":{"children":[],"start":8628,"end":8636,"code":"children","nodeType":"Identifier","column":0,"line":0,"namePos":8628,"name":"children","object":null}},"leftBracket":8636,"index":{"children":[],"start":8637,"end":8638,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":8637,"kind":5,"value":"0"},"rightBracket":8638},"sel":{"children":[],"start":8640,"end":8644,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":8640,"name":"path","object":null}},{"children":[],"start":8646,"end":8649,"code":"\"/\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":8646,"kind":9,"value":"\"/\""},{"children":[],"start":8651,"end":8652,"code":"2","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":8651,"kind":5,"value":"2"}],"ellipsis":0,"rparen":0},"leftBracket":8653,"index":{"children":[],"start":8654,"end":8655,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":8654,"kind":5,"value":"0"},"rightBracket":8655}]},{"children":[],"start":8660,"end":8850,"code":"panic(\"catch-all wildcard '\" + path + \"' in new path '\" + fullPath + \"' conflicts with existing path segment '\" + pathSeg + \"' in existing prefix '\" + n.path + pathSeg + \"'\")","nodeType":"ExpressionStatement","column":0,"line":0,"Expression":{"children":[],"start":8660,"end":8850,"code":"panic(\"catch-all wildcard '\" + path + \"' in new path '\" + fullPath + \"' conflicts with existing path segment '\" + pathSeg + \"' in existing prefix '\" + n.path + pathSeg + \"'\")","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":8660,"end":8665,"code":"panic","nodeType":"Identifier","column":0,"line":0,"namePos":8660,"name":"panic","object":null},"lparen":0,"args":[{"children":[],"start":8666,"end":8849,"code":"\"catch-all wildcard '\" + path + \"' in new path '\" + fullPath + \"' conflicts with existing path segment '\" + pathSeg + \"' in existing prefix '\" + n.path + pathSeg + \"'\"","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":8666,"end":8839,"code":"\"catch-all wildcard '\" + path + \"' in new path '\" + fullPath + \"' conflicts with existing path segment '\" + pathSeg + \"' in existing prefix '\" + n.path + pathSeg","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":8666,"end":8829,"code":"\"catch-all wildcard '\" + path + \"' in new path '\" + fullPath + \"' conflicts with existing path segment '\" + pathSeg + \"' in existing prefix '\" + n.path","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":8666,"end":8820,"code":"\"catch-all wildcard '\" + path + \"' in new path '\" + fullPath + \"' conflicts with existing path segment '\" + pathSeg + \"' in existing prefix '\"","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":8666,"end":8789,"code":"\"catch-all wildcard '\" + path + \"' in new path '\" + fullPath + \"' conflicts with existing path segment '\" + pathSeg","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":8666,"end":8779,"code":"\"catch-all wildcard '\" + path + \"' in new path '\" + fullPath + \"' conflicts with existing path segment '\"","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":8666,"end":8730,"code":"\"catch-all wildcard '\" + path + \"' in new path '\" + fullPath","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":8666,"end":8719,"code":"\"catch-all wildcard '\" + path + \"' in new path '\"","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":8666,"end":8695,"code":"\"catch-all wildcard '\" + path","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":8666,"end":8688,"code":"\"catch-all wildcard '\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":8666,"kind":9,"value":"\"catch-all wildcard '\""},"opPos":8689,"op":12,"rightExpression":{"children":[],"start":8691,"end":8695,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":8691,"name":"path","object":null}},"opPos":8696,"op":12,"rightExpression":{"children":[],"start":8702,"end":8719,"code":"\"' in new path '\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":8702,"kind":9,"value":"\"' in new path '\""}},"opPos":8720,"op":12,"rightExpression":{"children":[],"start":8722,"end":8730,"code":"fullPath","nodeType":"Identifier","column":0,"line":0,"namePos":8722,"name":"fullPath","object":null}},"opPos":8731,"op":12,"rightExpression":{"children":[],"start":8737,"end":8779,"code":"\"' conflicts with existing path segment '\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":8737,"kind":9,"value":"\"' conflicts with existing path segment '\""}},"opPos":8780,"op":12,"rightExpression":{"children":[],"start":8782,"end":8789,"code":"pathSeg","nodeType":"Identifier","column":0,"line":0,"namePos":8782,"name":"pathSeg","object":null}},"opPos":8790,"op":12,"rightExpression":{"children":[],"start":8796,"end":8820,"code":"\"' in existing prefix '\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":8796,"kind":9,"value":"\"' in existing prefix '\""}},"opPos":8821,"op":12,"rightExpression":{"children":[],"start":8823,"end":8829,"code":"n.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":8823,"end":8824,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":8823,"name":"n","object":null},"sel":{"children":[],"start":8825,"end":8829,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":8825,"name":"path","object":null}}},"opPos":8830,"op":12,"rightExpression":{"children":[],"start":8832,"end":8839,"code":"pathSeg","nodeType":"Identifier","column":0,"line":0,"namePos":8832,"name":"pathSeg","object":null}},"opPos":8840,"op":12,"rightExpression":{"children":[],"start":8846,"end":8849,"code":"\"'\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":8846,"kind":9,"value":"\"'\""}}],"ellipsis":0,"rparen":0}}],"rbrace":8853},"else":null},{"children":[],"start":8895,"end":8898,"code":"i--","nodeType":"IncrementDecrementStatement","column":0,"line":0,"Expression":{"children":[],"start":8895,"end":8896,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":8895,"name":"i","object":null},"TokenPosition":8896,"Token":38},{"children":[],"start":8901,"end":8985,"code":"if path[i] != '/' {\n\tpanic(\"no / before catch-all in path '\" + fullPath + \"'\")\n}","nodeType":"IfStatement","column":0,"line":0,"if":8901,"initialization":null,"condition":{"children":[],"start":8904,"end":8918,"code":"path[i] != '/'","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":8904,"end":8911,"code":"path[i]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":8904,"end":8908,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":8904,"name":"path","object":null},"leftBracket":8908,"index":{"children":[],"start":8909,"end":8910,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":8909,"name":"i","object":null},"rightBracket":8910},"opPos":8912,"op":44,"rightExpression":{"children":[],"start":8915,"end":8918,"code":"'/'","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":8915,"kind":8,"value":"'/'"}},"body":{"children":[],"start":8919,"end":8985,"code":"{\n\tpanic(\"no / before catch-all in path '\" + fullPath + \"'\")\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":8919,"list":[{"children":[],"start":8924,"end":8981,"code":"panic(\"no / before catch-all in path '\" + fullPath + \"'\")","nodeType":"ExpressionStatement","column":0,"line":0,"Expression":{"children":[],"start":8924,"end":8981,"code":"panic(\"no / before catch-all in path '\" + fullPath + \"'\")","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":8924,"end":8929,"code":"panic","nodeType":"Identifier","column":0,"line":0,"namePos":8924,"name":"panic","object":null},"lparen":0,"args":[{"children":[],"start":8930,"end":8980,"code":"\"no / before catch-all in path '\" + fullPath + \"'\"","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":8930,"end":8974,"code":"\"no / before catch-all in path '\" + fullPath","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":8930,"end":8963,"code":"\"no / before catch-all in path '\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":8930,"kind":9,"value":"\"no / before catch-all in path '\""},"opPos":8964,"op":12,"rightExpression":{"children":[],"start":8966,"end":8974,"code":"fullPath","nodeType":"Identifier","column":0,"line":0,"namePos":8966,"name":"fullPath","object":null}},"opPos":8975,"op":12,"rightExpression":{"children":[],"start":8977,"end":8980,"code":"\"'\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":8977,"kind":9,"value":"\"'\""}}],"ellipsis":0,"rparen":0}}],"rbrace":8984},"else":null},{"children":[],"start":8989,"end":9006,"code":"n.path = path[:i]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":8989,"end":8995,"code":"n.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":8989,"end":8990,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":8989,"name":"n","object":null},"sel":{"children":[],"start":8991,"end":8995,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":8991,"name":"path","object":null}}],"tokenPos":8996,"token":42,"rhs":[{"children":[],"start":8998,"end":9006,"code":"path[:i]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":8998,"end":9002,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":8998,"name":"path","object":null},"leftBracket":9002,"low":null,"high":{"children":[],"start":9004,"end":9005,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":9004,"name":"i","object":null},"max":null,"slice3":false,"rightBracket":9005}]},{"children":[],"start":9057,"end":9144,"code":"child := \u0026node{wildChild: true, nType: catchAll, fullPath: fullPath}","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":9057,"end":9062,"code":"child","nodeType":"Identifier","column":0,"line":0,"namePos":9057,"name":"child","object":null}],"tokenPos":9063,"token":47,"rhs":[{"children":[],"start":9066,"end":9144,"code":"\u0026node{wildChild: true, nType: catchAll, fullPath: fullPath}","nodeType":"UnaryExpression","column":0,"line":0,"opPos":9066,"op":17,"expression":{"children":[],"start":9067,"end":9144,"code":"node{wildChild: true, nType: catchAll, fullPath: fullPath}","nodeType":"CompositeLiteral","column":0,"line":0,"type":{"children":[],"start":9067,"end":9071,"code":"node","nodeType":"Identifier","column":0,"line":0,"namePos":9067,"name":"node","object":null},"lbrace":9071,"elements":[{"children":[],"start":9076,"end":9091,"code":"wildChild: true","nodeType":"KeyValueExpression","column":0,"line":0,"key":{"children":[],"start":9076,"end":9085,"code":"wildChild","nodeType":"Identifier","column":0,"line":0,"namePos":9076,"name":"wildChild","object":null},"colon":0,"value":{"children":[],"start":9087,"end":9091,"code":"true","nodeType":"Identifier","column":0,"line":0,"namePos":9087,"name":"true","object":null}},{"children":[],"start":9096,"end":9115,"code":"nType: catchAll","nodeType":"KeyValueExpression","column":0,"line":0,"key":{"children":[],"start":9096,"end":9101,"code":"nType","nodeType":"Identifier","column":0,"line":0,"namePos":9096,"name":"nType","object":null},"colon":0,"value":{"children":[],"start":9107,"end":9115,"code":"catchAll","nodeType":"Identifier","column":0,"line":0,"namePos":9107,"name":"catchAll","object":null}},{"children":[],"start":9120,"end":9139,"code":"fullPath: fullPath","nodeType":"KeyValueExpression","column":0,"line":0,"key":{"children":[],"start":9120,"end":9128,"code":"fullPath","nodeType":"Identifier","column":0,"line":0,"namePos":9120,"name":"fullPath","object":null},"colon":0,"value":{"children":[],"start":9131,"end":9139,"code":"fullPath","nodeType":"Identifier","column":0,"line":0,"namePos":9131,"name":"fullPath","object":null}}],"rbrace":9143,"incomplete":false}}]},{"children":[],"start":9148,"end":9165,"code":"n.addChild(child)","nodeType":"ExpressionStatement","column":0,"line":0,"Expression":{"children":[],"start":9148,"end":9165,"code":"n.addChild(child)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":9148,"end":9158,"code":"n.addChild","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":9148,"end":9149,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":9148,"name":"n","object":null},"sel":{"children":[],"start":9150,"end":9158,"code":"addChild","nodeType":"Identifier","column":0,"line":0,"namePos":9150,"name":"addChild","object":null}},"lparen":0,"args":[{"children":[],"start":9159,"end":9164,"code":"child","nodeType":"Identifier","column":0,"line":0,"namePos":9159,"name":"child","object":null}],"ellipsis":0,"rparen":0}},{"children":[],"start":9168,"end":9191,"code":"n.indices = string('/')","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":9168,"end":9177,"code":"n.indices","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":9168,"end":9169,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":9168,"name":"n","object":null},"sel":{"children":[],"start":9170,"end":9177,"code":"indices","nodeType":"Identifier","column":0,"line":0,"namePos":9170,"name":"indices","object":null}}],"tokenPos":9178,"token":42,"rhs":[{"children":[],"start":9180,"end":9191,"code":"string('/')","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":9180,"end":9186,"code":"string","nodeType":"Identifier","column":0,"line":0,"namePos":9180,"name":"string","object":null},"lparen":0,"args":[{"children":[],"start":9187,"end":9190,"code":"'/'","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":9187,"kind":8,"value":"'/'"}],"ellipsis":0,"rparen":0}]},{"children":[],"start":9194,"end":9203,"code":"n = child","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":9194,"end":9195,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":9194,"name":"n","object":null}],"tokenPos":9196,"token":42,"rhs":[{"children":[],"start":9198,"end":9203,"code":"child","nodeType":"Identifier","column":0,"line":0,"namePos":9198,"name":"child","object":null}]},{"children":[],"start":9206,"end":9218,"code":"n.priority++","nodeType":"IncrementDecrementStatement","column":0,"line":0,"Expression":{"children":[],"start":9206,"end":9216,"code":"n.priority","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":9206,"end":9207,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":9206,"name":"n","object":null},"sel":{"children":[],"start":9208,"end":9216,"code":"priority","nodeType":"Identifier","column":0,"line":0,"namePos":9208,"name":"priority","object":null}},"TokenPosition":9216,"Token":37},{"children":[],"start":9266,"end":9392,"code":"child = \u0026node{path: path[i:], nType: catchAll, handlers: handlers, priority: 1, fullPath: fullPath}","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":9266,"end":9271,"code":"child","nodeType":"Identifier","column":0,"line":0,"namePos":9266,"name":"child","object":null}],"tokenPos":9272,"token":42,"rhs":[{"children":[],"start":9274,"end":9392,"code":"\u0026node{path: path[i:], nType: catchAll, handlers: handlers, priority: 1, fullPath: fullPath}","nodeType":"UnaryExpression","column":0,"line":0,"opPos":9274,"op":17,"expression":{"children":[],"start":9275,"end":9392,"code":"node{path: path[i:], nType: catchAll, handlers: handlers, priority: 1, fullPath: fullPath}","nodeType":"CompositeLiteral","column":0,"line":0,"type":{"children":[],"start":9275,"end":9279,"code":"node","nodeType":"Identifier","column":0,"line":0,"namePos":9275,"name":"node","object":null},"lbrace":9279,"elements":[{"children":[],"start":9284,"end":9302,"code":"path: path[i:]","nodeType":"KeyValueExpression","column":0,"line":0,"key":{"children":[],"start":9284,"end":9288,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":9284,"name":"path","object":null},"colon":0,"value":{"children":[],"start":9294,"end":9302,"code":"path[i:]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":9294,"end":9298,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":9294,"name":"path","object":null},"leftBracket":9298,"low":{"children":[],"start":9299,"end":9300,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":9299,"name":"i","object":null},"high":null,"max":null,"slice3":false,"rightBracket":9301}},{"children":[],"start":9307,"end":9325,"code":"nType: catchAll","nodeType":"KeyValueExpression","column":0,"line":0,"key":{"children":[],"start":9307,"end":9312,"code":"nType","nodeType":"Identifier","column":0,"line":0,"namePos":9307,"name":"nType","object":null},"colon":0,"value":{"children":[],"start":9317,"end":9325,"code":"catchAll","nodeType":"Identifier","column":0,"line":0,"namePos":9317,"name":"catchAll","object":null}},{"children":[],"start":9330,"end":9348,"code":"handlers: handlers","nodeType":"KeyValueExpression","column":0,"line":0,"key":{"children":[],"start":9330,"end":9338,"code":"handlers","nodeType":"Identifier","column":0,"line":0,"namePos":9330,"name":"handlers","object":null},"colon":0,"value":{"children":[],"start":9340,"end":9348,"code":"handlers","nodeType":"Identifier","column":0,"line":0,"namePos":9340,"name":"handlers","object":null}},{"children":[],"start":9353,"end":9364,"code":"priority: 1","nodeType":"KeyValueExpression","column":0,"line":0,"key":{"children":[],"start":9353,"end":9361,"code":"priority","nodeType":"Identifier","column":0,"line":0,"namePos":9353,"name":"priority","object":null},"colon":0,"value":{"children":[],"start":9363,"end":9364,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":9363,"kind":5,"value":"1"}},{"children":[],"start":9369,"end":9387,"code":"fullPath: fullPath","nodeType":"KeyValueExpression","column":0,"line":0,"key":{"children":[],"start":9369,"end":9377,"code":"fullPath","nodeType":"Identifier","column":0,"line":0,"namePos":9369,"name":"fullPath","object":null},"colon":0,"value":{"children":[],"start":9379,"end":9387,"code":"fullPath","nodeType":"Identifier","column":0,"line":0,"namePos":9379,"name":"fullPath","object":null}}],"rbrace":9391,"incomplete":false}}]},{"children":[],"start":9395,"end":9422,"code":"n.children = []*node{child}","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":9395,"end":9405,"code":"n.children","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":9395,"end":9396,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":9395,"name":"n","object":null},"sel":{"children":[],"start":9397,"end":9405,"code":"children","nodeType":"Identifier","column":0,"line":0,"namePos":9397,"name":"children","object":null}}],"tokenPos":9406,"token":42,"rhs":[{"children":[],"start":9408,"end":9422,"code":"[]*node{child}","nodeType":"CompositeLiteral","column":0,"line":0,"type":{"children":[],"start":9408,"end":9415,"code":"[]*node","nodeType":"ArrayType","column":0,"line":0,"leftBracket":9408,"length":null,"element":{"children":[],"start":9410,"end":9415,"code":"*node","nodeType":"StarExpression","column":0,"line":0,"star":9410,"expression":{"children":[],"start":9411,"end":9415,"code":"node","nodeType":"Identifier","column":0,"line":0,"namePos":9411,"name":"node","object":null}}},"lbrace":9415,"elements":[{"children":[],"start":9416,"end":9421,"code":"child","nodeType":"Identifier","column":0,"line":0,"namePos":9416,"name":"child","object":null}],"rbrace":9421,"incomplete":false}]},{"children":[],"start":9426,"end":9432,"code":"return","nodeType":"ReturnStatement","column":0,"line":0,"return":9426,"results":[]}],"rbrace":9434}},{"children":[],"start":9502,"end":9515,"code":"n.path = path","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":9502,"end":9508,"code":"n.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":9502,"end":9503,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":9502,"name":"n","object":null},"sel":{"children":[],"start":9504,"end":9508,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":9504,"name":"path","object":null}}],"tokenPos":9509,"token":42,"rhs":[{"children":[],"start":9511,"end":9515,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":9511,"name":"path","object":null}]},{"children":[],"start":9517,"end":9538,"code":"n.handlers = handlers","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":9517,"end":9527,"code":"n.handlers","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":9517,"end":9518,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":9517,"name":"n","object":null},"sel":{"children":[],"start":9519,"end":9527,"code":"handlers","nodeType":"Identifier","column":0,"line":0,"namePos":9519,"name":"handlers","object":null}}],"tokenPos":9528,"token":42,"rhs":[{"children":[],"start":9530,"end":9538,"code":"handlers","nodeType":"Identifier","column":0,"line":0,"namePos":9530,"name":"handlers","object":null}]},{"children":[],"start":9540,"end":9561,"code":"n.fullPath = fullPath","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":9540,"end":9550,"code":"n.fullPath","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":9540,"end":9541,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":9540,"name":"n","object":null},"sel":{"children":[],"start":9542,"end":9550,"code":"fullPath","nodeType":"Identifier","column":0,"line":0,"namePos":9542,"name":"fullPath","object":null}}],"tokenPos":9551,"token":42,"rhs":[{"children":[],"start":9553,"end":9561,"code":"fullPath","nodeType":"Identifier","column":0,"line":0,"namePos":9553,"name":"fullPath","object":null}]}],"rbrace":9562}},{"children":[],"start":9625,"end":9724,"code":"type nodeValue struct {\n\thandlers\tHandlersChain\n\tparams\t\t*Params\n\ttsr\t\tbool\n\tfullPath\tstring\n}","nodeType":"GenericDeclaration","column":0,"line":0,"doc":null,"tokenPosition":9625,"token":84,"lparen":0,"specifications":[{"children":[],"start":9630,"end":9724,"code":"nodeValue struct {\n\thandlers\tHandlersChain\n\tparams\t\t*Params\n\ttsr\t\tbool\n\tfullPath\tstring\n}","nodeType":"TypeSpecification","column":0,"line":0,"doc":null,"name":{"children":[],"start":9630,"end":9639,"code":"nodeValue","nodeType":"Identifier","column":0,"line":0,"namePos":9630,"name":"nodeValue","object":null},"typeParams":null,"assign":0,"type":{"children":[],"start":9640,"end":9724,"code":"struct {\n\thandlers\tHandlersChain\n\tparams\t\t*Params\n\ttsr\t\tbool\n\tfullPath\tstring\n}","nodeType":"StructType","column":0,"line":0,"struct":9640,"fields":{"children":[],"start":9647,"end":9724,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":9647,"list":[{"children":[],"start":9650,"end":9672,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":9650,"end":9658,"code":"handlers","nodeType":"Identifier","column":0,"line":0,"namePos":9650,"name":"handlers","object":null}],"type":{"children":[],"start":9659,"end":9672,"code":"HandlersChain","nodeType":"Identifier","column":0,"line":0,"namePos":9659,"name":"HandlersChain","object":null},"tag":null,"comment":null},{"children":[],"start":9674,"end":9690,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":9674,"end":9680,"code":"params","nodeType":"Identifier","column":0,"line":0,"namePos":9674,"name":"params","object":null}],"type":{"children":[],"start":9683,"end":9690,"code":"*Params","nodeType":"StarExpression","column":0,"line":0,"star":9683,"expression":{"children":[],"start":9684,"end":9690,"code":"Params","nodeType":"Identifier","column":0,"line":0,"namePos":9684,"name":"Params","object":null}},"tag":null,"comment":null},{"children":[],"start":9692,"end":9705,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":9692,"end":9695,"code":"tsr","nodeType":"Identifier","column":0,"line":0,"namePos":9692,"name":"tsr","object":null}],"type":{"children":[],"start":9701,"end":9705,"code":"bool","nodeType":"Identifier","column":0,"line":0,"namePos":9701,"name":"bool","object":null},"tag":null,"comment":null},{"children":[],"start":9707,"end":9722,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":9707,"end":9715,"code":"fullPath","nodeType":"Identifier","column":0,"line":0,"namePos":9707,"name":"fullPath","object":null}],"type":{"children":[],"start":9716,"end":9722,"code":"string","nodeType":"Identifier","column":0,"line":0,"namePos":9716,"name":"string","object":null},"tag":null,"comment":null}],"closing":9723},"incomplete":false},"comment":null}],"rparen":0},{"children":[],"start":9726,"end":9811,"code":"type skippedNode struct {\n\tpath\t\tstring\n\tnode\t\t*node\n\tparamsCount\tint16\n}","nodeType":"GenericDeclaration","column":0,"line":0,"doc":null,"tokenPosition":9726,"token":84,"lparen":0,"specifications":[{"children":[],"start":9731,"end":9811,"code":"skippedNode struct {\n\tpath\t\tstring\n\tnode\t\t*node\n\tparamsCount\tint16\n}","nodeType":"TypeSpecification","column":0,"line":0,"doc":null,"name":{"children":[],"start":9731,"end":9742,"code":"skippedNode","nodeType":"Identifier","column":0,"line":0,"namePos":9731,"name":"skippedNode","object":null},"typeParams":null,"assign":0,"type":{"children":[],"start":9743,"end":9811,"code":"struct {\n\tpath\t\tstring\n\tnode\t\t*node\n\tparamsCount\tint16\n}","nodeType":"StructType","column":0,"line":0,"struct":9743,"fields":{"children":[],"start":9750,"end":9811,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":9750,"list":[{"children":[],"start":9753,"end":9771,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":9753,"end":9757,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":9753,"name":"path","object":null}],"type":{"children":[],"start":9765,"end":9771,"code":"string","nodeType":"Identifier","column":0,"line":0,"namePos":9765,"name":"string","object":null},"tag":null,"comment":null},{"children":[],"start":9773,"end":9790,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":9773,"end":9777,"code":"node","nodeType":"Identifier","column":0,"line":0,"namePos":9773,"name":"node","object":null}],"type":{"children":[],"start":9785,"end":9790,"code":"*node","nodeType":"StarExpression","column":0,"line":0,"star":9785,"expression":{"children":[],"start":9786,"end":9790,"code":"node","nodeType":"Identifier","column":0,"line":0,"namePos":9786,"name":"node","object":null}},"tag":null,"comment":null},{"children":[],"start":9792,"end":9809,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":9792,"end":9803,"code":"paramsCount","nodeType":"Identifier","column":0,"line":0,"namePos":9792,"name":"paramsCount","object":null}],"type":{"children":[],"start":9804,"end":9809,"code":"int16","nodeType":"Identifier","column":0,"line":0,"namePos":9804,"name":"int16","object":null},"tag":null,"comment":null}],"closing":9810},"incomplete":false},"comment":null}],"rparen":0},{"children":[],"start":10093,"end":17183,"code":"func (n *node) getValue(path string, params *Params, skippedNodes *[]skippedNode, unescape bool) (value nodeValue) {\n\tvar globalParamsCount int16\nwalk:\n\tfor {\n\t\tprefix := n.path\n\t\tif len(path) \u003e len(prefix) {\n\t\t\tif path[:len(prefix)] == prefix {\n\t\t\t\tpath = path[len(prefix):]\n\t\t\t\tidxc := path[0]\n\t\t\t\tfor i, c := range []byte(n.indices) {\n\t\t\t\t\tif c == idxc {\n\t\t\t\t\t\tif n.wildChild {\n\t\t\t\t\t\t\tindex := len(*skippedNodes)\n\t\t\t\t\t\t\t*skippedNodes = (*skippedNodes)[:index+1]\n\t\t\t\t\t\t\t(*skippedNodes)[index] = skippedNode{path: prefix + path, node: \u0026node{path: n.path, wildChild: n.wildChild, nType: n.nType, priority: n.priority, children: n.children, handlers: n.handlers, fullPath: n.fullPath}, paramsCount: globalParamsCount}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tn = n.children[i]\n\t\t\t\t\t\tcontinue walk\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif !n.wildChild {\n\t\t\t\t\tif path != \"/\" {\n\t\t\t\t\t\tfor length := len(*skippedNodes); length \u003e 0; length-- {\n\t\t\t\t\t\t\tskippedNode := (*skippedNodes)[length-1]\n\t\t\t\t\t\t\t*skippedNodes = (*skippedNodes)[:length-1]\n\t\t\t\t\t\t\tif strings.HasSuffix(skippedNode.path, path) {\n\t\t\t\t\t\t\t\tpath = skippedNode.path\n\t\t\t\t\t\t\t\tn = skippedNode.node\n\t\t\t\t\t\t\t\tif value.params != nil {\n\t\t\t\t\t\t\t\t\t*value.params = (*value.params)[:skippedNode.paramsCount]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tglobalParamsCount = skippedNode.paramsCount\n\t\t\t\t\t\t\t\tcontinue walk\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tvalue.tsr = path == \"/\" \u0026\u0026 n.handlers != nil\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tn = n.children[len(n.children)-1]\n\t\t\t\tglobalParamsCount++\n\t\t\t\tswitch n.nType {\n\t\t\t\tcase param:\n\t\t\t\t\tend := 0\n\t\t\t\t\tfor end \u003c len(path) \u0026\u0026 path[end] != '/' {\n\t\t\t\t\t\tend++\n\t\t\t\t\t}\n\t\t\t\t\tif params != nil {\n\t\t\t\t\t\tif cap(*params) \u003c int(globalParamsCount) {\n\t\t\t\t\t\t\tnewParams := make(Params, len(*params), globalParamsCount)\n\t\t\t\t\t\t\tcopy(newParams, *params)\n\t\t\t\t\t\t\t*params = newParams\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif value.params == nil {\n\t\t\t\t\t\t\tvalue.params = params\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti := len(*value.params)\n\t\t\t\t\t\t*value.params = (*value.params)[:i+1]\n\t\t\t\t\t\tval := path[:end]\n\t\t\t\t\t\tif unescape {\n\t\t\t\t\t\t\tif v, err := url.QueryUnescape(val); err == nil {\n\t\t\t\t\t\t\t\tval = v\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t(*value.params)[i] = Param{Key: n.path[1:], Value: val}\n\t\t\t\t\t}\n\t\t\t\t\tif end \u003c len(path) {\n\t\t\t\t\t\tif len(n.children) \u003e 0 {\n\t\t\t\t\t\t\tpath = path[end:]\n\t\t\t\t\t\t\tn = n.children[0]\n\t\t\t\t\t\t\tcontinue walk\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalue.tsr = len(path) == end+1\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tif value.handlers = n.handlers; value.handlers != nil {\n\t\t\t\t\t\tvalue.fullPath = n.fullPath\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tif len(n.children) == 1 {\n\t\t\t\t\t\tn = n.children[0]\n\t\t\t\t\t\tvalue.tsr = (n.path == \"/\" \u0026\u0026 n.handlers != nil) || (n.path == \"\" \u0026\u0026 n.indices == \"/\")\n\t\t\t\t\t}\n\t\t\t\t\treturn\n\t\t\t\tcase catchAll:\n\t\t\t\t\tif params != nil {\n\t\t\t\t\t\tif cap(*params) \u003c int(globalParamsCount) {\n\t\t\t\t\t\t\tnewParams := make(Params, len(*params), globalParamsCount)\n\t\t\t\t\t\t\tcopy(newParams, *params)\n\t\t\t\t\t\t\t*params = newParams\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif value.params == nil {\n\t\t\t\t\t\t\tvalue.params = params\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti := len(*value.params)\n\t\t\t\t\t\t*value.params = (*value.params)[:i+1]\n\t\t\t\t\t\tval := path\n\t\t\t\t\t\tif unescape {\n\t\t\t\t\t\t\tif v, err := url.QueryUnescape(path); err == nil {\n\t\t\t\t\t\t\t\tval = v\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t(*value.params)[i] = Param{Key: n.path[2:], Value: val}\n\t\t\t\t\t}\n\t\t\t\t\tvalue.handlers = n.handlers\n\t\t\t\t\tvalue.fullPath = n.fullPath\n\t\t\t\t\treturn\n\t\t\t\tdefault:\n\t\t\t\t\tpanic(\"invalid node type\")\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif path == prefix {\n\t\t\tif n.handlers == nil \u0026\u0026 path != \"/\" {\n\t\t\t\tfor length := len(*skippedNodes); length \u003e 0; length-- {\n\t\t\t\t\tskippedNode := (*skippedNodes)[length-1]\n\t\t\t\t\t*skippedNodes = (*skippedNodes)[:length-1]\n\t\t\t\t\tif strings.HasSuffix(skippedNode.path, path) {\n\t\t\t\t\t\tpath = skippedNode.path\n\t\t\t\t\t\tn = skippedNode.node\n\t\t\t\t\t\tif value.params != nil {\n\t\t\t\t\t\t\t*value.params = (*value.params)[:skippedNode.paramsCount]\n\t\t\t\t\t\t}\n\t\t\t\t\t\tglobalParamsCount = skippedNode.paramsCount\n\t\t\t\t\t\tcontinue walk\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif value.handlers = n.handlers; value.handlers != nil {\n\t\t\t\tvalue.fullPath = n.fullPath\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif path == \"/\" \u0026\u0026 n.wildChild \u0026\u0026 n.nType != root {\n\t\t\t\tvalue.tsr = true\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif path == \"/\" \u0026\u0026 n.nType == static {\n\t\t\t\tvalue.tsr = true\n\t\t\t\treturn\n\t\t\t}\n\t\t\tfor i, c := range []byte(n.indices) {\n\t\t\t\tif c == '/' {\n\t\t\t\t\tn = n.children[i]\n\t\t\t\t\tvalue.tsr = (len(n.path) == 1 \u0026\u0026 n.handlers != nil) || (n.nType == catchAll \u0026\u0026 n.children[0].handlers != nil)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn\n\t\t}\n\t\tvalue.tsr = path == \"/\" || (len(prefix) == len(path)+1 \u0026\u0026 prefix[len(path)] == '/' \u0026\u0026 path == prefix[:len(prefix)-1] \u0026\u0026 n.handlers != nil)\n\t\tif !value.tsr \u0026\u0026 path != \"/\" {\n\t\t\tfor length := len(*skippedNodes); length \u003e 0; length-- {\n\t\t\t\tskippedNode := (*skippedNodes)[length-1]\n\t\t\t\t*skippedNodes = (*skippedNodes)[:length-1]\n\t\t\t\tif strings.HasSuffix(skippedNode.path, path) {\n\t\t\t\t\tpath = skippedNode.path\n\t\t\t\t\tn = skippedNode.node\n\t\t\t\t\tif value.params != nil {\n\t\t\t\t\t\t*value.params = (*value.params)[:skippedNode.paramsCount]\n\t\t\t\t\t}\n\t\t\t\t\tglobalParamsCount = skippedNode.paramsCount\n\t\t\t\t\tcontinue walk\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn\n\t}\n}","nodeType":"FunctionDeclaration","column":0,"line":0,"doc":null,"receiver":{"children":[],"start":10098,"end":10107,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":10098,"list":[{"children":[],"start":10099,"end":10106,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":10099,"end":10100,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":10099,"name":"n","object":null}],"type":{"children":[],"start":10101,"end":10106,"code":"*node","nodeType":"StarExpression","column":0,"line":0,"star":10101,"expression":{"children":[],"start":10102,"end":10106,"code":"node","nodeType":"Identifier","column":0,"line":0,"namePos":10102,"name":"node","object":null}},"tag":null,"comment":null}],"closing":10106},"name":{"children":[],"start":10108,"end":10116,"code":"getValue","nodeType":"Identifier","column":0,"line":0,"namePos":10108,"name":"getValue","object":null},"type":{"children":[],"start":10093,"end":10207,"code":"func(path string, params *Params, skippedNodes *[]skippedNode, unescape bool) (value nodeValue)","nodeType":"FunctionType","column":0,"line":0,"Function":10093,"TypeParams":null,"Params":{"children":[],"start":10116,"end":10189,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":10116,"list":[{"children":[],"start":10117,"end":10128,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":10117,"end":10121,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":10117,"name":"path","object":null}],"type":{"children":[],"start":10122,"end":10128,"code":"string","nodeType":"Identifier","column":0,"line":0,"namePos":10122,"name":"string","object":null},"tag":null,"comment":null},{"children":[],"start":10130,"end":10144,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":10130,"end":10136,"code":"params","nodeType":"Identifier","column":0,"line":0,"namePos":10130,"name":"params","object":null}],"type":{"children":[],"start":10137,"end":10144,"code":"*Params","nodeType":"StarExpression","column":0,"line":0,"star":10137,"expression":{"children":[],"start":10138,"end":10144,"code":"Params","nodeType":"Identifier","column":0,"line":0,"namePos":10138,"name":"Params","object":null}},"tag":null,"comment":null},{"children":[],"start":10146,"end":10173,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":10146,"end":10158,"code":"skippedNodes","nodeType":"Identifier","column":0,"line":0,"namePos":10146,"name":"skippedNodes","object":null}],"type":{"children":[],"start":10159,"end":10173,"code":"*[]skippedNode","nodeType":"StarExpression","column":0,"line":0,"star":10159,"expression":{"children":[],"start":10160,"end":10173,"code":"[]skippedNode","nodeType":"ArrayType","column":0,"line":0,"leftBracket":10160,"length":null,"element":{"children":[],"start":10162,"end":10173,"code":"skippedNode","nodeType":"Identifier","column":0,"line":0,"namePos":10162,"name":"skippedNode","object":null}}},"tag":null,"comment":null},{"children":[],"start":10175,"end":10188,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":10175,"end":10183,"code":"unescape","nodeType":"Identifier","column":0,"line":0,"namePos":10175,"name":"unescape","object":null}],"type":{"children":[],"start":10184,"end":10188,"code":"bool","nodeType":"Identifier","column":0,"line":0,"namePos":10184,"name":"bool","object":null},"tag":null,"comment":null}],"closing":10188},"Results":{"children":[],"start":10190,"end":10207,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":10190,"list":[{"children":[],"start":10191,"end":10206,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":10191,"end":10196,"code":"value","nodeType":"Identifier","column":0,"line":0,"namePos":10191,"name":"value","object":null}],"type":{"children":[],"start":10197,"end":10206,"code":"nodeValue","nodeType":"Identifier","column":0,"line":0,"namePos":10197,"name":"nodeValue","object":null},"tag":null,"comment":null}],"closing":10206}},"body":{"children":[],"start":10208,"end":17183,"code":"{\n\tvar globalParamsCount int16\nwalk:\n\tfor {\n\t\tprefix := n.path\n\t\tif len(path) \u003e len(prefix) {\n\t\t\tif path[:len(prefix)] == prefix {\n\t\t\t\tpath = path[len(prefix):]\n\t\t\t\tidxc := path[0]\n\t\t\t\tfor i, c := range []byte(n.indices) {\n\t\t\t\t\tif c == idxc {\n\t\t\t\t\t\tif n.wildChild {\n\t\t\t\t\t\t\tindex := len(*skippedNodes)\n\t\t\t\t\t\t\t*skippedNodes = (*skippedNodes)[:index+1]\n\t\t\t\t\t\t\t(*skippedNodes)[index] = skippedNode{path: prefix + path, node: \u0026node{path: n.path, wildChild: n.wildChild, nType: n.nType, priority: n.priority, children: n.children, handlers: n.handlers, fullPath: n.fullPath}, paramsCount: globalParamsCount}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tn = n.children[i]\n\t\t\t\t\t\tcontinue walk\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif !n.wildChild {\n\t\t\t\t\tif path != \"/\" {\n\t\t\t\t\t\tfor length := len(*skippedNodes); length \u003e 0; length-- {\n\t\t\t\t\t\t\tskippedNode := (*skippedNodes)[length-1]\n\t\t\t\t\t\t\t*skippedNodes = (*skippedNodes)[:length-1]\n\t\t\t\t\t\t\tif strings.HasSuffix(skippedNode.path, path) {\n\t\t\t\t\t\t\t\tpath = skippedNode.path\n\t\t\t\t\t\t\t\tn = skippedNode.node\n\t\t\t\t\t\t\t\tif value.params != nil {\n\t\t\t\t\t\t\t\t\t*value.params = (*value.params)[:skippedNode.paramsCount]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tglobalParamsCount = skippedNode.paramsCount\n\t\t\t\t\t\t\t\tcontinue walk\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tvalue.tsr = path == \"/\" \u0026\u0026 n.handlers != nil\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tn = n.children[len(n.children)-1]\n\t\t\t\tglobalParamsCount++\n\t\t\t\tswitch n.nType {\n\t\t\t\tcase param:\n\t\t\t\t\tend := 0\n\t\t\t\t\tfor end \u003c len(path) \u0026\u0026 path[end] != '/' {\n\t\t\t\t\t\tend++\n\t\t\t\t\t}\n\t\t\t\t\tif params != nil {\n\t\t\t\t\t\tif cap(*params) \u003c int(globalParamsCount) {\n\t\t\t\t\t\t\tnewParams := make(Params, len(*params), globalParamsCount)\n\t\t\t\t\t\t\tcopy(newParams, *params)\n\t\t\t\t\t\t\t*params = newParams\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif value.params == nil {\n\t\t\t\t\t\t\tvalue.params = params\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti := len(*value.params)\n\t\t\t\t\t\t*value.params = (*value.params)[:i+1]\n\t\t\t\t\t\tval := path[:end]\n\t\t\t\t\t\tif unescape {\n\t\t\t\t\t\t\tif v, err := url.QueryUnescape(val); err == nil {\n\t\t\t\t\t\t\t\tval = v\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t(*value.params)[i] = Param{Key: n.path[1:], Value: val}\n\t\t\t\t\t}\n\t\t\t\t\tif end \u003c len(path) {\n\t\t\t\t\t\tif len(n.children) \u003e 0 {\n\t\t\t\t\t\t\tpath = path[end:]\n\t\t\t\t\t\t\tn = n.children[0]\n\t\t\t\t\t\t\tcontinue walk\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalue.tsr = len(path) == end+1\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tif value.handlers = n.handlers; value.handlers != nil {\n\t\t\t\t\t\tvalue.fullPath = n.fullPath\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tif len(n.children) == 1 {\n\t\t\t\t\t\tn = n.children[0]\n\t\t\t\t\t\tvalue.tsr = (n.path == \"/\" \u0026\u0026 n.handlers != nil) || (n.path == \"\" \u0026\u0026 n.indices == \"/\")\n\t\t\t\t\t}\n\t\t\t\t\treturn\n\t\t\t\tcase catchAll:\n\t\t\t\t\tif params != nil {\n\t\t\t\t\t\tif cap(*params) \u003c int(globalParamsCount) {\n\t\t\t\t\t\t\tnewParams := make(Params, len(*params), globalParamsCount)\n\t\t\t\t\t\t\tcopy(newParams, *params)\n\t\t\t\t\t\t\t*params = newParams\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif value.params == nil {\n\t\t\t\t\t\t\tvalue.params = params\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti := len(*value.params)\n\t\t\t\t\t\t*value.params = (*value.params)[:i+1]\n\t\t\t\t\t\tval := path\n\t\t\t\t\t\tif unescape {\n\t\t\t\t\t\t\tif v, err := url.QueryUnescape(path); err == nil {\n\t\t\t\t\t\t\t\tval = v\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t(*value.params)[i] = Param{Key: n.path[2:], Value: val}\n\t\t\t\t\t}\n\t\t\t\t\tvalue.handlers = n.handlers\n\t\t\t\t\tvalue.fullPath = n.fullPath\n\t\t\t\t\treturn\n\t\t\t\tdefault:\n\t\t\t\t\tpanic(\"invalid node type\")\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif path == prefix {\n\t\t\tif n.handlers == nil \u0026\u0026 path != \"/\" {\n\t\t\t\tfor length := len(*skippedNodes); length \u003e 0; length-- {\n\t\t\t\t\tskippedNode := (*skippedNodes)[length-1]\n\t\t\t\t\t*skippedNodes = (*skippedNodes)[:length-1]\n\t\t\t\t\tif strings.HasSuffix(skippedNode.path, path) {\n\t\t\t\t\t\tpath = skippedNode.path\n\t\t\t\t\t\tn = skippedNode.node\n\t\t\t\t\t\tif value.params != nil {\n\t\t\t\t\t\t\t*value.params = (*value.params)[:skippedNode.paramsCount]\n\t\t\t\t\t\t}\n\t\t\t\t\t\tglobalParamsCount = skippedNode.paramsCount\n\t\t\t\t\t\tcontinue walk\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif value.handlers = n.handlers; value.handlers != nil {\n\t\t\t\tvalue.fullPath = n.fullPath\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif path == \"/\" \u0026\u0026 n.wildChild \u0026\u0026 n.nType != root {\n\t\t\t\tvalue.tsr = true\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif path == \"/\" \u0026\u0026 n.nType == static {\n\t\t\t\tvalue.tsr = true\n\t\t\t\treturn\n\t\t\t}\n\t\t\tfor i, c := range []byte(n.indices) {\n\t\t\t\tif c == '/' {\n\t\t\t\t\tn = n.children[i]\n\t\t\t\t\tvalue.tsr = (len(n.path) == 1 \u0026\u0026 n.handlers != nil) || (n.nType == catchAll \u0026\u0026 n.children[0].handlers != nil)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn\n\t\t}\n\t\tvalue.tsr = path == \"/\" || (len(prefix) == len(path)+1 \u0026\u0026 prefix[len(path)] == '/' \u0026\u0026 path == prefix[:len(prefix)-1] \u0026\u0026 n.handlers != nil)\n\t\tif !value.tsr \u0026\u0026 path != \"/\" {\n\t\t\tfor length := len(*skippedNodes); length \u003e 0; length-- {\n\t\t\t\tskippedNode := (*skippedNodes)[length-1]\n\t\t\t\t*skippedNodes = (*skippedNodes)[:length-1]\n\t\t\t\tif strings.HasSuffix(skippedNode.path, path) {\n\t\t\t\t\tpath = skippedNode.path\n\t\t\t\t\tn = skippedNode.node\n\t\t\t\t\tif value.params != nil {\n\t\t\t\t\t\t*value.params = (*value.params)[:skippedNode.paramsCount]\n\t\t\t\t\t}\n\t\t\t\t\tglobalParamsCount = skippedNode.paramsCount\n\t\t\t\t\tcontinue walk\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn\n\t}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":10208,"list":[{"children":[],"start":10211,"end":10238,"code":"var globalParamsCount int16","nodeType":"DeclarationStatement","column":0,"line":0,"declaration":{"children":[],"start":10211,"end":10238,"code":"var globalParamsCount int16","nodeType":"GenericDeclaration","column":0,"line":0,"doc":null,"tokenPosition":10211,"token":85,"lparen":0,"specifications":[{"children":[],"start":10215,"end":10238,"code":"globalParamsCount int16","nodeType":"ValueSpecification","column":0,"line":0,"doc":null,"names":[{"children":[],"start":10215,"end":10232,"code":"globalParamsCount","nodeType":"Identifier","column":0,"line":0,"namePos":10215,"name":"globalParamsCount","object":null}],"type":{"children":[],"start":10233,"end":10238,"code":"int16","nodeType":"Identifier","column":0,"line":0,"namePos":10233,"name":"int16","object":null},"values":[],"comment":null}],"rparen":0}},{"children":[],"start":10240,"end":17181,"code":"walk:\n\tfor {\n\t\tprefix := n.path\n\t\tif len(path) \u003e len(prefix) {\n\t\t\tif path[:len(prefix)] == prefix {\n\t\t\t\tpath = path[len(prefix):]\n\t\t\t\tidxc := path[0]\n\t\t\t\tfor i, c := range []byte(n.indices) {\n\t\t\t\t\tif c == idxc {\n\t\t\t\t\t\tif n.wildChild {\n\t\t\t\t\t\t\tindex := len(*skippedNodes)\n\t\t\t\t\t\t\t*skippedNodes = (*skippedNodes)[:index+1]\n\t\t\t\t\t\t\t(*skippedNodes)[index] = skippedNode{path: prefix + path, node: \u0026node{path: n.path, wildChild: n.wildChild, nType: n.nType, priority: n.priority, children: n.children, handlers: n.handlers, fullPath: n.fullPath}, paramsCount: globalParamsCount}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tn = n.children[i]\n\t\t\t\t\t\tcontinue walk\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif !n.wildChild {\n\t\t\t\t\tif path != \"/\" {\n\t\t\t\t\t\tfor length := len(*skippedNodes); length \u003e 0; length-- {\n\t\t\t\t\t\t\tskippedNode := (*skippedNodes)[length-1]\n\t\t\t\t\t\t\t*skippedNodes = (*skippedNodes)[:length-1]\n\t\t\t\t\t\t\tif strings.HasSuffix(skippedNode.path, path) {\n\t\t\t\t\t\t\t\tpath = skippedNode.path\n\t\t\t\t\t\t\t\tn = skippedNode.node\n\t\t\t\t\t\t\t\tif value.params != nil {\n\t\t\t\t\t\t\t\t\t*value.params = (*value.params)[:skippedNode.paramsCount]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tglobalParamsCount = skippedNode.paramsCount\n\t\t\t\t\t\t\t\tcontinue walk\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tvalue.tsr = path == \"/\" \u0026\u0026 n.handlers != nil\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tn = n.children[len(n.children)-1]\n\t\t\t\tglobalParamsCount++\n\t\t\t\tswitch n.nType {\n\t\t\t\tcase param:\n\t\t\t\t\tend := 0\n\t\t\t\t\tfor end \u003c len(path) \u0026\u0026 path[end] != '/' {\n\t\t\t\t\t\tend++\n\t\t\t\t\t}\n\t\t\t\t\tif params != nil {\n\t\t\t\t\t\tif cap(*params) \u003c int(globalParamsCount) {\n\t\t\t\t\t\t\tnewParams := make(Params, len(*params), globalParamsCount)\n\t\t\t\t\t\t\tcopy(newParams, *params)\n\t\t\t\t\t\t\t*params = newParams\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif value.params == nil {\n\t\t\t\t\t\t\tvalue.params = params\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti := len(*value.params)\n\t\t\t\t\t\t*value.params = (*value.params)[:i+1]\n\t\t\t\t\t\tval := path[:end]\n\t\t\t\t\t\tif unescape {\n\t\t\t\t\t\t\tif v, err := url.QueryUnescape(val); err == nil {\n\t\t\t\t\t\t\t\tval = v\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t(*value.params)[i] = Param{Key: n.path[1:], Value: val}\n\t\t\t\t\t}\n\t\t\t\t\tif end \u003c len(path) {\n\t\t\t\t\t\tif len(n.children) \u003e 0 {\n\t\t\t\t\t\t\tpath = path[end:]\n\t\t\t\t\t\t\tn = n.children[0]\n\t\t\t\t\t\t\tcontinue walk\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalue.tsr = len(path) == end+1\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tif value.handlers = n.handlers; value.handlers != nil {\n\t\t\t\t\t\tvalue.fullPath = n.fullPath\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tif len(n.children) == 1 {\n\t\t\t\t\t\tn = n.children[0]\n\t\t\t\t\t\tvalue.tsr = (n.path == \"/\" \u0026\u0026 n.handlers != nil) || (n.path == \"\" \u0026\u0026 n.indices == \"/\")\n\t\t\t\t\t}\n\t\t\t\t\treturn\n\t\t\t\tcase catchAll:\n\t\t\t\t\tif params != nil {\n\t\t\t\t\t\tif cap(*params) \u003c int(globalParamsCount) {\n\t\t\t\t\t\t\tnewParams := make(Params, len(*params), globalParamsCount)\n\t\t\t\t\t\t\tcopy(newParams, *params)\n\t\t\t\t\t\t\t*params = newParams\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif value.params == nil {\n\t\t\t\t\t\t\tvalue.params = params\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti := len(*value.params)\n\t\t\t\t\t\t*value.params = (*value.params)[:i+1]\n\t\t\t\t\t\tval := path\n\t\t\t\t\t\tif unescape {\n\t\t\t\t\t\t\tif v, err := url.QueryUnescape(path); err == nil {\n\t\t\t\t\t\t\t\tval = v\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t(*value.params)[i] = Param{Key: n.path[2:], Value: val}\n\t\t\t\t\t}\n\t\t\t\t\tvalue.handlers = n.handlers\n\t\t\t\t\tvalue.fullPath = n.fullPath\n\t\t\t\t\treturn\n\t\t\t\tdefault:\n\t\t\t\t\tpanic(\"invalid node type\")\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif path == prefix {\n\t\t\tif n.handlers == nil \u0026\u0026 path != \"/\" {\n\t\t\t\tfor length := len(*skippedNodes); length \u003e 0; length-- {\n\t\t\t\t\tskippedNode := (*skippedNodes)[length-1]\n\t\t\t\t\t*skippedNodes = (*skippedNodes)[:length-1]\n\t\t\t\t\tif strings.HasSuffix(skippedNode.path, path) {\n\t\t\t\t\t\tpath = skippedNode.path\n\t\t\t\t\t\tn = skippedNode.node\n\t\t\t\t\t\tif value.params != nil {\n\t\t\t\t\t\t\t*value.params = (*value.params)[:skippedNode.paramsCount]\n\t\t\t\t\t\t}\n\t\t\t\t\t\tglobalParamsCount = skippedNode.paramsCount\n\t\t\t\t\t\tcontinue walk\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif value.handlers = n.handlers; value.handlers != nil {\n\t\t\t\tvalue.fullPath = n.fullPath\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif path == \"/\" \u0026\u0026 n.wildChild \u0026\u0026 n.nType != root {\n\t\t\t\tvalue.tsr = true\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif path == \"/\" \u0026\u0026 n.nType == static {\n\t\t\t\tvalue.tsr = true\n\t\t\t\treturn\n\t\t\t}\n\t\t\tfor i, c := range []byte(n.indices) {\n\t\t\t\tif c == '/' {\n\t\t\t\t\tn = n.children[i]\n\t\t\t\t\tvalue.tsr = (len(n.path) == 1 \u0026\u0026 n.handlers != nil) || (n.nType == catchAll \u0026\u0026 n.children[0].handlers != nil)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn\n\t\t}\n\t\tvalue.tsr = path == \"/\" || (len(prefix) == len(path)+1 \u0026\u0026 prefix[len(path)] == '/' \u0026\u0026 path == prefix[:len(prefix)-1] \u0026\u0026 n.handlers != nil)\n\t\tif !value.tsr \u0026\u0026 path != \"/\" {\n\t\t\tfor length := len(*skippedNodes); length \u003e 0; length-- {\n\t\t\t\tskippedNode := (*skippedNodes)[length-1]\n\t\t\t\t*skippedNodes = (*skippedNodes)[:length-1]\n\t\t\t\tif strings.HasSuffix(skippedNode.path, path) {\n\t\t\t\t\tpath = skippedNode.path\n\t\t\t\t\tn = skippedNode.node\n\t\t\t\t\tif value.params != nil {\n\t\t\t\t\t\t*value.params = (*value.params)[:skippedNode.paramsCount]\n\t\t\t\t\t}\n\t\t\t\t\tglobalParamsCount = skippedNode.paramsCount\n\t\t\t\t\tcontinue walk\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn\n\t}","nodeType":"LabeledStatement","column":0,"line":0,"statement":{"children":[],"start":10282,"end":17181,"code":"for {\n\tprefix := n.path\n\tif len(path) \u003e len(prefix) {\n\t\tif path[:len(prefix)] == prefix {\n\t\t\tpath = path[len(prefix):]\n\t\t\tidxc := path[0]\n\t\t\tfor i, c := range []byte(n.indices) {\n\t\t\t\tif c == idxc {\n\t\t\t\t\tif n.wildChild {\n\t\t\t\t\t\tindex := len(*skippedNodes)\n\t\t\t\t\t\t*skippedNodes = (*skippedNodes)[:index+1]\n\t\t\t\t\t\t(*skippedNodes)[index] = skippedNode{path: prefix + path, node: \u0026node{path: n.path, wildChild: n.wildChild, nType: n.nType, priority: n.priority, children: n.children, handlers: n.handlers, fullPath: n.fullPath}, paramsCount: globalParamsCount}\n\t\t\t\t\t}\n\t\t\t\t\tn = n.children[i]\n\t\t\t\t\tcontinue walk\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !n.wildChild {\n\t\t\t\tif path != \"/\" {\n\t\t\t\t\tfor length := len(*skippedNodes); length \u003e 0; length-- {\n\t\t\t\t\t\tskippedNode := (*skippedNodes)[length-1]\n\t\t\t\t\t\t*skippedNodes = (*skippedNodes)[:length-1]\n\t\t\t\t\t\tif strings.HasSuffix(skippedNode.path, path) {\n\t\t\t\t\t\t\tpath = skippedNode.path\n\t\t\t\t\t\t\tn = skippedNode.node\n\t\t\t\t\t\t\tif value.params != nil {\n\t\t\t\t\t\t\t\t*value.params = (*value.params)[:skippedNode.paramsCount]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tglobalParamsCount = skippedNode.paramsCount\n\t\t\t\t\t\t\tcontinue walk\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvalue.tsr = path == \"/\" \u0026\u0026 n.handlers != nil\n\t\t\t\treturn\n\t\t\t}\n\t\t\tn = n.children[len(n.children)-1]\n\t\t\tglobalParamsCount++\n\t\t\tswitch n.nType {\n\t\t\tcase param:\n\t\t\t\tend := 0\n\t\t\t\tfor end \u003c len(path) \u0026\u0026 path[end] != '/' {\n\t\t\t\t\tend++\n\t\t\t\t}\n\t\t\t\tif params != nil {\n\t\t\t\t\tif cap(*params) \u003c int(globalParamsCount) {\n\t\t\t\t\t\tnewParams := make(Params, len(*params), globalParamsCount)\n\t\t\t\t\t\tcopy(newParams, *params)\n\t\t\t\t\t\t*params = newParams\n\t\t\t\t\t}\n\t\t\t\t\tif value.params == nil {\n\t\t\t\t\t\tvalue.params = params\n\t\t\t\t\t}\n\t\t\t\t\ti := len(*value.params)\n\t\t\t\t\t*value.params = (*value.params)[:i+1]\n\t\t\t\t\tval := path[:end]\n\t\t\t\t\tif unescape {\n\t\t\t\t\t\tif v, err := url.QueryUnescape(val); err == nil {\n\t\t\t\t\t\t\tval = v\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t(*value.params)[i] = Param{Key: n.path[1:], Value: val}\n\t\t\t\t}\n\t\t\t\tif end \u003c len(path) {\n\t\t\t\t\tif len(n.children) \u003e 0 {\n\t\t\t\t\t\tpath = path[end:]\n\t\t\t\t\t\tn = n.children[0]\n\t\t\t\t\t\tcontinue walk\n\t\t\t\t\t}\n\t\t\t\t\tvalue.tsr = len(path) == end+1\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tif value.handlers = n.handlers; value.handlers != nil {\n\t\t\t\t\tvalue.fullPath = n.fullPath\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tif len(n.children) == 1 {\n\t\t\t\t\tn = n.children[0]\n\t\t\t\t\tvalue.tsr = (n.path == \"/\" \u0026\u0026 n.handlers != nil) || (n.path == \"\" \u0026\u0026 n.indices == \"/\")\n\t\t\t\t}\n\t\t\t\treturn\n\t\t\tcase catchAll:\n\t\t\t\tif params != nil {\n\t\t\t\t\tif cap(*params) \u003c int(globalParamsCount) {\n\t\t\t\t\t\tnewParams := make(Params, len(*params), globalParamsCount)\n\t\t\t\t\t\tcopy(newParams, *params)\n\t\t\t\t\t\t*params = newParams\n\t\t\t\t\t}\n\t\t\t\t\tif value.params == nil {\n\t\t\t\t\t\tvalue.params = params\n\t\t\t\t\t}\n\t\t\t\t\ti := len(*value.params)\n\t\t\t\t\t*value.params = (*value.params)[:i+1]\n\t\t\t\t\tval := path\n\t\t\t\t\tif unescape {\n\t\t\t\t\t\tif v, err := url.QueryUnescape(path); err == nil {\n\t\t\t\t\t\t\tval = v\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t(*value.params)[i] = Param{Key: n.path[2:], Value: val}\n\t\t\t\t}\n\t\t\t\tvalue.handlers = n.handlers\n\t\t\t\tvalue.fullPath = n.fullPath\n\t\t\t\treturn\n\t\t\tdefault:\n\t\t\t\tpanic(\"invalid node type\")\n\t\t\t}\n\t\t}\n\t}\n\tif path == prefix {\n\t\tif n.handlers == nil \u0026\u0026 path != \"/\" {\n\t\t\tfor length := len(*skippedNodes); length \u003e 0; length-- {\n\t\t\t\tskippedNode := (*skippedNodes)[length-1]\n\t\t\t\t*skippedNodes = (*skippedNodes)[:length-1]\n\t\t\t\tif strings.HasSuffix(skippedNode.path, path) {\n\t\t\t\t\tpath = skippedNode.path\n\t\t\t\t\tn = skippedNode.node\n\t\t\t\t\tif value.params != nil {\n\t\t\t\t\t\t*value.params = (*value.params)[:skippedNode.paramsCount]\n\t\t\t\t\t}\n\t\t\t\t\tglobalParamsCount = skippedNode.paramsCount\n\t\t\t\t\tcontinue walk\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif value.handlers = n.handlers; value.handlers != nil {\n\t\t\tvalue.fullPath = n.fullPath\n\t\t\treturn\n\t\t}\n\t\tif path == \"/\" \u0026\u0026 n.wildChild \u0026\u0026 n.nType != root {\n\t\t\tvalue.tsr = true\n\t\t\treturn\n\t\t}\n\t\tif path == \"/\" \u0026\u0026 n.nType == static {\n\t\t\tvalue.tsr = true\n\t\t\treturn\n\t\t}\n\t\tfor i, c := range []byte(n.indices) {\n\t\t\tif c == '/' {\n\t\t\t\tn = n.children[i]\n\t\t\t\tvalue.tsr = (len(n.path) == 1 \u0026\u0026 n.handlers != nil) || (n.nType == catchAll \u0026\u0026 n.children[0].handlers != nil)\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\t\treturn\n\t}\n\tvalue.tsr = path == \"/\" || (len(prefix) == len(path)+1 \u0026\u0026 prefix[len(path)] == '/' \u0026\u0026 path == prefix[:len(prefix)-1] \u0026\u0026 n.handlers != nil)\n\tif !value.tsr \u0026\u0026 path != \"/\" {\n\t\tfor length := len(*skippedNodes); length \u003e 0; length-- {\n\t\t\tskippedNode := (*skippedNodes)[length-1]\n\t\t\t*skippedNodes = (*skippedNodes)[:length-1]\n\t\t\tif strings.HasSuffix(skippedNode.path, path) {\n\t\t\t\tpath = skippedNode.path\n\t\t\t\tn = skippedNode.node\n\t\t\t\tif value.params != nil {\n\t\t\t\t\t*value.params = (*value.params)[:skippedNode.paramsCount]\n\t\t\t\t}\n\t\t\t\tglobalParamsCount = skippedNode.paramsCount\n\t\t\t\tcontinue walk\n\t\t\t}\n\t\t}\n\t}\n\treturn\n}","nodeType":"ForStatement","column":0,"line":0,"for":10282,"initialization":null,"condition":null,"post":null,"body":{"children":[],"start":10286,"end":17181,"code":"{\n\tprefix := n.path\n\tif len(path) \u003e len(prefix) {\n\t\tif path[:len(prefix)] == prefix {\n\t\t\tpath = path[len(prefix):]\n\t\t\tidxc := path[0]\n\t\t\tfor i, c := range []byte(n.indices) {\n\t\t\t\tif c == idxc {\n\t\t\t\t\tif n.wildChild {\n\t\t\t\t\t\tindex := len(*skippedNodes)\n\t\t\t\t\t\t*skippedNodes = (*skippedNodes)[:index+1]\n\t\t\t\t\t\t(*skippedNodes)[index] = skippedNode{path: prefix + path, node: \u0026node{path: n.path, wildChild: n.wildChild, nType: n.nType, priority: n.priority, children: n.children, handlers: n.handlers, fullPath: n.fullPath}, paramsCount: globalParamsCount}\n\t\t\t\t\t}\n\t\t\t\t\tn = n.children[i]\n\t\t\t\t\tcontinue walk\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !n.wildChild {\n\t\t\t\tif path != \"/\" {\n\t\t\t\t\tfor length := len(*skippedNodes); length \u003e 0; length-- {\n\t\t\t\t\t\tskippedNode := (*skippedNodes)[length-1]\n\t\t\t\t\t\t*skippedNodes = (*skippedNodes)[:length-1]\n\t\t\t\t\t\tif strings.HasSuffix(skippedNode.path, path) {\n\t\t\t\t\t\t\tpath = skippedNode.path\n\t\t\t\t\t\t\tn = skippedNode.node\n\t\t\t\t\t\t\tif value.params != nil {\n\t\t\t\t\t\t\t\t*value.params = (*value.params)[:skippedNode.paramsCount]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tglobalParamsCount = skippedNode.paramsCount\n\t\t\t\t\t\t\tcontinue walk\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvalue.tsr = path == \"/\" \u0026\u0026 n.handlers != nil\n\t\t\t\treturn\n\t\t\t}\n\t\t\tn = n.children[len(n.children)-1]\n\t\t\tglobalParamsCount++\n\t\t\tswitch n.nType {\n\t\t\tcase param:\n\t\t\t\tend := 0\n\t\t\t\tfor end \u003c len(path) \u0026\u0026 path[end] != '/' {\n\t\t\t\t\tend++\n\t\t\t\t}\n\t\t\t\tif params != nil {\n\t\t\t\t\tif cap(*params) \u003c int(globalParamsCount) {\n\t\t\t\t\t\tnewParams := make(Params, len(*params), globalParamsCount)\n\t\t\t\t\t\tcopy(newParams, *params)\n\t\t\t\t\t\t*params = newParams\n\t\t\t\t\t}\n\t\t\t\t\tif value.params == nil {\n\t\t\t\t\t\tvalue.params = params\n\t\t\t\t\t}\n\t\t\t\t\ti := len(*value.params)\n\t\t\t\t\t*value.params = (*value.params)[:i+1]\n\t\t\t\t\tval := path[:end]\n\t\t\t\t\tif unescape {\n\t\t\t\t\t\tif v, err := url.QueryUnescape(val); err == nil {\n\t\t\t\t\t\t\tval = v\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t(*value.params)[i] = Param{Key: n.path[1:], Value: val}\n\t\t\t\t}\n\t\t\t\tif end \u003c len(path) {\n\t\t\t\t\tif len(n.children) \u003e 0 {\n\t\t\t\t\t\tpath = path[end:]\n\t\t\t\t\t\tn = n.children[0]\n\t\t\t\t\t\tcontinue walk\n\t\t\t\t\t}\n\t\t\t\t\tvalue.tsr = len(path) == end+1\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tif value.handlers = n.handlers; value.handlers != nil {\n\t\t\t\t\tvalue.fullPath = n.fullPath\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tif len(n.children) == 1 {\n\t\t\t\t\tn = n.children[0]\n\t\t\t\t\tvalue.tsr = (n.path == \"/\" \u0026\u0026 n.handlers != nil) || (n.path == \"\" \u0026\u0026 n.indices == \"/\")\n\t\t\t\t}\n\t\t\t\treturn\n\t\t\tcase catchAll:\n\t\t\t\tif params != nil {\n\t\t\t\t\tif cap(*params) \u003c int(globalParamsCount) {\n\t\t\t\t\t\tnewParams := make(Params, len(*params), globalParamsCount)\n\t\t\t\t\t\tcopy(newParams, *params)\n\t\t\t\t\t\t*params = newParams\n\t\t\t\t\t}\n\t\t\t\t\tif value.params == nil {\n\t\t\t\t\t\tvalue.params = params\n\t\t\t\t\t}\n\t\t\t\t\ti := len(*value.params)\n\t\t\t\t\t*value.params = (*value.params)[:i+1]\n\t\t\t\t\tval := path\n\t\t\t\t\tif unescape {\n\t\t\t\t\t\tif v, err := url.QueryUnescape(path); err == nil {\n\t\t\t\t\t\t\tval = v\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t(*value.params)[i] = Param{Key: n.path[2:], Value: val}\n\t\t\t\t}\n\t\t\t\tvalue.handlers = n.handlers\n\t\t\t\tvalue.fullPath = n.fullPath\n\t\t\t\treturn\n\t\t\tdefault:\n\t\t\t\tpanic(\"invalid node type\")\n\t\t\t}\n\t\t}\n\t}\n\tif path == prefix {\n\t\tif n.handlers == nil \u0026\u0026 path != \"/\" {\n\t\t\tfor length := len(*skippedNodes); length \u003e 0; length-- {\n\t\t\t\tskippedNode := (*skippedNodes)[length-1]\n\t\t\t\t*skippedNodes = (*skippedNodes)[:length-1]\n\t\t\t\tif strings.HasSuffix(skippedNode.path, path) {\n\t\t\t\t\tpath = skippedNode.path\n\t\t\t\t\tn = skippedNode.node\n\t\t\t\t\tif value.params != nil {\n\t\t\t\t\t\t*value.params = (*value.params)[:skippedNode.paramsCount]\n\t\t\t\t\t}\n\t\t\t\t\tglobalParamsCount = skippedNode.paramsCount\n\t\t\t\t\tcontinue walk\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif value.handlers = n.handlers; value.handlers != nil {\n\t\t\tvalue.fullPath = n.fullPath\n\t\t\treturn\n\t\t}\n\t\tif path == \"/\" \u0026\u0026 n.wildChild \u0026\u0026 n.nType != root {\n\t\t\tvalue.tsr = true\n\t\t\treturn\n\t\t}\n\t\tif path == \"/\" \u0026\u0026 n.nType == static {\n\t\t\tvalue.tsr = true\n\t\t\treturn\n\t\t}\n\t\tfor i, c := range []byte(n.indices) {\n\t\t\tif c == '/' {\n\t\t\t\tn = n.children[i]\n\t\t\t\tvalue.tsr = (len(n.path) == 1 \u0026\u0026 n.handlers != nil) || (n.nType == catchAll \u0026\u0026 n.children[0].handlers != nil)\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\t\treturn\n\t}\n\tvalue.tsr = path == \"/\" || (len(prefix) == len(path)+1 \u0026\u0026 prefix[len(path)] == '/' \u0026\u0026 path == prefix[:len(prefix)-1] \u0026\u0026 n.handlers != nil)\n\tif !value.tsr \u0026\u0026 path != \"/\" {\n\t\tfor length := len(*skippedNodes); length \u003e 0; length-- {\n\t\t\tskippedNode := (*skippedNodes)[length-1]\n\t\t\t*skippedNodes = (*skippedNodes)[:length-1]\n\t\t\tif strings.HasSuffix(skippedNode.path, path) {\n\t\t\t\tpath = skippedNode.path\n\t\t\t\tn = skippedNode.node\n\t\t\t\tif value.params != nil {\n\t\t\t\t\t*value.params = (*value.params)[:skippedNode.paramsCount]\n\t\t\t\t}\n\t\t\t\tglobalParamsCount = skippedNode.paramsCount\n\t\t\t\tcontinue walk\n\t\t\t}\n\t\t}\n\t}\n\treturn\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":10286,"list":[{"children":[],"start":10290,"end":10306,"code":"prefix := n.path","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":10290,"end":10296,"code":"prefix","nodeType":"Identifier","column":0,"line":0,"namePos":10290,"name":"prefix","object":null}],"tokenPos":10297,"token":47,"rhs":[{"children":[],"start":10300,"end":10306,"code":"n.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":10300,"end":10301,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":10300,"name":"n","object":null},"sel":{"children":[],"start":10302,"end":10306,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":10302,"name":"path","object":null}}]},{"children":[],"start":10309,"end":14665,"code":"if len(path) \u003e len(prefix) {\n\tif path[:len(prefix)] == prefix {\n\t\tpath = path[len(prefix):]\n\t\tidxc := path[0]\n\t\tfor i, c := range []byte(n.indices) {\n\t\t\tif c == idxc {\n\t\t\t\tif n.wildChild {\n\t\t\t\t\tindex := len(*skippedNodes)\n\t\t\t\t\t*skippedNodes = (*skippedNodes)[:index+1]\n\t\t\t\t\t(*skippedNodes)[index] = skippedNode{path: prefix + path, node: \u0026node{path: n.path, wildChild: n.wildChild, nType: n.nType, priority: n.priority, children: n.children, handlers: n.handlers, fullPath: n.fullPath}, paramsCount: globalParamsCount}\n\t\t\t\t}\n\t\t\t\tn = n.children[i]\n\t\t\t\tcontinue walk\n\t\t\t}\n\t\t}\n\t\tif !n.wildChild {\n\t\t\tif path != \"/\" {\n\t\t\t\tfor length := len(*skippedNodes); length \u003e 0; length-- {\n\t\t\t\t\tskippedNode := (*skippedNodes)[length-1]\n\t\t\t\t\t*skippedNodes = (*skippedNodes)[:length-1]\n\t\t\t\t\tif strings.HasSuffix(skippedNode.path, path) {\n\t\t\t\t\t\tpath = skippedNode.path\n\t\t\t\t\t\tn = skippedNode.node\n\t\t\t\t\t\tif value.params != nil {\n\t\t\t\t\t\t\t*value.params = (*value.params)[:skippedNode.paramsCount]\n\t\t\t\t\t\t}\n\t\t\t\t\t\tglobalParamsCount = skippedNode.paramsCount\n\t\t\t\t\t\tcontinue walk\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvalue.tsr = path == \"/\" \u0026\u0026 n.handlers != nil\n\t\t\treturn\n\t\t}\n\t\tn = n.children[len(n.children)-1]\n\t\tglobalParamsCount++\n\t\tswitch n.nType {\n\t\tcase param:\n\t\t\tend := 0\n\t\t\tfor end \u003c len(path) \u0026\u0026 path[end] != '/' {\n\t\t\t\tend++\n\t\t\t}\n\t\t\tif params != nil {\n\t\t\t\tif cap(*params) \u003c int(globalParamsCount) {\n\t\t\t\t\tnewParams := make(Params, len(*params), globalParamsCount)\n\t\t\t\t\tcopy(newParams, *params)\n\t\t\t\t\t*params = newParams\n\t\t\t\t}\n\t\t\t\tif value.params == nil {\n\t\t\t\t\tvalue.params = params\n\t\t\t\t}\n\t\t\t\ti := len(*value.params)\n\t\t\t\t*value.params = (*value.params)[:i+1]\n\t\t\t\tval := path[:end]\n\t\t\t\tif unescape {\n\t\t\t\t\tif v, err := url.QueryUnescape(val); err == nil {\n\t\t\t\t\t\tval = v\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t(*value.params)[i] = Param{Key: n.path[1:], Value: val}\n\t\t\t}\n\t\t\tif end \u003c len(path) {\n\t\t\t\tif len(n.children) \u003e 0 {\n\t\t\t\t\tpath = path[end:]\n\t\t\t\t\tn = n.children[0]\n\t\t\t\t\tcontinue walk\n\t\t\t\t}\n\t\t\t\tvalue.tsr = len(path) == end+1\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif value.handlers = n.handlers; value.handlers != nil {\n\t\t\t\tvalue.fullPath = n.fullPath\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif len(n.children) == 1 {\n\t\t\t\tn = n.children[0]\n\t\t\t\tvalue.tsr = (n.path == \"/\" \u0026\u0026 n.handlers != nil) || (n.path == \"\" \u0026\u0026 n.indices == \"/\")\n\t\t\t}\n\t\t\treturn\n\t\tcase catchAll:\n\t\t\tif params != nil {\n\t\t\t\tif cap(*params) \u003c int(globalParamsCount) {\n\t\t\t\t\tnewParams := make(Params, len(*params), globalParamsCount)\n\t\t\t\t\tcopy(newParams, *params)\n\t\t\t\t\t*params = newParams\n\t\t\t\t}\n\t\t\t\tif value.params == nil {\n\t\t\t\t\tvalue.params = params\n\t\t\t\t}\n\t\t\t\ti := len(*value.params)\n\t\t\t\t*value.params = (*value.params)[:i+1]\n\t\t\t\tval := path\n\t\t\t\tif unescape {\n\t\t\t\t\tif v, err := url.QueryUnescape(path); err == nil {\n\t\t\t\t\t\tval = v\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t(*value.params)[i] = Param{Key: n.path[2:], Value: val}\n\t\t\t}\n\t\t\tvalue.handlers = n.handlers\n\t\t\tvalue.fullPath = n.fullPath\n\t\t\treturn\n\t\tdefault:\n\t\t\tpanic(\"invalid node type\")\n\t\t}\n\t}\n}","nodeType":"IfStatement","column":0,"line":0,"if":10309,"initialization":null,"condition":{"children":[],"start":10312,"end":10335,"code":"len(path) \u003e len(prefix)","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":10312,"end":10321,"code":"len(path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":10312,"end":10315,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":10312,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":10316,"end":10320,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":10316,"name":"path","object":null}],"ellipsis":0,"rparen":0},"opPos":10322,"op":41,"rightExpression":{"children":[],"start":10324,"end":10335,"code":"len(prefix)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":10324,"end":10327,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":10324,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":10328,"end":10334,"code":"prefix","nodeType":"Identifier","column":0,"line":0,"namePos":10328,"name":"prefix","object":null}],"ellipsis":0,"rparen":0}},"body":{"children":[],"start":10336,"end":14665,"code":"{\n\tif path[:len(prefix)] == prefix {\n\t\tpath = path[len(prefix):]\n\t\tidxc := path[0]\n\t\tfor i, c := range []byte(n.indices) {\n\t\t\tif c == idxc {\n\t\t\t\tif n.wildChild {\n\t\t\t\t\tindex := len(*skippedNodes)\n\t\t\t\t\t*skippedNodes = (*skippedNodes)[:index+1]\n\t\t\t\t\t(*skippedNodes)[index] = skippedNode{path: prefix + path, node: \u0026node{path: n.path, wildChild: n.wildChild, nType: n.nType, priority: n.priority, children: n.children, handlers: n.handlers, fullPath: n.fullPath}, paramsCount: globalParamsCount}\n\t\t\t\t}\n\t\t\t\tn = n.children[i]\n\t\t\t\tcontinue walk\n\t\t\t}\n\t\t}\n\t\tif !n.wildChild {\n\t\t\tif path != \"/\" {\n\t\t\t\tfor length := len(*skippedNodes); length \u003e 0; length-- {\n\t\t\t\t\tskippedNode := (*skippedNodes)[length-1]\n\t\t\t\t\t*skippedNodes = (*skippedNodes)[:length-1]\n\t\t\t\t\tif strings.HasSuffix(skippedNode.path, path) {\n\t\t\t\t\t\tpath = skippedNode.path\n\t\t\t\t\t\tn = skippedNode.node\n\t\t\t\t\t\tif value.params != nil {\n\t\t\t\t\t\t\t*value.params = (*value.params)[:skippedNode.paramsCount]\n\t\t\t\t\t\t}\n\t\t\t\t\t\tglobalParamsCount = skippedNode.paramsCount\n\t\t\t\t\t\tcontinue walk\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvalue.tsr = path == \"/\" \u0026\u0026 n.handlers != nil\n\t\t\treturn\n\t\t}\n\t\tn = n.children[len(n.children)-1]\n\t\tglobalParamsCount++\n\t\tswitch n.nType {\n\t\tcase param:\n\t\t\tend := 0\n\t\t\tfor end \u003c len(path) \u0026\u0026 path[end] != '/' {\n\t\t\t\tend++\n\t\t\t}\n\t\t\tif params != nil {\n\t\t\t\tif cap(*params) \u003c int(globalParamsCount) {\n\t\t\t\t\tnewParams := make(Params, len(*params), globalParamsCount)\n\t\t\t\t\tcopy(newParams, *params)\n\t\t\t\t\t*params = newParams\n\t\t\t\t}\n\t\t\t\tif value.params == nil {\n\t\t\t\t\tvalue.params = params\n\t\t\t\t}\n\t\t\t\ti := len(*value.params)\n\t\t\t\t*value.params = (*value.params)[:i+1]\n\t\t\t\tval := path[:end]\n\t\t\t\tif unescape {\n\t\t\t\t\tif v, err := url.QueryUnescape(val); err == nil {\n\t\t\t\t\t\tval = v\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t(*value.params)[i] = Param{Key: n.path[1:], Value: val}\n\t\t\t}\n\t\t\tif end \u003c len(path) {\n\t\t\t\tif len(n.children) \u003e 0 {\n\t\t\t\t\tpath = path[end:]\n\t\t\t\t\tn = n.children[0]\n\t\t\t\t\tcontinue walk\n\t\t\t\t}\n\t\t\t\tvalue.tsr = len(path) == end+1\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif value.handlers = n.handlers; value.handlers != nil {\n\t\t\t\tvalue.fullPath = n.fullPath\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif len(n.children) == 1 {\n\t\t\t\tn = n.children[0]\n\t\t\t\tvalue.tsr = (n.path == \"/\" \u0026\u0026 n.handlers != nil) || (n.path == \"\" \u0026\u0026 n.indices == \"/\")\n\t\t\t}\n\t\t\treturn\n\t\tcase catchAll:\n\t\t\tif params != nil {\n\t\t\t\tif cap(*params) \u003c int(globalParamsCount) {\n\t\t\t\t\tnewParams := make(Params, len(*params), globalParamsCount)\n\t\t\t\t\tcopy(newParams, *params)\n\t\t\t\t\t*params = newParams\n\t\t\t\t}\n\t\t\t\tif value.params == nil {\n\t\t\t\t\tvalue.params = params\n\t\t\t\t}\n\t\t\t\ti := len(*value.params)\n\t\t\t\t*value.params = (*value.params)[:i+1]\n\t\t\t\tval := path\n\t\t\t\tif unescape {\n\t\t\t\t\tif v, err := url.QueryUnescape(path); err == nil {\n\t\t\t\t\t\tval = v\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t(*value.params)[i] = Param{Key: n.path[2:], Value: val}\n\t\t\t}\n\t\t\tvalue.handlers = n.handlers\n\t\t\tvalue.fullPath = n.fullPath\n\t\t\treturn\n\t\tdefault:\n\t\t\tpanic(\"invalid node type\")\n\t\t}\n\t}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":10336,"list":[{"children":[],"start":10341,"end":14661,"code":"if path[:len(prefix)] == prefix {\n\tpath = path[len(prefix):]\n\tidxc := path[0]\n\tfor i, c := range []byte(n.indices) {\n\t\tif c == idxc {\n\t\t\tif n.wildChild {\n\t\t\t\tindex := len(*skippedNodes)\n\t\t\t\t*skippedNodes = (*skippedNodes)[:index+1]\n\t\t\t\t(*skippedNodes)[index] = skippedNode{path: prefix + path, node: \u0026node{path: n.path, wildChild: n.wildChild, nType: n.nType, priority: n.priority, children: n.children, handlers: n.handlers, fullPath: n.fullPath}, paramsCount: globalParamsCount}\n\t\t\t}\n\t\t\tn = n.children[i]\n\t\t\tcontinue walk\n\t\t}\n\t}\n\tif !n.wildChild {\n\t\tif path != \"/\" {\n\t\t\tfor length := len(*skippedNodes); length \u003e 0; length-- {\n\t\t\t\tskippedNode := (*skippedNodes)[length-1]\n\t\t\t\t*skippedNodes = (*skippedNodes)[:length-1]\n\t\t\t\tif strings.HasSuffix(skippedNode.path, path) {\n\t\t\t\t\tpath = skippedNode.path\n\t\t\t\t\tn = skippedNode.node\n\t\t\t\t\tif value.params != nil {\n\t\t\t\t\t\t*value.params = (*value.params)[:skippedNode.paramsCount]\n\t\t\t\t\t}\n\t\t\t\t\tglobalParamsCount = skippedNode.paramsCount\n\t\t\t\t\tcontinue walk\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvalue.tsr = path == \"/\" \u0026\u0026 n.handlers != nil\n\t\treturn\n\t}\n\tn = n.children[len(n.children)-1]\n\tglobalParamsCount++\n\tswitch n.nType {\n\tcase param:\n\t\tend := 0\n\t\tfor end \u003c len(path) \u0026\u0026 path[end] != '/' {\n\t\t\tend++\n\t\t}\n\t\tif params != nil {\n\t\t\tif cap(*params) \u003c int(globalParamsCount) {\n\t\t\t\tnewParams := make(Params, len(*params), globalParamsCount)\n\t\t\t\tcopy(newParams, *params)\n\t\t\t\t*params = newParams\n\t\t\t}\n\t\t\tif value.params == nil {\n\t\t\t\tvalue.params = params\n\t\t\t}\n\t\t\ti := len(*value.params)\n\t\t\t*value.params = (*value.params)[:i+1]\n\t\t\tval := path[:end]\n\t\t\tif unescape {\n\t\t\t\tif v, err := url.QueryUnescape(val); err == nil {\n\t\t\t\t\tval = v\n\t\t\t\t}\n\t\t\t}\n\t\t\t(*value.params)[i] = Param{Key: n.path[1:], Value: val}\n\t\t}\n\t\tif end \u003c len(path) {\n\t\t\tif len(n.children) \u003e 0 {\n\t\t\t\tpath = path[end:]\n\t\t\t\tn = n.children[0]\n\t\t\t\tcontinue walk\n\t\t\t}\n\t\t\tvalue.tsr = len(path) == end+1\n\t\t\treturn\n\t\t}\n\t\tif value.handlers = n.handlers; value.handlers != nil {\n\t\t\tvalue.fullPath = n.fullPath\n\t\t\treturn\n\t\t}\n\t\tif len(n.children) == 1 {\n\t\t\tn = n.children[0]\n\t\t\tvalue.tsr = (n.path == \"/\" \u0026\u0026 n.handlers != nil) || (n.path == \"\" \u0026\u0026 n.indices == \"/\")\n\t\t}\n\t\treturn\n\tcase catchAll:\n\t\tif params != nil {\n\t\t\tif cap(*params) \u003c int(globalParamsCount) {\n\t\t\t\tnewParams := make(Params, len(*params), globalParamsCount)\n\t\t\t\tcopy(newParams, *params)\n\t\t\t\t*params = newParams\n\t\t\t}\n\t\t\tif value.params == nil {\n\t\t\t\tvalue.params = params\n\t\t\t}\n\t\t\ti := len(*value.params)\n\t\t\t*value.params = (*value.params)[:i+1]\n\t\t\tval := path\n\t\t\tif unescape {\n\t\t\t\tif v, err := url.QueryUnescape(path); err == nil {\n\t\t\t\t\tval = v\n\t\t\t\t}\n\t\t\t}\n\t\t\t(*value.params)[i] = Param{Key: n.path[2:], Value: val}\n\t\t}\n\t\tvalue.handlers = n.handlers\n\t\tvalue.fullPath = n.fullPath\n\t\treturn\n\tdefault:\n\t\tpanic(\"invalid node type\")\n\t}\n}","nodeType":"IfStatement","column":0,"line":0,"if":10341,"initialization":null,"condition":{"children":[],"start":10344,"end":10372,"code":"path[:len(prefix)] == prefix","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":10344,"end":10362,"code":"path[:len(prefix)]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":10344,"end":10348,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":10344,"name":"path","object":null},"leftBracket":10348,"low":null,"high":{"children":[],"start":10350,"end":10361,"code":"len(prefix)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":10350,"end":10353,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":10350,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":10354,"end":10360,"code":"prefix","nodeType":"Identifier","column":0,"line":0,"namePos":10354,"name":"prefix","object":null}],"ellipsis":0,"rparen":0},"max":null,"slice3":false,"rightBracket":10361},"opPos":10363,"op":39,"rightExpression":{"children":[],"start":10366,"end":10372,"code":"prefix","nodeType":"Identifier","column":0,"line":0,"namePos":10366,"name":"prefix","object":null}},"body":{"children":[],"start":10373,"end":14661,"code":"{\n\tpath = path[len(prefix):]\n\tidxc := path[0]\n\tfor i, c := range []byte(n.indices) {\n\t\tif c == idxc {\n\t\t\tif n.wildChild {\n\t\t\t\tindex := len(*skippedNodes)\n\t\t\t\t*skippedNodes = (*skippedNodes)[:index+1]\n\t\t\t\t(*skippedNodes)[index] = skippedNode{path: prefix + path, node: \u0026node{path: n.path, wildChild: n.wildChild, nType: n.nType, priority: n.priority, children: n.children, handlers: n.handlers, fullPath: n.fullPath}, paramsCount: globalParamsCount}\n\t\t\t}\n\t\t\tn = n.children[i]\n\t\t\tcontinue walk\n\t\t}\n\t}\n\tif !n.wildChild {\n\t\tif path != \"/\" {\n\t\t\tfor length := len(*skippedNodes); length \u003e 0; length-- {\n\t\t\t\tskippedNode := (*skippedNodes)[length-1]\n\t\t\t\t*skippedNodes = (*skippedNodes)[:length-1]\n\t\t\t\tif strings.HasSuffix(skippedNode.path, path) {\n\t\t\t\t\tpath = skippedNode.path\n\t\t\t\t\tn = skippedNode.node\n\t\t\t\t\tif value.params != nil {\n\t\t\t\t\t\t*value.params = (*value.params)[:skippedNode.paramsCount]\n\t\t\t\t\t}\n\t\t\t\t\tglobalParamsCount = skippedNode.paramsCount\n\t\t\t\t\tcontinue walk\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvalue.tsr = path == \"/\" \u0026\u0026 n.handlers != nil\n\t\treturn\n\t}\n\tn = n.children[len(n.children)-1]\n\tglobalParamsCount++\n\tswitch n.nType {\n\tcase param:\n\t\tend := 0\n\t\tfor end \u003c len(path) \u0026\u0026 path[end] != '/' {\n\t\t\tend++\n\t\t}\n\t\tif params != nil {\n\t\t\tif cap(*params) \u003c int(globalParamsCount) {\n\t\t\t\tnewParams := make(Params, len(*params), globalParamsCount)\n\t\t\t\tcopy(newParams, *params)\n\t\t\t\t*params = newParams\n\t\t\t}\n\t\t\tif value.params == nil {\n\t\t\t\tvalue.params = params\n\t\t\t}\n\t\t\ti := len(*value.params)\n\t\t\t*value.params = (*value.params)[:i+1]\n\t\t\tval := path[:end]\n\t\t\tif unescape {\n\t\t\t\tif v, err := url.QueryUnescape(val); err == nil {\n\t\t\t\t\tval = v\n\t\t\t\t}\n\t\t\t}\n\t\t\t(*value.params)[i] = Param{Key: n.path[1:], Value: val}\n\t\t}\n\t\tif end \u003c len(path) {\n\t\t\tif len(n.children) \u003e 0 {\n\t\t\t\tpath = path[end:]\n\t\t\t\tn = n.children[0]\n\t\t\t\tcontinue walk\n\t\t\t}\n\t\t\tvalue.tsr = len(path) == end+1\n\t\t\treturn\n\t\t}\n\t\tif value.handlers = n.handlers; value.handlers != nil {\n\t\t\tvalue.fullPath = n.fullPath\n\t\t\treturn\n\t\t}\n\t\tif len(n.children) == 1 {\n\t\t\tn = n.children[0]\n\t\t\tvalue.tsr = (n.path == \"/\" \u0026\u0026 n.handlers != nil) || (n.path == \"\" \u0026\u0026 n.indices == \"/\")\n\t\t}\n\t\treturn\n\tcase catchAll:\n\t\tif params != nil {\n\t\t\tif cap(*params) \u003c int(globalParamsCount) {\n\t\t\t\tnewParams := make(Params, len(*params), globalParamsCount)\n\t\t\t\tcopy(newParams, *params)\n\t\t\t\t*params = newParams\n\t\t\t}\n\t\t\tif value.params == nil {\n\t\t\t\tvalue.params = params\n\t\t\t}\n\t\t\ti := len(*value.params)\n\t\t\t*value.params = (*value.params)[:i+1]\n\t\t\tval := path\n\t\t\tif unescape {\n\t\t\t\tif v, err := url.QueryUnescape(path); err == nil {\n\t\t\t\t\tval = v\n\t\t\t\t}\n\t\t\t}\n\t\t\t(*value.params)[i] = Param{Key: n.path[2:], Value: val}\n\t\t}\n\t\tvalue.handlers = n.handlers\n\t\tvalue.fullPath = n.fullPath\n\t\treturn\n\tdefault:\n\t\tpanic(\"invalid node type\")\n\t}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":10373,"list":[{"children":[],"start":10379,"end":10404,"code":"path = path[len(prefix):]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":10379,"end":10383,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":10379,"name":"path","object":null}],"tokenPos":10384,"token":42,"rhs":[{"children":[],"start":10386,"end":10404,"code":"path[len(prefix):]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":10386,"end":10390,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":10386,"name":"path","object":null},"leftBracket":10390,"low":{"children":[],"start":10391,"end":10402,"code":"len(prefix)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":10391,"end":10394,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":10391,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":10395,"end":10401,"code":"prefix","nodeType":"Identifier","column":0,"line":0,"namePos":10395,"name":"prefix","object":null}],"ellipsis":0,"rparen":0},"high":null,"max":null,"slice3":false,"rightBracket":10403}]},{"children":[],"start":10481,"end":10496,"code":"idxc := path[0]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":10481,"end":10485,"code":"idxc","nodeType":"Identifier","column":0,"line":0,"namePos":10481,"name":"idxc","object":null}],"tokenPos":10486,"token":47,"rhs":[{"children":[],"start":10489,"end":10496,"code":"path[0]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":10489,"end":10493,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":10489,"name":"path","object":null},"leftBracket":10493,"index":{"children":[],"start":10494,"end":10495,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":10494,"kind":5,"value":"0"},"rightBracket":10495}]},{"children":[],"start":10501,"end":11188,"code":"for i, c := range []byte(n.indices) {\n\tif c == idxc {\n\t\tif n.wildChild {\n\t\t\tindex := len(*skippedNodes)\n\t\t\t*skippedNodes = (*skippedNodes)[:index+1]\n\t\t\t(*skippedNodes)[index] = skippedNode{path: prefix + path, node: \u0026node{path: n.path, wildChild: n.wildChild, nType: n.nType, priority: n.priority, children: n.children, handlers: n.handlers, fullPath: n.fullPath}, paramsCount: globalParamsCount}\n\t\t}\n\t\tn = n.children[i]\n\t\tcontinue walk\n\t}\n}","nodeType":"RangeStatement","column":0,"line":0,"for":10501,"key":{"children":[],"start":10505,"end":10506,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":10505,"name":"i","object":null},"value":{"children":[],"start":10508,"end":10509,"code":"c","nodeType":"Identifier","column":0,"line":0,"namePos":10508,"name":"c","object":null},"tokenPos":10510,"token":47,"range":10513,"expression":{"children":[],"start":10519,"end":10536,"code":"[]byte(n.indices)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":10519,"end":10525,"code":"[]byte","nodeType":"ArrayType","column":0,"line":0,"leftBracket":10519,"length":null,"element":{"children":[],"start":10521,"end":10525,"code":"byte","nodeType":"Identifier","column":0,"line":0,"namePos":10521,"name":"byte","object":null}},"lparen":0,"args":[{"children":[],"start":10526,"end":10535,"code":"n.indices","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":10526,"end":10527,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":10526,"name":"n","object":null},"sel":{"children":[],"start":10528,"end":10535,"code":"indices","nodeType":"Identifier","column":0,"line":0,"namePos":10528,"name":"indices","object":null}}],"ellipsis":0,"rparen":0},"body":{"children":[],"start":10537,"end":11188,"code":"{\n\tif c == idxc {\n\t\tif n.wildChild {\n\t\t\tindex := len(*skippedNodes)\n\t\t\t*skippedNodes = (*skippedNodes)[:index+1]\n\t\t\t(*skippedNodes)[index] = skippedNode{path: prefix + path, node: \u0026node{path: n.path, wildChild: n.wildChild, nType: n.nType, priority: n.priority, children: n.children, handlers: n.handlers, fullPath: n.fullPath}, paramsCount: globalParamsCount}\n\t\t}\n\t\tn = n.children[i]\n\t\tcontinue walk\n\t}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":10537,"list":[{"children":[],"start":10544,"end":11182,"code":"if c == idxc {\n\tif n.wildChild {\n\t\tindex := len(*skippedNodes)\n\t\t*skippedNodes = (*skippedNodes)[:index+1]\n\t\t(*skippedNodes)[index] = skippedNode{path: prefix + path, node: \u0026node{path: n.path, wildChild: n.wildChild, nType: n.nType, priority: n.priority, children: n.children, handlers: n.handlers, fullPath: n.fullPath}, paramsCount: globalParamsCount}\n\t}\n\tn = n.children[i]\n\tcontinue walk\n}","nodeType":"IfStatement","column":0,"line":0,"if":10544,"initialization":null,"condition":{"children":[],"start":10547,"end":10556,"code":"c == idxc","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":10547,"end":10548,"code":"c","nodeType":"Identifier","column":0,"line":0,"namePos":10547,"name":"c","object":null},"opPos":10549,"op":39,"rightExpression":{"children":[],"start":10552,"end":10556,"code":"idxc","nodeType":"Identifier","column":0,"line":0,"namePos":10552,"name":"idxc","object":null}},"body":{"children":[],"start":10557,"end":11182,"code":"{\n\tif n.wildChild {\n\t\tindex := len(*skippedNodes)\n\t\t*skippedNodes = (*skippedNodes)[:index+1]\n\t\t(*skippedNodes)[index] = skippedNode{path: prefix + path, node: \u0026node{path: n.path, wildChild: n.wildChild, nType: n.nType, priority: n.priority, children: n.children, handlers: n.handlers, fullPath: n.fullPath}, paramsCount: globalParamsCount}\n\t}\n\tn = n.children[i]\n\tcontinue walk\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":10557,"list":[{"children":[],"start":10649,"end":11130,"code":"if n.wildChild {\n\tindex := len(*skippedNodes)\n\t*skippedNodes = (*skippedNodes)[:index+1]\n\t(*skippedNodes)[index] = skippedNode{path: prefix + path, node: \u0026node{path: n.path, wildChild: n.wildChild, nType: n.nType, priority: n.priority, children: n.children, handlers: n.handlers, fullPath: n.fullPath}, paramsCount: globalParamsCount}\n}","nodeType":"IfStatement","column":0,"line":0,"if":10649,"initialization":null,"condition":{"children":[],"start":10652,"end":10663,"code":"n.wildChild","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":10652,"end":10653,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":10652,"name":"n","object":null},"sel":{"children":[],"start":10654,"end":10663,"code":"wildChild","nodeType":"Identifier","column":0,"line":0,"namePos":10654,"name":"wildChild","object":null}},"body":{"children":[],"start":10664,"end":11130,"code":"{\n\tindex := len(*skippedNodes)\n\t*skippedNodes = (*skippedNodes)[:index+1]\n\t(*skippedNodes)[index] = skippedNode{path: prefix + path, node: \u0026node{path: n.path, wildChild: n.wildChild, nType: n.nType, priority: n.priority, children: n.children, handlers: n.handlers, fullPath: n.fullPath}, paramsCount: globalParamsCount}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":10664,"list":[{"children":[],"start":10673,"end":10700,"code":"index := len(*skippedNodes)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":10673,"end":10678,"code":"index","nodeType":"Identifier","column":0,"line":0,"namePos":10673,"name":"index","object":null}],"tokenPos":10679,"token":47,"rhs":[{"children":[],"start":10682,"end":10700,"code":"len(*skippedNodes)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":10682,"end":10685,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":10682,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":10686,"end":10699,"code":"*skippedNodes","nodeType":"StarExpression","column":0,"line":0,"star":10686,"expression":{"children":[],"start":10687,"end":10699,"code":"skippedNodes","nodeType":"Identifier","column":0,"line":0,"namePos":10687,"name":"skippedNodes","object":null}}],"ellipsis":0,"rparen":0}]},{"children":[],"start":10708,"end":10749,"code":"*skippedNodes = (*skippedNodes)[:index+1]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":10708,"end":10721,"code":"*skippedNodes","nodeType":"StarExpression","column":0,"line":0,"star":10708,"expression":{"children":[],"start":10709,"end":10721,"code":"skippedNodes","nodeType":"Identifier","column":0,"line":0,"namePos":10709,"name":"skippedNodes","object":null}}],"tokenPos":10722,"token":42,"rhs":[{"children":[],"start":10724,"end":10749,"code":"(*skippedNodes)[:index+1]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":10724,"end":10739,"code":"(*skippedNodes)","nodeType":"ParenthesizedExpression","column":0,"line":0,"lparen":10724,"expression":{"children":[],"start":10725,"end":10738,"code":"*skippedNodes","nodeType":"StarExpression","column":0,"line":0,"star":10725,"expression":{"children":[],"start":10726,"end":10738,"code":"skippedNodes","nodeType":"Identifier","column":0,"line":0,"namePos":10726,"name":"skippedNodes","object":null}},"rparen":10738},"leftBracket":10739,"low":null,"high":{"children":[],"start":10741,"end":10748,"code":"index + 1","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":10741,"end":10746,"code":"index","nodeType":"Identifier","column":0,"line":0,"namePos":10741,"name":"index","object":null},"opPos":10746,"op":12,"rightExpression":{"children":[],"start":10747,"end":10748,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":10747,"kind":5,"value":"1"}},"max":null,"slice3":false,"rightBracket":10748}]},{"children":[],"start":10757,"end":11122,"code":"(*skippedNodes)[index] = skippedNode{path: prefix + path, node: \u0026node{path: n.path, wildChild: n.wildChild, nType: n.nType, priority: n.priority, children: n.children, handlers: n.handlers, fullPath: n.fullPath}, paramsCount: globalParamsCount}","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":10757,"end":10779,"code":"(*skippedNodes)[index]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":10757,"end":10772,"code":"(*skippedNodes)","nodeType":"ParenthesizedExpression","column":0,"line":0,"lparen":10757,"expression":{"children":[],"start":10758,"end":10771,"code":"*skippedNodes","nodeType":"StarExpression","column":0,"line":0,"star":10758,"expression":{"children":[],"start":10759,"end":10771,"code":"skippedNodes","nodeType":"Identifier","column":0,"line":0,"namePos":10759,"name":"skippedNodes","object":null}},"rparen":10771},"leftBracket":10772,"index":{"children":[],"start":10773,"end":10778,"code":"index","nodeType":"Identifier","column":0,"line":0,"namePos":10773,"name":"index","object":null},"rightBracket":10778}],"tokenPos":10780,"token":42,"rhs":[{"children":[],"start":10782,"end":11122,"code":"skippedNode{path: prefix + path, node: \u0026node{path: n.path, wildChild: n.wildChild, nType: n.nType, priority: n.priority, children: n.children, handlers: n.handlers, fullPath: n.fullPath}, paramsCount: globalParamsCount}","nodeType":"CompositeLiteral","column":0,"line":0,"type":{"children":[],"start":10782,"end":10793,"code":"skippedNode","nodeType":"Identifier","column":0,"line":0,"namePos":10782,"name":"skippedNode","object":null},"lbrace":10793,"elements":[{"children":[],"start":10803,"end":10822,"code":"path: prefix + path","nodeType":"KeyValueExpression","column":0,"line":0,"key":{"children":[],"start":10803,"end":10807,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":10803,"name":"path","object":null},"colon":0,"value":{"children":[],"start":10809,"end":10822,"code":"prefix + path","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":10809,"end":10815,"code":"prefix","nodeType":"Identifier","column":0,"line":0,"namePos":10809,"name":"prefix","object":null},"opPos":10816,"op":12,"rightExpression":{"children":[],"start":10818,"end":10822,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":10818,"name":"path","object":null}}},{"children":[],"start":10832,"end":11072,"code":"node: \u0026node{path: n.path, wildChild: n.wildChild, nType: n.nType, priority: n.priority, children: n.children, handlers: n.handlers, fullPath: n.fullPath}","nodeType":"KeyValueExpression","column":0,"line":0,"key":{"children":[],"start":10832,"end":10836,"code":"node","nodeType":"Identifier","column":0,"line":0,"namePos":10832,"name":"node","object":null},"colon":0,"value":{"children":[],"start":10838,"end":11072,"code":"\u0026node{path: n.path, wildChild: n.wildChild, nType: n.nType, priority: n.priority, children: n.children, handlers: n.handlers, fullPath: n.fullPath}","nodeType":"UnaryExpression","column":0,"line":0,"opPos":10838,"op":17,"expression":{"children":[],"start":10839,"end":11072,"code":"node{path: n.path, wildChild: n.wildChild, nType: n.nType, priority: n.priority, children: n.children, handlers: n.handlers, fullPath: n.fullPath}","nodeType":"CompositeLiteral","column":0,"line":0,"type":{"children":[],"start":10839,"end":10843,"code":"node","nodeType":"Identifier","column":0,"line":0,"namePos":10839,"name":"node","object":null},"lbrace":10843,"elements":[{"children":[],"start":10854,"end":10871,"code":"path: n.path","nodeType":"KeyValueExpression","column":0,"line":0,"key":{"children":[],"start":10854,"end":10858,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":10854,"name":"path","object":null},"colon":0,"value":{"children":[],"start":10865,"end":10871,"code":"n.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":10865,"end":10866,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":10865,"name":"n","object":null},"sel":{"children":[],"start":10867,"end":10871,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":10867,"name":"path","object":null}}},{"children":[],"start":10882,"end":10904,"code":"wildChild: n.wildChild","nodeType":"KeyValueExpression","column":0,"line":0,"key":{"children":[],"start":10882,"end":10891,"code":"wildChild","nodeType":"Identifier","column":0,"line":0,"namePos":10882,"name":"wildChild","object":null},"colon":0,"value":{"children":[],"start":10893,"end":10904,"code":"n.wildChild","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":10893,"end":10894,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":10893,"name":"n","object":null},"sel":{"children":[],"start":10895,"end":10904,"code":"wildChild","nodeType":"Identifier","column":0,"line":0,"namePos":10895,"name":"wildChild","object":null}}},{"children":[],"start":10915,"end":10933,"code":"nType: n.nType","nodeType":"KeyValueExpression","column":0,"line":0,"key":{"children":[],"start":10915,"end":10920,"code":"nType","nodeType":"Identifier","column":0,"line":0,"namePos":10915,"name":"nType","object":null},"colon":0,"value":{"children":[],"start":10926,"end":10933,"code":"n.nType","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":10926,"end":10927,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":10926,"name":"n","object":null},"sel":{"children":[],"start":10928,"end":10933,"code":"nType","nodeType":"Identifier","column":0,"line":0,"namePos":10928,"name":"nType","object":null}}},{"children":[],"start":10944,"end":10965,"code":"priority: n.priority","nodeType":"KeyValueExpression","column":0,"line":0,"key":{"children":[],"start":10944,"end":10952,"code":"priority","nodeType":"Identifier","column":0,"line":0,"namePos":10944,"name":"priority","object":null},"colon":0,"value":{"children":[],"start":10955,"end":10965,"code":"n.priority","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":10955,"end":10956,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":10955,"name":"n","object":null},"sel":{"children":[],"start":10957,"end":10965,"code":"priority","nodeType":"Identifier","column":0,"line":0,"namePos":10957,"name":"priority","object":null}}},{"children":[],"start":10976,"end":10997,"code":"children: n.children","nodeType":"KeyValueExpression","column":0,"line":0,"key":{"children":[],"start":10976,"end":10984,"code":"children","nodeType":"Identifier","column":0,"line":0,"namePos":10976,"name":"children","object":null},"colon":0,"value":{"children":[],"start":10987,"end":10997,"code":"n.children","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":10987,"end":10988,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":10987,"name":"n","object":null},"sel":{"children":[],"start":10989,"end":10997,"code":"children","nodeType":"Identifier","column":0,"line":0,"namePos":10989,"name":"children","object":null}}},{"children":[],"start":11008,"end":11029,"code":"handlers: n.handlers","nodeType":"KeyValueExpression","column":0,"line":0,"key":{"children":[],"start":11008,"end":11016,"code":"handlers","nodeType":"Identifier","column":0,"line":0,"namePos":11008,"name":"handlers","object":null},"colon":0,"value":{"children":[],"start":11019,"end":11029,"code":"n.handlers","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":11019,"end":11020,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":11019,"name":"n","object":null},"sel":{"children":[],"start":11021,"end":11029,"code":"handlers","nodeType":"Identifier","column":0,"line":0,"namePos":11021,"name":"handlers","object":null}}},{"children":[],"start":11040,"end":11061,"code":"fullPath: n.fullPath","nodeType":"KeyValueExpression","column":0,"line":0,"key":{"children":[],"start":11040,"end":11048,"code":"fullPath","nodeType":"Identifier","column":0,"line":0,"namePos":11040,"name":"fullPath","object":null},"colon":0,"value":{"children":[],"start":11051,"end":11061,"code":"n.fullPath","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":11051,"end":11052,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":11051,"name":"n","object":null},"sel":{"children":[],"start":11053,"end":11061,"code":"fullPath","nodeType":"Identifier","column":0,"line":0,"namePos":11053,"name":"fullPath","object":null}}}],"rbrace":11071,"incomplete":false}}},{"children":[],"start":11082,"end":11112,"code":"paramsCount: globalParamsCount","nodeType":"KeyValueExpression","column":0,"line":0,"key":{"children":[],"start":11082,"end":11093,"code":"paramsCount","nodeType":"Identifier","column":0,"line":0,"namePos":11082,"name":"paramsCount","object":null},"colon":0,"value":{"children":[],"start":11095,"end":11112,"code":"globalParamsCount","nodeType":"Identifier","column":0,"line":0,"namePos":11095,"name":"globalParamsCount","object":null}}],"rbrace":11121,"incomplete":false}]}],"rbrace":11129},"else":null},{"children":[],"start":11138,"end":11155,"code":"n = n.children[i]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":11138,"end":11139,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":11138,"name":"n","object":null}],"tokenPos":11140,"token":42,"rhs":[{"children":[],"start":11142,"end":11155,"code":"n.children[i]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":11142,"end":11152,"code":"n.children","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":11142,"end":11143,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":11142,"name":"n","object":null},"sel":{"children":[],"start":11144,"end":11152,"code":"children","nodeType":"Identifier","column":0,"line":0,"namePos":11144,"name":"children","object":null}},"leftBracket":11152,"index":{"children":[],"start":11153,"end":11154,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":11153,"name":"i","object":null},"rightBracket":11154}]},{"children":[],"start":11162,"end":11175,"code":"continue walk","nodeType":"BranchStatement","column":0,"line":0,"tokenPosition":11162,"token":65,"label":{"children":[],"start":11171,"end":11175,"code":"walk","nodeType":"Identifier","column":0,"line":0,"namePos":11171,"name":"walk","object":null}}],"rbrace":11181},"else":null}],"rbrace":11187}},{"children":[],"start":11194,"end":12100,"code":"if !n.wildChild {\n\tif path != \"/\" {\n\t\tfor length := len(*skippedNodes); length \u003e 0; length-- {\n\t\t\tskippedNode := (*skippedNodes)[length-1]\n\t\t\t*skippedNodes = (*skippedNodes)[:length-1]\n\t\t\tif strings.HasSuffix(skippedNode.path, path) {\n\t\t\t\tpath = skippedNode.path\n\t\t\t\tn = skippedNode.node\n\t\t\t\tif value.params != nil {\n\t\t\t\t\t*value.params = (*value.params)[:skippedNode.paramsCount]\n\t\t\t\t}\n\t\t\t\tglobalParamsCount = skippedNode.paramsCount\n\t\t\t\tcontinue walk\n\t\t\t}\n\t\t}\n\t}\n\tvalue.tsr = path == \"/\" \u0026\u0026 n.handlers != nil\n\treturn\n}","nodeType":"IfStatement","column":0,"line":0,"if":11194,"initialization":null,"condition":{"children":[],"start":11197,"end":11209,"code":"!n.wildChild","nodeType":"UnaryExpression","column":0,"line":0,"opPos":11197,"op":43,"expression":{"children":[],"start":11198,"end":11209,"code":"n.wildChild","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":11198,"end":11199,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":11198,"name":"n","object":null},"sel":{"children":[],"start":11200,"end":11209,"code":"wildChild","nodeType":"Identifier","column":0,"line":0,"namePos":11200,"name":"wildChild","object":null}}},"body":{"children":[],"start":11210,"end":12100,"code":"{\n\tif path != \"/\" {\n\t\tfor length := len(*skippedNodes); length \u003e 0; length-- {\n\t\t\tskippedNode := (*skippedNodes)[length-1]\n\t\t\t*skippedNodes = (*skippedNodes)[:length-1]\n\t\t\tif strings.HasSuffix(skippedNode.path, path) {\n\t\t\t\tpath = skippedNode.path\n\t\t\t\tn = skippedNode.node\n\t\t\t\tif value.params != nil {\n\t\t\t\t\t*value.params = (*value.params)[:skippedNode.paramsCount]\n\t\t\t\t}\n\t\t\t\tglobalParamsCount = skippedNode.paramsCount\n\t\t\t\tcontinue walk\n\t\t\t}\n\t\t}\n\t}\n\tvalue.tsr = path == \"/\" \u0026\u0026 n.handlers != nil\n\treturn\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":11210,"list":[{"children":[],"start":11390,"end":11890,"code":"if path != \"/\" {\n\tfor length := len(*skippedNodes); length \u003e 0; length-- {\n\t\tskippedNode := (*skippedNodes)[length-1]\n\t\t*skippedNodes = (*skippedNodes)[:length-1]\n\t\tif strings.HasSuffix(skippedNode.path, path) {\n\t\t\tpath = skippedNode.path\n\t\t\tn = skippedNode.node\n\t\t\tif value.params != nil {\n\t\t\t\t*value.params = (*value.params)[:skippedNode.paramsCount]\n\t\t\t}\n\t\t\tglobalParamsCount = skippedNode.paramsCount\n\t\t\tcontinue walk\n\t\t}\n\t}\n}","nodeType":"IfStatement","column":0,"line":0,"if":11390,"initialization":null,"condition":{"children":[],"start":11393,"end":11404,"code":"path != \"/\"","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":11393,"end":11397,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":11393,"name":"path","object":null},"opPos":11398,"op":44,"rightExpression":{"children":[],"start":11401,"end":11404,"code":"\"/\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":11401,"kind":9,"value":"\"/\""}},"body":{"children":[],"start":11405,"end":11890,"code":"{\n\tfor length := len(*skippedNodes); length \u003e 0; length-- {\n\t\tskippedNode := (*skippedNodes)[length-1]\n\t\t*skippedNodes = (*skippedNodes)[:length-1]\n\t\tif strings.HasSuffix(skippedNode.path, path) {\n\t\t\tpath = skippedNode.path\n\t\t\tn = skippedNode.node\n\t\t\tif value.params != nil {\n\t\t\t\t*value.params = (*value.params)[:skippedNode.paramsCount]\n\t\t\t}\n\t\t\tglobalParamsCount = skippedNode.paramsCount\n\t\t\tcontinue walk\n\t\t}\n\t}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":11405,"list":[{"children":[],"start":11413,"end":11883,"code":"for length := len(*skippedNodes); length \u003e 0; length-- {\n\tskippedNode := (*skippedNodes)[length-1]\n\t*skippedNodes = (*skippedNodes)[:length-1]\n\tif strings.HasSuffix(skippedNode.path, path) {\n\t\tpath = skippedNode.path\n\t\tn = skippedNode.node\n\t\tif value.params != nil {\n\t\t\t*value.params = (*value.params)[:skippedNode.paramsCount]\n\t\t}\n\t\tglobalParamsCount = skippedNode.paramsCount\n\t\tcontinue walk\n\t}\n}","nodeType":"ForStatement","column":0,"line":0,"for":11413,"initialization":{"children":[],"start":11417,"end":11445,"code":"length := len(*skippedNodes)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":11417,"end":11423,"code":"length","nodeType":"Identifier","column":0,"line":0,"namePos":11417,"name":"length","object":null}],"tokenPos":11424,"token":47,"rhs":[{"children":[],"start":11427,"end":11445,"code":"len(*skippedNodes)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":11427,"end":11430,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":11427,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":11431,"end":11444,"code":"*skippedNodes","nodeType":"StarExpression","column":0,"line":0,"star":11431,"expression":{"children":[],"start":11432,"end":11444,"code":"skippedNodes","nodeType":"Identifier","column":0,"line":0,"namePos":11432,"name":"skippedNodes","object":null}}],"ellipsis":0,"rparen":0}]},"condition":{"children":[],"start":11447,"end":11457,"code":"length \u003e 0","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":11447,"end":11453,"code":"length","nodeType":"Identifier","column":0,"line":0,"namePos":11447,"name":"length","object":null},"opPos":11454,"op":41,"rightExpression":{"children":[],"start":11456,"end":11457,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":11456,"kind":5,"value":"0"}},"post":{"children":[],"start":11459,"end":11467,"code":"length--","nodeType":"IncrementDecrementStatement","column":0,"line":0,"Expression":{"children":[],"start":11459,"end":11465,"code":"length","nodeType":"Identifier","column":0,"line":0,"namePos":11459,"name":"length","object":null},"TokenPosition":11465,"Token":38},"body":{"children":[],"start":11468,"end":11883,"code":"{\n\tskippedNode := (*skippedNodes)[length-1]\n\t*skippedNodes = (*skippedNodes)[:length-1]\n\tif strings.HasSuffix(skippedNode.path, path) {\n\t\tpath = skippedNode.path\n\t\tn = skippedNode.node\n\t\tif value.params != nil {\n\t\t\t*value.params = (*value.params)[:skippedNode.paramsCount]\n\t\t}\n\t\tglobalParamsCount = skippedNode.paramsCount\n\t\tcontinue walk\n\t}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":11468,"list":[{"children":[],"start":11477,"end":11517,"code":"skippedNode := (*skippedNodes)[length-1]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":11477,"end":11488,"code":"skippedNode","nodeType":"Identifier","column":0,"line":0,"namePos":11477,"name":"skippedNode","object":null}],"tokenPos":11489,"token":47,"rhs":[{"children":[],"start":11492,"end":11517,"code":"(*skippedNodes)[length-1]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":11492,"end":11507,"code":"(*skippedNodes)","nodeType":"ParenthesizedExpression","column":0,"line":0,"lparen":11492,"expression":{"children":[],"start":11493,"end":11506,"code":"*skippedNodes","nodeType":"StarExpression","column":0,"line":0,"star":11493,"expression":{"children":[],"start":11494,"end":11506,"code":"skippedNodes","nodeType":"Identifier","column":0,"line":0,"namePos":11494,"name":"skippedNodes","object":null}},"rparen":11506},"leftBracket":11507,"index":{"children":[],"start":11508,"end":11516,"code":"length - 1","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":11508,"end":11514,"code":"length","nodeType":"Identifier","column":0,"line":0,"namePos":11508,"name":"length","object":null},"opPos":11514,"op":13,"rightExpression":{"children":[],"start":11515,"end":11516,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":11515,"kind":5,"value":"1"}},"rightBracket":11516}]},{"children":[],"start":11525,"end":11567,"code":"*skippedNodes = (*skippedNodes)[:length-1]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":11525,"end":11538,"code":"*skippedNodes","nodeType":"StarExpression","column":0,"line":0,"star":11525,"expression":{"children":[],"start":11526,"end":11538,"code":"skippedNodes","nodeType":"Identifier","column":0,"line":0,"namePos":11526,"name":"skippedNodes","object":null}}],"tokenPos":11539,"token":42,"rhs":[{"children":[],"start":11541,"end":11567,"code":"(*skippedNodes)[:length-1]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":11541,"end":11556,"code":"(*skippedNodes)","nodeType":"ParenthesizedExpression","column":0,"line":0,"lparen":11541,"expression":{"children":[],"start":11542,"end":11555,"code":"*skippedNodes","nodeType":"StarExpression","column":0,"line":0,"star":11542,"expression":{"children":[],"start":11543,"end":11555,"code":"skippedNodes","nodeType":"Identifier","column":0,"line":0,"namePos":11543,"name":"skippedNodes","object":null}},"rparen":11555},"leftBracket":11556,"low":null,"high":{"children":[],"start":11558,"end":11566,"code":"length - 1","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":11558,"end":11564,"code":"length","nodeType":"Identifier","column":0,"line":0,"namePos":11558,"name":"length","object":null},"opPos":11564,"op":13,"rightExpression":{"children":[],"start":11565,"end":11566,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":11565,"kind":5,"value":"1"}},"max":null,"slice3":false,"rightBracket":11566}]},{"children":[],"start":11575,"end":11875,"code":"if strings.HasSuffix(skippedNode.path, path) {\n\tpath = skippedNode.path\n\tn = skippedNode.node\n\tif value.params != nil {\n\t\t*value.params = (*value.params)[:skippedNode.paramsCount]\n\t}\n\tglobalParamsCount = skippedNode.paramsCount\n\tcontinue walk\n}","nodeType":"IfStatement","column":0,"line":0,"if":11575,"initialization":null,"condition":{"children":[],"start":11578,"end":11619,"code":"strings.HasSuffix(skippedNode.path, path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":11578,"end":11595,"code":"strings.HasSuffix","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":11578,"end":11585,"code":"strings","nodeType":"Identifier","column":0,"line":0,"namePos":11578,"name":"strings","object":null},"sel":{"children":[],"start":11586,"end":11595,"code":"HasSuffix","nodeType":"Identifier","column":0,"line":0,"namePos":11586,"name":"HasSuffix","object":null}},"lparen":0,"args":[{"children":[],"start":11596,"end":11612,"code":"skippedNode.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":11596,"end":11607,"code":"skippedNode","nodeType":"Identifier","column":0,"line":0,"namePos":11596,"name":"skippedNode","object":null},"sel":{"children":[],"start":11608,"end":11612,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":11608,"name":"path","object":null}},{"children":[],"start":11614,"end":11618,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":11614,"name":"path","object":null}],"ellipsis":0,"rparen":0},"body":{"children":[],"start":11620,"end":11875,"code":"{\n\tpath = skippedNode.path\n\tn = skippedNode.node\n\tif value.params != nil {\n\t\t*value.params = (*value.params)[:skippedNode.paramsCount]\n\t}\n\tglobalParamsCount = skippedNode.paramsCount\n\tcontinue walk\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":11620,"list":[{"children":[],"start":11630,"end":11653,"code":"path = skippedNode.path","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":11630,"end":11634,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":11630,"name":"path","object":null}],"tokenPos":11635,"token":42,"rhs":[{"children":[],"start":11637,"end":11653,"code":"skippedNode.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":11637,"end":11648,"code":"skippedNode","nodeType":"Identifier","column":0,"line":0,"namePos":11637,"name":"skippedNode","object":null},"sel":{"children":[],"start":11649,"end":11653,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":11649,"name":"path","object":null}}]},{"children":[],"start":11662,"end":11682,"code":"n = skippedNode.node","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":11662,"end":11663,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":11662,"name":"n","object":null}],"tokenPos":11664,"token":42,"rhs":[{"children":[],"start":11666,"end":11682,"code":"skippedNode.node","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":11666,"end":11677,"code":"skippedNode","nodeType":"Identifier","column":0,"line":0,"namePos":11666,"name":"skippedNode","object":null},"sel":{"children":[],"start":11678,"end":11682,"code":"node","nodeType":"Identifier","column":0,"line":0,"namePos":11678,"name":"node","object":null}}]},{"children":[],"start":11691,"end":11792,"code":"if value.params != nil {\n\t*value.params = (*value.params)[:skippedNode.paramsCount]\n}","nodeType":"IfStatement","column":0,"line":0,"if":11691,"initialization":null,"condition":{"children":[],"start":11694,"end":11713,"code":"value.params != nil","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":11694,"end":11706,"code":"value.params","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":11694,"end":11699,"code":"value","nodeType":"Identifier","column":0,"line":0,"namePos":11694,"name":"value","object":null},"sel":{"children":[],"start":11700,"end":11706,"code":"params","nodeType":"Identifier","column":0,"line":0,"namePos":11700,"name":"params","object":null}},"opPos":11707,"op":44,"rightExpression":{"children":[],"start":11710,"end":11713,"code":"nil","nodeType":"Identifier","column":0,"line":0,"namePos":11710,"name":"nil","object":null}},"body":{"children":[],"start":11714,"end":11792,"code":"{\n\t*value.params = (*value.params)[:skippedNode.paramsCount]\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":11714,"list":[{"children":[],"start":11725,"end":11782,"code":"*value.params = (*value.params)[:skippedNode.paramsCount]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":11725,"end":11738,"code":"*value.params","nodeType":"StarExpression","column":0,"line":0,"star":11725,"expression":{"children":[],"start":11726,"end":11738,"code":"value.params","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":11726,"end":11731,"code":"value","nodeType":"Identifier","column":0,"line":0,"namePos":11726,"name":"value","object":null},"sel":{"children":[],"start":11732,"end":11738,"code":"params","nodeType":"Identifier","column":0,"line":0,"namePos":11732,"name":"params","object":null}}}],"tokenPos":11739,"token":42,"rhs":[{"children":[],"start":11741,"end":11782,"code":"(*value.params)[:skippedNode.paramsCount]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":11741,"end":11756,"code":"(*value.params)","nodeType":"ParenthesizedExpression","column":0,"line":0,"lparen":11741,"expression":{"children":[],"start":11742,"end":11755,"code":"*value.params","nodeType":"StarExpression","column":0,"line":0,"star":11742,"expression":{"children":[],"start":11743,"end":11755,"code":"value.params","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":11743,"end":11748,"code":"value","nodeType":"Identifier","column":0,"line":0,"namePos":11743,"name":"value","object":null},"sel":{"children":[],"start":11749,"end":11755,"code":"params","nodeType":"Identifier","column":0,"line":0,"namePos":11749,"name":"params","object":null}}},"rparen":11755},"leftBracket":11756,"low":null,"high":{"children":[],"start":11758,"end":11781,"code":"skippedNode.paramsCount","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":11758,"end":11769,"code":"skippedNode","nodeType":"Identifier","column":0,"line":0,"namePos":11758,"name":"skippedNode","object":null},"sel":{"children":[],"start":11770,"end":11781,"code":"paramsCount","nodeType":"Identifier","column":0,"line":0,"namePos":11770,"name":"paramsCount","object":null}},"max":null,"slice3":false,"rightBracket":11781}]}],"rbrace":11791},"else":null},{"children":[],"start":11801,"end":11844,"code":"globalParamsCount = skippedNode.paramsCount","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":11801,"end":11818,"code":"globalParamsCount","nodeType":"Identifier","column":0,"line":0,"namePos":11801,"name":"globalParamsCount","object":null}],"tokenPos":11819,"token":42,"rhs":[{"children":[],"start":11821,"end":11844,"code":"skippedNode.paramsCount","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":11821,"end":11832,"code":"skippedNode","nodeType":"Identifier","column":0,"line":0,"namePos":11821,"name":"skippedNode","object":null},"sel":{"children":[],"start":11833,"end":11844,"code":"paramsCount","nodeType":"Identifier","column":0,"line":0,"namePos":11833,"name":"paramsCount","object":null}}]},{"children":[],"start":11853,"end":11866,"code":"continue walk","nodeType":"BranchStatement","column":0,"line":0,"tokenPosition":11853,"token":65,"label":{"children":[],"start":11862,"end":11866,"code":"walk","nodeType":"Identifier","column":0,"line":0,"namePos":11862,"name":"walk","object":null}}],"rbrace":11874},"else":null}],"rbrace":11882}}],"rbrace":11889},"else":null},{"children":[],"start":12038,"end":12082,"code":"value.tsr = path == \"/\" \u0026\u0026 n.handlers != nil","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":12038,"end":12047,"code":"value.tsr","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":12038,"end":12043,"code":"value","nodeType":"Identifier","column":0,"line":0,"namePos":12038,"name":"value","object":null},"sel":{"children":[],"start":12044,"end":12047,"code":"tsr","nodeType":"Identifier","column":0,"line":0,"namePos":12044,"name":"tsr","object":null}}],"tokenPos":12048,"token":42,"rhs":[{"children":[],"start":12050,"end":12082,"code":"path == \"/\" \u0026\u0026 n.handlers != nil","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":12050,"end":12061,"code":"path == \"/\"","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":12050,"end":12054,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":12050,"name":"path","object":null},"opPos":12055,"op":39,"rightExpression":{"children":[],"start":12058,"end":12061,"code":"\"/\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":12058,"kind":9,"value":"\"/\""}},"opPos":12062,"op":34,"rightExpression":{"children":[],"start":12065,"end":12082,"code":"n.handlers != nil","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":12065,"end":12075,"code":"n.handlers","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":12065,"end":12066,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":12065,"name":"n","object":null},"sel":{"children":[],"start":12067,"end":12075,"code":"handlers","nodeType":"Identifier","column":0,"line":0,"namePos":12067,"name":"handlers","object":null}},"opPos":12076,"op":44,"rightExpression":{"children":[],"start":12079,"end":12082,"code":"nil","nodeType":"Identifier","column":0,"line":0,"namePos":12079,"name":"nil","object":null}}}]},{"children":[],"start":12088,"end":12094,"code":"return","nodeType":"ReturnStatement","column":0,"line":0,"return":12088,"results":[]}],"rbrace":12099},"else":null},{"children":[],"start":12176,"end":12209,"code":"n = n.children[len(n.children)-1]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":12176,"end":12177,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":12176,"name":"n","object":null}],"tokenPos":12178,"token":42,"rhs":[{"children":[],"start":12180,"end":12209,"code":"n.children[len(n.children)-1]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":12180,"end":12190,"code":"n.children","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":12180,"end":12181,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":12180,"name":"n","object":null},"sel":{"children":[],"start":12182,"end":12190,"code":"children","nodeType":"Identifier","column":0,"line":0,"namePos":12182,"name":"children","object":null}},"leftBracket":12190,"index":{"children":[],"start":12191,"end":12208,"code":"len(n.children) - 1","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":12191,"end":12206,"code":"len(n.children)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":12191,"end":12194,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":12191,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":12195,"end":12205,"code":"n.children","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":12195,"end":12196,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":12195,"name":"n","object":null},"sel":{"children":[],"start":12197,"end":12205,"code":"children","nodeType":"Identifier","column":0,"line":0,"namePos":12197,"name":"children","object":null}}],"ellipsis":0,"rparen":0},"opPos":12206,"op":13,"rightExpression":{"children":[],"start":12207,"end":12208,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":12207,"kind":5,"value":"1"}},"rightBracket":12208}]},{"children":[],"start":12214,"end":12233,"code":"globalParamsCount++","nodeType":"IncrementDecrementStatement","column":0,"line":0,"Expression":{"children":[],"start":12214,"end":12231,"code":"globalParamsCount","nodeType":"Identifier","column":0,"line":0,"namePos":12214,"name":"globalParamsCount","object":null},"TokenPosition":12231,"Token":37},{"children":[],"start":12239,"end":14656,"code":"switch n.nType {\ncase param:\n\tend := 0\n\tfor end \u003c len(path) \u0026\u0026 path[end] != '/' {\n\t\tend++\n\t}\n\tif params != nil {\n\t\tif cap(*params) \u003c int(globalParamsCount) {\n\t\t\tnewParams := make(Params, len(*params), globalParamsCount)\n\t\t\tcopy(newParams, *params)\n\t\t\t*params = newParams\n\t\t}\n\t\tif value.params == nil {\n\t\t\tvalue.params = params\n\t\t}\n\t\ti := len(*value.params)\n\t\t*value.params = (*value.params)[:i+1]\n\t\tval := path[:end]\n\t\tif unescape {\n\t\t\tif v, err := url.QueryUnescape(val); err == nil {\n\t\t\t\tval = v\n\t\t\t}\n\t\t}\n\t\t(*value.params)[i] = Param{Key: n.path[1:], Value: val}\n\t}\n\tif end \u003c len(path) {\n\t\tif len(n.children) \u003e 0 {\n\t\t\tpath = path[end:]\n\t\t\tn = n.children[0]\n\t\t\tcontinue walk\n\t\t}\n\t\tvalue.tsr = len(path) == end+1\n\t\treturn\n\t}\n\tif value.handlers = n.handlers; value.handlers != nil {\n\t\tvalue.fullPath = n.fullPath\n\t\treturn\n\t}\n\tif len(n.children) == 1 {\n\t\tn = n.children[0]\n\t\tvalue.tsr = (n.path == \"/\" \u0026\u0026 n.handlers != nil) || (n.path == \"\" \u0026\u0026 n.indices == \"/\")\n\t}\n\treturn\ncase catchAll:\n\tif params != nil {\n\t\tif cap(*params) \u003c int(globalParamsCount) {\n\t\t\tnewParams := make(Params, len(*params), globalParamsCount)\n\t\t\tcopy(newParams, *params)\n\t\t\t*params = newParams\n\t\t}\n\t\tif value.params == nil {\n\t\t\tvalue.params = params\n\t\t}\n\t\ti := len(*value.params)\n\t\t*value.params = (*value.params)[:i+1]\n\t\tval := path\n\t\tif unescape {\n\t\t\tif v, err := url.QueryUnescape(path); err == nil {\n\t\t\t\tval = v\n\t\t\t}\n\t\t}\n\t\t(*value.params)[i] = Param{Key: n.path[2:], Value: val}\n\t}\n\tvalue.handlers = n.handlers\n\tvalue.fullPath = n.fullPath\n\treturn\ndefault:\n\tpanic(\"invalid node type\")\n}","nodeType":"SwitchStatement","column":0,"line":0,"switch":12239,"initialization":null,"tag":{"children":[],"start":12246,"end":12253,"code":"n.nType","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":12246,"end":12247,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":12246,"name":"n","object":null},"sel":{"children":[],"start":12248,"end":12253,"code":"nType","nodeType":"Identifier","column":0,"line":0,"namePos":12248,"name":"nType","object":null}},"body":{"children":[],"start":12254,"end":14656,"code":"{\n\tcase param:\n\t\tend := 0\n\t\tfor end \u003c len(path) \u0026\u0026 path[end] != '/' {\n\t\t\tend++\n\t\t}\n\t\tif params != nil {\n\t\t\tif cap(*params) \u003c int(globalParamsCount) {\n\t\t\t\tnewParams := make(Params, len(*params), globalParamsCount)\n\t\t\t\tcopy(newParams, *params)\n\t\t\t\t*params = newParams\n\t\t\t}\n\t\t\tif value.params == nil {\n\t\t\t\tvalue.params = params\n\t\t\t}\n\t\t\ti := len(*value.params)\n\t\t\t*value.params = (*value.params)[:i+1]\n\t\t\tval := path[:end]\n\t\t\tif unescape {\n\t\t\t\tif v, err := url.QueryUnescape(val); err == nil {\n\t\t\t\t\tval = v\n\t\t\t\t}\n\t\t\t}\n\t\t\t(*value.params)[i] = Param{Key: n.path[1:], Value: val}\n\t\t}\n\t\tif end \u003c len(path) {\n\t\t\tif len(n.children) \u003e 0 {\n\t\t\t\tpath = path[end:]\n\t\t\t\tn = n.children[0]\n\t\t\t\tcontinue walk\n\t\t\t}\n\t\t\tvalue.tsr = len(path) == end+1\n\t\t\treturn\n\t\t}\n\t\tif value.handlers = n.handlers; value.handlers != nil {\n\t\t\tvalue.fullPath = n.fullPath\n\t\t\treturn\n\t\t}\n\t\tif len(n.children) == 1 {\n\t\t\tn = n.children[0]\n\t\t\tvalue.tsr = (n.path == \"/\" \u0026\u0026 n.handlers != nil) || (n.path == \"\" \u0026\u0026 n.indices == \"/\")\n\t\t}\n\t\treturn\n\tcase catchAll:\n\t\tif params != nil {\n\t\t\tif cap(*params) \u003c int(globalParamsCount) {\n\t\t\t\tnewParams := make(Params, len(*params), globalParamsCount)\n\t\t\t\tcopy(newParams, *params)\n\t\t\t\t*params = newParams\n\t\t\t}\n\t\t\tif value.params == nil {\n\t\t\t\tvalue.params = params\n\t\t\t}\n\t\t\ti := len(*value.params)\n\t\t\t*value.params = (*value.params)[:i+1]\n\t\t\tval := path\n\t\t\tif unescape {\n\t\t\t\tif v, err := url.QueryUnescape(path); err == nil {\n\t\t\t\t\tval = v\n\t\t\t\t}\n\t\t\t}\n\t\t\t(*value.params)[i] = Param{Key: n.path[2:], Value: val}\n\t\t}\n\t\tvalue.handlers = n.handlers\n\t\tvalue.fullPath = n.fullPath\n\t\treturn\n\tdefault:\n\t\tpanic(\"invalid node type\")\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":12254,"list":[{"children":[],"start":12260,"end":13814,"code":"case param:\n\tend := 0\n\tfor end \u003c len(path) \u0026\u0026 path[end] != '/' {\n\t\tend++\n\t}\n\tif params != nil {\n\t\tif cap(*params) \u003c int(globalParamsCount) {\n\t\t\tnewParams := make(Params, len(*params), globalParamsCount)\n\t\t\tcopy(newParams, *params)\n\t\t\t*params = newParams\n\t\t}\n\t\tif value.params == nil {\n\t\t\tvalue.params = params\n\t\t}\n\t\ti := len(*value.params)\n\t\t*value.params = (*value.params)[:i+1]\n\t\tval := path[:end]\n\t\tif unescape {\n\t\t\tif v, err := url.QueryUnescape(val); err == nil {\n\t\t\t\tval = v\n\t\t\t}\n\t\t}\n\t\t(*value.params)[i] = Param{Key: n.path[1:], Value: val}\n\t}\n\tif end \u003c len(path) {\n\t\tif len(n.children) \u003e 0 {\n\t\t\tpath = path[end:]\n\t\t\tn = n.children[0]\n\t\t\tcontinue walk\n\t\t}\n\t\tvalue.tsr = len(path) == end+1\n\t\treturn\n\t}\n\tif value.handlers = n.handlers; value.handlers != nil {\n\t\tvalue.fullPath = n.fullPath\n\t\treturn\n\t}\n\tif len(n.children) == 1 {\n\t\tn = n.children[0]\n\t\tvalue.tsr = (n.path == \"/\" \u0026\u0026 n.handlers != nil) || (n.path == \"\" \u0026\u0026 n.indices == \"/\")\n\t}\n\treturn","nodeType":"CaseClause","column":0,"line":0,"case":12260,"list":[{"children":[],"start":12265,"end":12270,"code":"param","nodeType":"Identifier","column":0,"line":0,"namePos":12265,"name":"param","object":null}],"colon":12270,"body":[{"children":[],"start":12393,"end":12401,"code":"end := 0","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":12393,"end":12396,"code":"end","nodeType":"Identifier","column":0,"line":0,"namePos":12393,"name":"end","object":null}],"tokenPos":12397,"token":47,"rhs":[{"children":[],"start":12400,"end":12401,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":12400,"kind":5,"value":"0"}]},{"children":[],"start":12407,"end":12467,"code":"for end \u003c len(path) \u0026\u0026 path[end] != '/' {\n\tend++\n}","nodeType":"ForStatement","column":0,"line":0,"for":12407,"initialization":null,"condition":{"children":[],"start":12411,"end":12446,"code":"end \u003c len(path) \u0026\u0026 path[end] != '/'","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":12411,"end":12426,"code":"end \u003c len(path)","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":12411,"end":12414,"code":"end","nodeType":"Identifier","column":0,"line":0,"namePos":12411,"name":"end","object":null},"opPos":12415,"op":40,"rightExpression":{"children":[],"start":12417,"end":12426,"code":"len(path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":12417,"end":12420,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":12417,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":12421,"end":12425,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":12421,"name":"path","object":null}],"ellipsis":0,"rparen":0}},"opPos":12427,"op":34,"rightExpression":{"children":[],"start":12430,"end":12446,"code":"path[end] != '/'","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":12430,"end":12439,"code":"path[end]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":12430,"end":12434,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":12430,"name":"path","object":null},"leftBracket":12434,"index":{"children":[],"start":12435,"end":12438,"code":"end","nodeType":"Identifier","column":0,"line":0,"namePos":12435,"name":"end","object":null},"rightBracket":12438},"opPos":12440,"op":44,"rightExpression":{"children":[],"start":12443,"end":12446,"code":"'/'","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":12443,"kind":8,"value":"'/'"}}},"post":null,"body":{"children":[],"start":12447,"end":12467,"code":"{\n\tend++\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":12447,"list":[{"children":[],"start":12455,"end":12460,"code":"end++","nodeType":"IncrementDecrementStatement","column":0,"line":0,"Expression":{"children":[],"start":12455,"end":12458,"code":"end","nodeType":"Identifier","column":0,"line":0,"namePos":12455,"name":"end","object":null},"TokenPosition":12458,"Token":37}],"rbrace":12466}},{"children":[],"start":12499,"end":13164,"code":"if params != nil {\n\tif cap(*params) \u003c int(globalParamsCount) {\n\t\tnewParams := make(Params, len(*params), globalParamsCount)\n\t\tcopy(newParams, *params)\n\t\t*params = newParams\n\t}\n\tif value.params == nil {\n\t\tvalue.params = params\n\t}\n\ti := len(*value.params)\n\t*value.params = (*value.params)[:i+1]\n\tval := path[:end]\n\tif unescape {\n\t\tif v, err := url.QueryUnescape(val); err == nil {\n\t\t\tval = v\n\t\t}\n\t}\n\t(*value.params)[i] = Param{Key: n.path[1:], Value: val}\n}","nodeType":"IfStatement","column":0,"line":0,"if":12499,"initialization":null,"condition":{"children":[],"start":12502,"end":12515,"code":"params != nil","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":12502,"end":12508,"code":"params","nodeType":"Identifier","column":0,"line":0,"namePos":12502,"name":"params","object":null},"opPos":12509,"op":44,"rightExpression":{"children":[],"start":12512,"end":12515,"code":"nil","nodeType":"Identifier","column":0,"line":0,"namePos":12512,"name":"nil","object":null}},"body":{"children":[],"start":12516,"end":13164,"code":"{\n\tif cap(*params) \u003c int(globalParamsCount) {\n\t\tnewParams := make(Params, len(*params), globalParamsCount)\n\t\tcopy(newParams, *params)\n\t\t*params = newParams\n\t}\n\tif value.params == nil {\n\t\tvalue.params = params\n\t}\n\ti := len(*value.params)\n\t*value.params = (*value.params)[:i+1]\n\tval := path[:end]\n\tif unescape {\n\t\tif v, err := url.QueryUnescape(val); err == nil {\n\t\t\tval = v\n\t\t}\n\t}\n\t(*value.params)[i] = Param{Key: n.path[1:], Value: val}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":12516,"list":[{"children":[],"start":12567,"end":12742,"code":"if cap(*params) \u003c int(globalParamsCount) {\n\tnewParams := make(Params, len(*params), globalParamsCount)\n\tcopy(newParams, *params)\n\t*params = newParams\n}","nodeType":"IfStatement","column":0,"line":0,"if":12567,"initialization":null,"condition":{"children":[],"start":12570,"end":12607,"code":"cap(*params) \u003c int(globalParamsCount)","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":12570,"end":12582,"code":"cap(*params)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":12570,"end":12573,"code":"cap","nodeType":"Identifier","column":0,"line":0,"namePos":12570,"name":"cap","object":null},"lparen":0,"args":[{"children":[],"start":12574,"end":12581,"code":"*params","nodeType":"StarExpression","column":0,"line":0,"star":12574,"expression":{"children":[],"start":12575,"end":12581,"code":"params","nodeType":"Identifier","column":0,"line":0,"namePos":12575,"name":"params","object":null}}],"ellipsis":0,"rparen":0},"opPos":12583,"op":40,"rightExpression":{"children":[],"start":12585,"end":12607,"code":"int(globalParamsCount)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":12585,"end":12588,"code":"int","nodeType":"Identifier","column":0,"line":0,"namePos":12585,"name":"int","object":null},"lparen":0,"args":[{"children":[],"start":12589,"end":12606,"code":"globalParamsCount","nodeType":"Identifier","column":0,"line":0,"namePos":12589,"name":"globalParamsCount","object":null}],"ellipsis":0,"rparen":0}},"body":{"children":[],"start":12608,"end":12742,"code":"{\n\tnewParams := make(Params, len(*params), globalParamsCount)\n\tcopy(newParams, *params)\n\t*params = newParams\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":12608,"list":[{"children":[],"start":12617,"end":12675,"code":"newParams := make(Params, len(*params), globalParamsCount)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":12617,"end":12626,"code":"newParams","nodeType":"Identifier","column":0,"line":0,"namePos":12617,"name":"newParams","object":null}],"tokenPos":12627,"token":47,"rhs":[{"children":[],"start":12630,"end":12675,"code":"make(Params, len(*params), globalParamsCount)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":12630,"end":12634,"code":"make","nodeType":"Identifier","column":0,"line":0,"namePos":12630,"name":"make","object":null},"lparen":0,"args":[{"children":[],"start":12635,"end":12641,"code":"Params","nodeType":"Identifier","column":0,"line":0,"namePos":12635,"name":"Params","object":null},{"children":[],"start":12643,"end":12655,"code":"len(*params)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":12643,"end":12646,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":12643,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":12647,"end":12654,"code":"*params","nodeType":"StarExpression","column":0,"line":0,"star":12647,"expression":{"children":[],"start":12648,"end":12654,"code":"params","nodeType":"Identifier","column":0,"line":0,"namePos":12648,"name":"params","object":null}}],"ellipsis":0,"rparen":0},{"children":[],"start":12657,"end":12674,"code":"globalParamsCount","nodeType":"Identifier","column":0,"line":0,"namePos":12657,"name":"globalParamsCount","object":null}],"ellipsis":0,"rparen":0}]},{"children":[],"start":12683,"end":12707,"code":"copy(newParams, *params)","nodeType":"ExpressionStatement","column":0,"line":0,"Expression":{"children":[],"start":12683,"end":12707,"code":"copy(newParams, *params)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":12683,"end":12687,"code":"copy","nodeType":"Identifier","column":0,"line":0,"namePos":12683,"name":"copy","object":null},"lparen":0,"args":[{"children":[],"start":12688,"end":12697,"code":"newParams","nodeType":"Identifier","column":0,"line":0,"namePos":12688,"name":"newParams","object":null},{"children":[],"start":12699,"end":12706,"code":"*params","nodeType":"StarExpression","column":0,"line":0,"star":12699,"expression":{"children":[],"start":12700,"end":12706,"code":"params","nodeType":"Identifier","column":0,"line":0,"namePos":12700,"name":"params","object":null}}],"ellipsis":0,"rparen":0}},{"children":[],"start":12715,"end":12734,"code":"*params = newParams","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":12715,"end":12722,"code":"*params","nodeType":"StarExpression","column":0,"line":0,"star":12715,"expression":{"children":[],"start":12716,"end":12722,"code":"params","nodeType":"Identifier","column":0,"line":0,"namePos":12716,"name":"params","object":null}}],"tokenPos":12723,"token":42,"rhs":[{"children":[],"start":12725,"end":12734,"code":"newParams","nodeType":"Identifier","column":0,"line":0,"namePos":12725,"name":"newParams","object":null}]}],"rbrace":12741},"else":null},{"children":[],"start":12750,"end":12811,"code":"if value.params == nil {\n\tvalue.params = params\n}","nodeType":"IfStatement","column":0,"line":0,"if":12750,"initialization":null,"condition":{"children":[],"start":12753,"end":12772,"code":"value.params == nil","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":12753,"end":12765,"code":"value.params","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":12753,"end":12758,"code":"value","nodeType":"Identifier","column":0,"line":0,"namePos":12753,"name":"value","object":null},"sel":{"children":[],"start":12759,"end":12765,"code":"params","nodeType":"Identifier","column":0,"line":0,"namePos":12759,"name":"params","object":null}},"opPos":12766,"op":39,"rightExpression":{"children":[],"start":12769,"end":12772,"code":"nil","nodeType":"Identifier","column":0,"line":0,"namePos":12769,"name":"nil","object":null}},"body":{"children":[],"start":12773,"end":12811,"code":"{\n\tvalue.params = params\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":12773,"list":[{"children":[],"start":12782,"end":12803,"code":"value.params = params","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":12782,"end":12794,"code":"value.params","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":12782,"end":12787,"code":"value","nodeType":"Identifier","column":0,"line":0,"namePos":12782,"name":"value","object":null},"sel":{"children":[],"start":12788,"end":12794,"code":"params","nodeType":"Identifier","column":0,"line":0,"namePos":12788,"name":"params","object":null}}],"tokenPos":12795,"token":42,"rhs":[{"children":[],"start":12797,"end":12803,"code":"params","nodeType":"Identifier","column":0,"line":0,"namePos":12797,"name":"params","object":null}]}],"rbrace":12810},"else":null},{"children":[],"start":12869,"end":12892,"code":"i := len(*value.params)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":12869,"end":12870,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":12869,"name":"i","object":null}],"tokenPos":12871,"token":47,"rhs":[{"children":[],"start":12874,"end":12892,"code":"len(*value.params)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":12874,"end":12877,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":12874,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":12878,"end":12891,"code":"*value.params","nodeType":"StarExpression","column":0,"line":0,"star":12878,"expression":{"children":[],"start":12879,"end":12891,"code":"value.params","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":12879,"end":12884,"code":"value","nodeType":"Identifier","column":0,"line":0,"namePos":12879,"name":"value","object":null},"sel":{"children":[],"start":12885,"end":12891,"code":"params","nodeType":"Identifier","column":0,"line":0,"namePos":12885,"name":"params","object":null}}}],"ellipsis":0,"rparen":0}]},{"children":[],"start":12899,"end":12936,"code":"*value.params = (*value.params)[:i+1]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":12899,"end":12912,"code":"*value.params","nodeType":"StarExpression","column":0,"line":0,"star":12899,"expression":{"children":[],"start":12900,"end":12912,"code":"value.params","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":12900,"end":12905,"code":"value","nodeType":"Identifier","column":0,"line":0,"namePos":12900,"name":"value","object":null},"sel":{"children":[],"start":12906,"end":12912,"code":"params","nodeType":"Identifier","column":0,"line":0,"namePos":12906,"name":"params","object":null}}}],"tokenPos":12913,"token":42,"rhs":[{"children":[],"start":12915,"end":12936,"code":"(*value.params)[:i+1]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":12915,"end":12930,"code":"(*value.params)","nodeType":"ParenthesizedExpression","column":0,"line":0,"lparen":12915,"expression":{"children":[],"start":12916,"end":12929,"code":"*value.params","nodeType":"StarExpression","column":0,"line":0,"star":12916,"expression":{"children":[],"start":12917,"end":12929,"code":"value.params","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":12917,"end":12922,"code":"value","nodeType":"Identifier","column":0,"line":0,"namePos":12917,"name":"value","object":null},"sel":{"children":[],"start":12923,"end":12929,"code":"params","nodeType":"Identifier","column":0,"line":0,"namePos":12923,"name":"params","object":null}}},"rparen":12929},"leftBracket":12930,"low":null,"high":{"children":[],"start":12932,"end":12935,"code":"i + 1","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":12932,"end":12933,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":12932,"name":"i","object":null},"opPos":12933,"op":12,"rightExpression":{"children":[],"start":12934,"end":12935,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":12934,"kind":5,"value":"1"}},"max":null,"slice3":false,"rightBracket":12935}]},{"children":[],"start":12943,"end":12960,"code":"val := path[:end]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":12943,"end":12946,"code":"val","nodeType":"Identifier","column":0,"line":0,"namePos":12943,"name":"val","object":null}],"tokenPos":12947,"token":47,"rhs":[{"children":[],"start":12950,"end":12960,"code":"path[:end]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":12950,"end":12954,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":12950,"name":"path","object":null},"leftBracket":12954,"low":null,"high":{"children":[],"start":12956,"end":12959,"code":"end","nodeType":"Identifier","column":0,"line":0,"namePos":12956,"name":"end","object":null},"max":null,"slice3":false,"rightBracket":12959}]},{"children":[],"start":12967,"end":13070,"code":"if unescape {\n\tif v, err := url.QueryUnescape(val); err == nil {\n\t\tval = v\n\t}\n}","nodeType":"IfStatement","column":0,"line":0,"if":12967,"initialization":null,"condition":{"children":[],"start":12970,"end":12978,"code":"unescape","nodeType":"Identifier","column":0,"line":0,"namePos":12970,"name":"unescape","object":null},"body":{"children":[],"start":12979,"end":13070,"code":"{\n\tif v, err := url.QueryUnescape(val); err == nil {\n\t\tval = v\n\t}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":12979,"list":[{"children":[],"start":12988,"end":13062,"code":"if v, err := url.QueryUnescape(val); err == nil {\n\tval = v\n}","nodeType":"IfStatement","column":0,"line":0,"if":12988,"initialization":{"children":[],"start":12991,"end":13023,"code":"v, err := url.QueryUnescape(val)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":12991,"end":12992,"code":"v","nodeType":"Identifier","column":0,"line":0,"namePos":12991,"name":"v","object":null},{"children":[],"start":12994,"end":12997,"code":"err","nodeType":"Identifier","column":0,"line":0,"namePos":12994,"name":"err","object":null}],"tokenPos":12998,"token":47,"rhs":[{"children":[],"start":13001,"end":13023,"code":"url.QueryUnescape(val)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":13001,"end":13018,"code":"url.QueryUnescape","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":13001,"end":13004,"code":"url","nodeType":"Identifier","column":0,"line":0,"namePos":13001,"name":"url","object":null},"sel":{"children":[],"start":13005,"end":13018,"code":"QueryUnescape","nodeType":"Identifier","column":0,"line":0,"namePos":13005,"name":"QueryUnescape","object":null}},"lparen":0,"args":[{"children":[],"start":13019,"end":13022,"code":"val","nodeType":"Identifier","column":0,"line":0,"namePos":13019,"name":"val","object":null}],"ellipsis":0,"rparen":0}]},"condition":{"children":[],"start":13025,"end":13035,"code":"err == nil","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":13025,"end":13028,"code":"err","nodeType":"Identifier","column":0,"line":0,"namePos":13025,"name":"err","object":null},"opPos":13029,"op":39,"rightExpression":{"children":[],"start":13032,"end":13035,"code":"nil","nodeType":"Identifier","column":0,"line":0,"namePos":13032,"name":"nil","object":null}},"body":{"children":[],"start":13036,"end":13062,"code":"{\n\tval = v\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":13036,"list":[{"children":[],"start":13046,"end":13053,"code":"val = v","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":13046,"end":13049,"code":"val","nodeType":"Identifier","column":0,"line":0,"namePos":13046,"name":"val","object":null}],"tokenPos":13050,"token":42,"rhs":[{"children":[],"start":13052,"end":13053,"code":"v","nodeType":"Identifier","column":0,"line":0,"namePos":13052,"name":"v","object":null}]}],"rbrace":13061},"else":null}],"rbrace":13069},"else":null},{"children":[],"start":13077,"end":13157,"code":"(*value.params)[i] = Param{Key: n.path[1:], Value: val}","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":13077,"end":13095,"code":"(*value.params)[i]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":13077,"end":13092,"code":"(*value.params)","nodeType":"ParenthesizedExpression","column":0,"line":0,"lparen":13077,"expression":{"children":[],"start":13078,"end":13091,"code":"*value.params","nodeType":"StarExpression","column":0,"line":0,"star":13078,"expression":{"children":[],"start":13079,"end":13091,"code":"value.params","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":13079,"end":13084,"code":"value","nodeType":"Identifier","column":0,"line":0,"namePos":13079,"name":"value","object":null},"sel":{"children":[],"start":13085,"end":13091,"code":"params","nodeType":"Identifier","column":0,"line":0,"namePos":13085,"name":"params","object":null}}},"rparen":13091},"leftBracket":13092,"index":{"children":[],"start":13093,"end":13094,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":13093,"name":"i","object":null},"rightBracket":13094}],"tokenPos":13096,"token":42,"rhs":[{"children":[],"start":13098,"end":13157,"code":"Param{Key: n.path[1:], Value: val}","nodeType":"CompositeLiteral","column":0,"line":0,"type":{"children":[],"start":13098,"end":13103,"code":"Param","nodeType":"Identifier","column":0,"line":0,"namePos":13098,"name":"Param","object":null},"lbrace":13103,"elements":[{"children":[],"start":13112,"end":13129,"code":"Key: n.path[1:]","nodeType":"KeyValueExpression","column":0,"line":0,"key":{"children":[],"start":13112,"end":13115,"code":"Key","nodeType":"Identifier","column":0,"line":0,"namePos":13112,"name":"Key","object":null},"colon":0,"value":{"children":[],"start":13119,"end":13129,"code":"n.path[1:]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":13119,"end":13125,"code":"n.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":13119,"end":13120,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":13119,"name":"n","object":null},"sel":{"children":[],"start":13121,"end":13125,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":13121,"name":"path","object":null}},"leftBracket":13125,"low":{"children":[],"start":13126,"end":13127,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":13126,"kind":5,"value":"1"},"high":null,"max":null,"slice3":false,"rightBracket":13128}},{"children":[],"start":13138,"end":13148,"code":"Value: val","nodeType":"KeyValueExpression","column":0,"line":0,"key":{"children":[],"start":13138,"end":13143,"code":"Value","nodeType":"Identifier","column":0,"line":0,"namePos":13138,"name":"Value","object":null},"colon":0,"value":{"children":[],"start":13145,"end":13148,"code":"val","nodeType":"Identifier","column":0,"line":0,"namePos":13145,"name":"val","object":null}}],"rbrace":13156,"incomplete":false}]}],"rbrace":13163},"else":null},{"children":[],"start":13201,"end":13415,"code":"if end \u003c len(path) {\n\tif len(n.children) \u003e 0 {\n\t\tpath = path[end:]\n\t\tn = n.children[0]\n\t\tcontinue walk\n\t}\n\tvalue.tsr = len(path) == end+1\n\treturn\n}","nodeType":"IfStatement","column":0,"line":0,"if":13201,"initialization":null,"condition":{"children":[],"start":13204,"end":13219,"code":"end \u003c len(path)","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":13204,"end":13207,"code":"end","nodeType":"Identifier","column":0,"line":0,"namePos":13204,"name":"end","object":null},"opPos":13208,"op":40,"rightExpression":{"children":[],"start":13210,"end":13219,"code":"len(path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":13210,"end":13213,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":13210,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":13214,"end":13218,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":13214,"name":"path","object":null}],"ellipsis":0,"rparen":0}},"body":{"children":[],"start":13220,"end":13415,"code":"{\n\tif len(n.children) \u003e 0 {\n\t\tpath = path[end:]\n\t\tn = n.children[0]\n\t\tcontinue walk\n\t}\n\tvalue.tsr = len(path) == end+1\n\treturn\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":13220,"list":[{"children":[],"start":13228,"end":13331,"code":"if len(n.children) \u003e 0 {\n\tpath = path[end:]\n\tn = n.children[0]\n\tcontinue walk\n}","nodeType":"IfStatement","column":0,"line":0,"if":13228,"initialization":null,"condition":{"children":[],"start":13231,"end":13250,"code":"len(n.children) \u003e 0","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":13231,"end":13246,"code":"len(n.children)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":13231,"end":13234,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":13231,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":13235,"end":13245,"code":"n.children","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":13235,"end":13236,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":13235,"name":"n","object":null},"sel":{"children":[],"start":13237,"end":13245,"code":"children","nodeType":"Identifier","column":0,"line":0,"namePos":13237,"name":"children","object":null}}],"ellipsis":0,"rparen":0},"opPos":13247,"op":41,"rightExpression":{"children":[],"start":13249,"end":13250,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":13249,"kind":5,"value":"0"}},"body":{"children":[],"start":13251,"end":13331,"code":"{\n\tpath = path[end:]\n\tn = n.children[0]\n\tcontinue walk\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":13251,"list":[{"children":[],"start":13260,"end":13277,"code":"path = path[end:]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":13260,"end":13264,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":13260,"name":"path","object":null}],"tokenPos":13265,"token":42,"rhs":[{"children":[],"start":13267,"end":13277,"code":"path[end:]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":13267,"end":13271,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":13267,"name":"path","object":null},"leftBracket":13271,"low":{"children":[],"start":13272,"end":13275,"code":"end","nodeType":"Identifier","column":0,"line":0,"namePos":13272,"name":"end","object":null},"high":null,"max":null,"slice3":false,"rightBracket":13276}]},{"children":[],"start":13285,"end":13302,"code":"n = n.children[0]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":13285,"end":13286,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":13285,"name":"n","object":null}],"tokenPos":13287,"token":42,"rhs":[{"children":[],"start":13289,"end":13302,"code":"n.children[0]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":13289,"end":13299,"code":"n.children","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":13289,"end":13290,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":13289,"name":"n","object":null},"sel":{"children":[],"start":13291,"end":13299,"code":"children","nodeType":"Identifier","column":0,"line":0,"namePos":13291,"name":"children","object":null}},"leftBracket":13299,"index":{"children":[],"start":13300,"end":13301,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":13300,"kind":5,"value":"0"},"rightBracket":13301}]},{"children":[],"start":13310,"end":13323,"code":"continue walk","nodeType":"BranchStatement","column":0,"line":0,"tokenPosition":13310,"token":65,"label":{"children":[],"start":13319,"end":13323,"code":"walk","nodeType":"Identifier","column":0,"line":0,"namePos":13319,"name":"walk","object":null}}],"rbrace":13330},"else":null},{"children":[],"start":13365,"end":13395,"code":"value.tsr = len(path) == end+1","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":13365,"end":13374,"code":"value.tsr","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":13365,"end":13370,"code":"value","nodeType":"Identifier","column":0,"line":0,"namePos":13365,"name":"value","object":null},"sel":{"children":[],"start":13371,"end":13374,"code":"tsr","nodeType":"Identifier","column":0,"line":0,"namePos":13371,"name":"tsr","object":null}}],"tokenPos":13375,"token":42,"rhs":[{"children":[],"start":13377,"end":13395,"code":"len(path) == end+1","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":13377,"end":13386,"code":"len(path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":13377,"end":13380,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":13377,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":13381,"end":13385,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":13381,"name":"path","object":null}],"ellipsis":0,"rparen":0},"opPos":13387,"op":39,"rightExpression":{"children":[],"start":13390,"end":13395,"code":"end + 1","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":13390,"end":13393,"code":"end","nodeType":"Identifier","column":0,"line":0,"namePos":13390,"name":"end","object":null},"opPos":13393,"op":12,"rightExpression":{"children":[],"start":13394,"end":13395,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":13394,"kind":5,"value":"1"}}}]},{"children":[],"start":13402,"end":13408,"code":"return","nodeType":"ReturnStatement","column":0,"line":0,"return":13402,"results":[]}],"rbrace":13414},"else":null},{"children":[],"start":13422,"end":13531,"code":"if value.handlers = n.handlers; value.handlers != nil {\n\tvalue.fullPath = n.fullPath\n\treturn\n}","nodeType":"IfStatement","column":0,"line":0,"if":13422,"initialization":{"children":[],"start":13425,"end":13452,"code":"value.handlers = n.handlers","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":13425,"end":13439,"code":"value.handlers","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":13425,"end":13430,"code":"value","nodeType":"Identifier","column":0,"line":0,"namePos":13425,"name":"value","object":null},"sel":{"children":[],"start":13431,"end":13439,"code":"handlers","nodeType":"Identifier","column":0,"line":0,"namePos":13431,"name":"handlers","object":null}}],"tokenPos":13440,"token":42,"rhs":[{"children":[],"start":13442,"end":13452,"code":"n.handlers","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":13442,"end":13443,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":13442,"name":"n","object":null},"sel":{"children":[],"start":13444,"end":13452,"code":"handlers","nodeType":"Identifier","column":0,"line":0,"namePos":13444,"name":"handlers","object":null}}]},"condition":{"children":[],"start":13454,"end":13475,"code":"value.handlers != nil","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":13454,"end":13468,"code":"value.handlers","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":13454,"end":13459,"code":"value","nodeType":"Identifier","column":0,"line":0,"namePos":13454,"name":"value","object":null},"sel":{"children":[],"start":13460,"end":13468,"code":"handlers","nodeType":"Identifier","column":0,"line":0,"namePos":13460,"name":"handlers","object":null}},"opPos":13469,"op":44,"rightExpression":{"children":[],"start":13472,"end":13475,"code":"nil","nodeType":"Identifier","column":0,"line":0,"namePos":13472,"name":"nil","object":null}},"body":{"children":[],"start":13476,"end":13531,"code":"{\n\tvalue.fullPath = n.fullPath\n\treturn\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":13476,"list":[{"children":[],"start":13484,"end":13511,"code":"value.fullPath = n.fullPath","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":13484,"end":13498,"code":"value.fullPath","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":13484,"end":13489,"code":"value","nodeType":"Identifier","column":0,"line":0,"namePos":13484,"name":"value","object":null},"sel":{"children":[],"start":13490,"end":13498,"code":"fullPath","nodeType":"Identifier","column":0,"line":0,"namePos":13490,"name":"fullPath","object":null}}],"tokenPos":13499,"token":42,"rhs":[{"children":[],"start":13501,"end":13511,"code":"n.fullPath","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":13501,"end":13502,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":13501,"name":"n","object":null},"sel":{"children":[],"start":13503,"end":13511,"code":"fullPath","nodeType":"Identifier","column":0,"line":0,"namePos":13503,"name":"fullPath","object":null}}]},{"children":[],"start":13518,"end":13524,"code":"return","nodeType":"ReturnStatement","column":0,"line":0,"return":13518,"results":[]}],"rbrace":13530},"else":null},{"children":[],"start":13537,"end":13802,"code":"if len(n.children) == 1 {\n\tn = n.children[0]\n\tvalue.tsr = (n.path == \"/\" \u0026\u0026 n.handlers != nil) || (n.path == \"\" \u0026\u0026 n.indices == \"/\")\n}","nodeType":"IfStatement","column":0,"line":0,"if":13537,"initialization":null,"condition":{"children":[],"start":13540,"end":13560,"code":"len(n.children) == 1","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":13540,"end":13555,"code":"len(n.children)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":13540,"end":13543,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":13540,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":13544,"end":13554,"code":"n.children","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":13544,"end":13545,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":13544,"name":"n","object":null},"sel":{"children":[],"start":13546,"end":13554,"code":"children","nodeType":"Identifier","column":0,"line":0,"namePos":13546,"name":"children","object":null}}],"ellipsis":0,"rparen":0},"opPos":13556,"op":39,"rightExpression":{"children":[],"start":13559,"end":13560,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":13559,"kind":5,"value":"1"}},"body":{"children":[],"start":13561,"end":13802,"code":"{\n\tn = n.children[0]\n\tvalue.tsr = (n.path == \"/\" \u0026\u0026 n.handlers != nil) || (n.path == \"\" \u0026\u0026 n.indices == \"/\")\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":13561,"list":[{"children":[],"start":13685,"end":13702,"code":"n = n.children[0]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":13685,"end":13686,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":13685,"name":"n","object":null}],"tokenPos":13687,"token":42,"rhs":[{"children":[],"start":13689,"end":13702,"code":"n.children[0]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":13689,"end":13699,"code":"n.children","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":13689,"end":13690,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":13689,"name":"n","object":null},"sel":{"children":[],"start":13691,"end":13699,"code":"children","nodeType":"Identifier","column":0,"line":0,"namePos":13691,"name":"children","object":null}},"leftBracket":13699,"index":{"children":[],"start":13700,"end":13701,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":13700,"kind":5,"value":"0"},"rightBracket":13701}]},{"children":[],"start":13709,"end":13795,"code":"value.tsr = (n.path == \"/\" \u0026\u0026 n.handlers != nil) || (n.path == \"\" \u0026\u0026 n.indices == \"/\")","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":13709,"end":13718,"code":"value.tsr","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":13709,"end":13714,"code":"value","nodeType":"Identifier","column":0,"line":0,"namePos":13709,"name":"value","object":null},"sel":{"children":[],"start":13715,"end":13718,"code":"tsr","nodeType":"Identifier","column":0,"line":0,"namePos":13715,"name":"tsr","object":null}}],"tokenPos":13719,"token":42,"rhs":[{"children":[],"start":13721,"end":13795,"code":"(n.path == \"/\" \u0026\u0026 n.handlers != nil) || (n.path == \"\" \u0026\u0026 n.indices == \"/\")","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":13721,"end":13757,"code":"(n.path == \"/\" \u0026\u0026 n.handlers != nil)","nodeType":"ParenthesizedExpression","column":0,"line":0,"lparen":13721,"expression":{"children":[],"start":13722,"end":13756,"code":"n.path == \"/\" \u0026\u0026 n.handlers != nil","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":13722,"end":13735,"code":"n.path == \"/\"","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":13722,"end":13728,"code":"n.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":13722,"end":13723,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":13722,"name":"n","object":null},"sel":{"children":[],"start":13724,"end":13728,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":13724,"name":"path","object":null}},"opPos":13729,"op":39,"rightExpression":{"children":[],"start":13732,"end":13735,"code":"\"/\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":13732,"kind":9,"value":"\"/\""}},"opPos":13736,"op":34,"rightExpression":{"children":[],"start":13739,"end":13756,"code":"n.handlers != nil","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":13739,"end":13749,"code":"n.handlers","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":13739,"end":13740,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":13739,"name":"n","object":null},"sel":{"children":[],"start":13741,"end":13749,"code":"handlers","nodeType":"Identifier","column":0,"line":0,"namePos":13741,"name":"handlers","object":null}},"opPos":13750,"op":44,"rightExpression":{"children":[],"start":13753,"end":13756,"code":"nil","nodeType":"Identifier","column":0,"line":0,"namePos":13753,"name":"nil","object":null}}},"rparen":13756},"opPos":13758,"op":35,"rightExpression":{"children":[],"start":13761,"end":13795,"code":"(n.path == \"\" \u0026\u0026 n.indices == \"/\")","nodeType":"ParenthesizedExpression","column":0,"line":0,"lparen":13761,"expression":{"children":[],"start":13762,"end":13794,"code":"n.path == \"\" \u0026\u0026 n.indices == \"/\"","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":13762,"end":13774,"code":"n.path == \"\"","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":13762,"end":13768,"code":"n.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":13762,"end":13763,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":13762,"name":"n","object":null},"sel":{"children":[],"start":13764,"end":13768,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":13764,"name":"path","object":null}},"opPos":13769,"op":39,"rightExpression":{"children":[],"start":13772,"end":13774,"code":"\"\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":13772,"kind":9,"value":"\"\""}},"opPos":13775,"op":34,"rightExpression":{"children":[],"start":13778,"end":13794,"code":"n.indices == \"/\"","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":13778,"end":13787,"code":"n.indices","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":13778,"end":13779,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":13778,"name":"n","object":null},"sel":{"children":[],"start":13780,"end":13787,"code":"indices","nodeType":"Identifier","column":0,"line":0,"namePos":13780,"name":"indices","object":null}},"opPos":13788,"op":39,"rightExpression":{"children":[],"start":13791,"end":13794,"code":"\"/\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":13791,"kind":9,"value":"\"/\""}}},"rparen":13794}}]}],"rbrace":13801},"else":null},{"children":[],"start":13808,"end":13814,"code":"return","nodeType":"ReturnStatement","column":0,"line":0,"return":13808,"results":[]}]},{"children":[],"start":13820,"end":14604,"code":"case catchAll:\n\tif params != nil {\n\t\tif cap(*params) \u003c int(globalParamsCount) {\n\t\t\tnewParams := make(Params, len(*params), globalParamsCount)\n\t\t\tcopy(newParams, *params)\n\t\t\t*params = newParams\n\t\t}\n\t\tif value.params == nil {\n\t\t\tvalue.params = params\n\t\t}\n\t\ti := len(*value.params)\n\t\t*value.params = (*value.params)[:i+1]\n\t\tval := path\n\t\tif unescape {\n\t\t\tif v, err := url.QueryUnescape(path); err == nil {\n\t\t\t\tval = v\n\t\t\t}\n\t\t}\n\t\t(*value.params)[i] = Param{Key: n.path[2:], Value: val}\n\t}\n\tvalue.handlers = n.handlers\n\tvalue.fullPath = n.fullPath\n\treturn","nodeType":"CaseClause","column":0,"line":0,"case":13820,"list":[{"children":[],"start":13825,"end":13833,"code":"catchAll","nodeType":"Identifier","column":0,"line":0,"namePos":13825,"name":"catchAll","object":null}],"colon":13833,"body":[{"children":[],"start":13865,"end":14525,"code":"if params != nil {\n\tif cap(*params) \u003c int(globalParamsCount) {\n\t\tnewParams := make(Params, len(*params), globalParamsCount)\n\t\tcopy(newParams, *params)\n\t\t*params = newParams\n\t}\n\tif value.params == nil {\n\t\tvalue.params = params\n\t}\n\ti := len(*value.params)\n\t*value.params = (*value.params)[:i+1]\n\tval := path\n\tif unescape {\n\t\tif v, err := url.QueryUnescape(path); err == nil {\n\t\t\tval = v\n\t\t}\n\t}\n\t(*value.params)[i] = Param{Key: n.path[2:], Value: val}\n}","nodeType":"IfStatement","column":0,"line":0,"if":13865,"initialization":null,"condition":{"children":[],"start":13868,"end":13881,"code":"params != nil","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":13868,"end":13874,"code":"params","nodeType":"Identifier","column":0,"line":0,"namePos":13868,"name":"params","object":null},"opPos":13875,"op":44,"rightExpression":{"children":[],"start":13878,"end":13881,"code":"nil","nodeType":"Identifier","column":0,"line":0,"namePos":13878,"name":"nil","object":null}},"body":{"children":[],"start":13882,"end":14525,"code":"{\n\tif cap(*params) \u003c int(globalParamsCount) {\n\t\tnewParams := make(Params, len(*params), globalParamsCount)\n\t\tcopy(newParams, *params)\n\t\t*params = newParams\n\t}\n\tif value.params == nil {\n\t\tvalue.params = params\n\t}\n\ti := len(*value.params)\n\t*value.params = (*value.params)[:i+1]\n\tval := path\n\tif unescape {\n\t\tif v, err := url.QueryUnescape(path); err == nil {\n\t\t\tval = v\n\t\t}\n\t}\n\t(*value.params)[i] = Param{Key: n.path[2:], Value: val}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":13882,"list":[{"children":[],"start":13933,"end":14108,"code":"if cap(*params) \u003c int(globalParamsCount) {\n\tnewParams := make(Params, len(*params), globalParamsCount)\n\tcopy(newParams, *params)\n\t*params = newParams\n}","nodeType":"IfStatement","column":0,"line":0,"if":13933,"initialization":null,"condition":{"children":[],"start":13936,"end":13973,"code":"cap(*params) \u003c int(globalParamsCount)","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":13936,"end":13948,"code":"cap(*params)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":13936,"end":13939,"code":"cap","nodeType":"Identifier","column":0,"line":0,"namePos":13936,"name":"cap","object":null},"lparen":0,"args":[{"children":[],"start":13940,"end":13947,"code":"*params","nodeType":"StarExpression","column":0,"line":0,"star":13940,"expression":{"children":[],"start":13941,"end":13947,"code":"params","nodeType":"Identifier","column":0,"line":0,"namePos":13941,"name":"params","object":null}}],"ellipsis":0,"rparen":0},"opPos":13949,"op":40,"rightExpression":{"children":[],"start":13951,"end":13973,"code":"int(globalParamsCount)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":13951,"end":13954,"code":"int","nodeType":"Identifier","column":0,"line":0,"namePos":13951,"name":"int","object":null},"lparen":0,"args":[{"children":[],"start":13955,"end":13972,"code":"globalParamsCount","nodeType":"Identifier","column":0,"line":0,"namePos":13955,"name":"globalParamsCount","object":null}],"ellipsis":0,"rparen":0}},"body":{"children":[],"start":13974,"end":14108,"code":"{\n\tnewParams := make(Params, len(*params), globalParamsCount)\n\tcopy(newParams, *params)\n\t*params = newParams\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":13974,"list":[{"children":[],"start":13983,"end":14041,"code":"newParams := make(Params, len(*params), globalParamsCount)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":13983,"end":13992,"code":"newParams","nodeType":"Identifier","column":0,"line":0,"namePos":13983,"name":"newParams","object":null}],"tokenPos":13993,"token":47,"rhs":[{"children":[],"start":13996,"end":14041,"code":"make(Params, len(*params), globalParamsCount)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":13996,"end":14000,"code":"make","nodeType":"Identifier","column":0,"line":0,"namePos":13996,"name":"make","object":null},"lparen":0,"args":[{"children":[],"start":14001,"end":14007,"code":"Params","nodeType":"Identifier","column":0,"line":0,"namePos":14001,"name":"Params","object":null},{"children":[],"start":14009,"end":14021,"code":"len(*params)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":14009,"end":14012,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":14009,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":14013,"end":14020,"code":"*params","nodeType":"StarExpression","column":0,"line":0,"star":14013,"expression":{"children":[],"start":14014,"end":14020,"code":"params","nodeType":"Identifier","column":0,"line":0,"namePos":14014,"name":"params","object":null}}],"ellipsis":0,"rparen":0},{"children":[],"start":14023,"end":14040,"code":"globalParamsCount","nodeType":"Identifier","column":0,"line":0,"namePos":14023,"name":"globalParamsCount","object":null}],"ellipsis":0,"rparen":0}]},{"children":[],"start":14049,"end":14073,"code":"copy(newParams, *params)","nodeType":"ExpressionStatement","column":0,"line":0,"Expression":{"children":[],"start":14049,"end":14073,"code":"copy(newParams, *params)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":14049,"end":14053,"code":"copy","nodeType":"Identifier","column":0,"line":0,"namePos":14049,"name":"copy","object":null},"lparen":0,"args":[{"children":[],"start":14054,"end":14063,"code":"newParams","nodeType":"Identifier","column":0,"line":0,"namePos":14054,"name":"newParams","object":null},{"children":[],"start":14065,"end":14072,"code":"*params","nodeType":"StarExpression","column":0,"line":0,"star":14065,"expression":{"children":[],"start":14066,"end":14072,"code":"params","nodeType":"Identifier","column":0,"line":0,"namePos":14066,"name":"params","object":null}}],"ellipsis":0,"rparen":0}},{"children":[],"start":14081,"end":14100,"code":"*params = newParams","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":14081,"end":14088,"code":"*params","nodeType":"StarExpression","column":0,"line":0,"star":14081,"expression":{"children":[],"start":14082,"end":14088,"code":"params","nodeType":"Identifier","column":0,"line":0,"namePos":14082,"name":"params","object":null}}],"tokenPos":14089,"token":42,"rhs":[{"children":[],"start":14091,"end":14100,"code":"newParams","nodeType":"Identifier","column":0,"line":0,"namePos":14091,"name":"newParams","object":null}]}],"rbrace":14107},"else":null},{"children":[],"start":14116,"end":14177,"code":"if value.params == nil {\n\tvalue.params = params\n}","nodeType":"IfStatement","column":0,"line":0,"if":14116,"initialization":null,"condition":{"children":[],"start":14119,"end":14138,"code":"value.params == nil","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":14119,"end":14131,"code":"value.params","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":14119,"end":14124,"code":"value","nodeType":"Identifier","column":0,"line":0,"namePos":14119,"name":"value","object":null},"sel":{"children":[],"start":14125,"end":14131,"code":"params","nodeType":"Identifier","column":0,"line":0,"namePos":14125,"name":"params","object":null}},"opPos":14132,"op":39,"rightExpression":{"children":[],"start":14135,"end":14138,"code":"nil","nodeType":"Identifier","column":0,"line":0,"namePos":14135,"name":"nil","object":null}},"body":{"children":[],"start":14139,"end":14177,"code":"{\n\tvalue.params = params\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":14139,"list":[{"children":[],"start":14148,"end":14169,"code":"value.params = params","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":14148,"end":14160,"code":"value.params","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":14148,"end":14153,"code":"value","nodeType":"Identifier","column":0,"line":0,"namePos":14148,"name":"value","object":null},"sel":{"children":[],"start":14154,"end":14160,"code":"params","nodeType":"Identifier","column":0,"line":0,"namePos":14154,"name":"params","object":null}}],"tokenPos":14161,"token":42,"rhs":[{"children":[],"start":14163,"end":14169,"code":"params","nodeType":"Identifier","column":0,"line":0,"namePos":14163,"name":"params","object":null}]}],"rbrace":14176},"else":null},{"children":[],"start":14235,"end":14258,"code":"i := len(*value.params)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":14235,"end":14236,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":14235,"name":"i","object":null}],"tokenPos":14237,"token":47,"rhs":[{"children":[],"start":14240,"end":14258,"code":"len(*value.params)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":14240,"end":14243,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":14240,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":14244,"end":14257,"code":"*value.params","nodeType":"StarExpression","column":0,"line":0,"star":14244,"expression":{"children":[],"start":14245,"end":14257,"code":"value.params","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":14245,"end":14250,"code":"value","nodeType":"Identifier","column":0,"line":0,"namePos":14245,"name":"value","object":null},"sel":{"children":[],"start":14251,"end":14257,"code":"params","nodeType":"Identifier","column":0,"line":0,"namePos":14251,"name":"params","object":null}}}],"ellipsis":0,"rparen":0}]},{"children":[],"start":14265,"end":14302,"code":"*value.params = (*value.params)[:i+1]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":14265,"end":14278,"code":"*value.params","nodeType":"StarExpression","column":0,"line":0,"star":14265,"expression":{"children":[],"start":14266,"end":14278,"code":"value.params","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":14266,"end":14271,"code":"value","nodeType":"Identifier","column":0,"line":0,"namePos":14266,"name":"value","object":null},"sel":{"children":[],"start":14272,"end":14278,"code":"params","nodeType":"Identifier","column":0,"line":0,"namePos":14272,"name":"params","object":null}}}],"tokenPos":14279,"token":42,"rhs":[{"children":[],"start":14281,"end":14302,"code":"(*value.params)[:i+1]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":14281,"end":14296,"code":"(*value.params)","nodeType":"ParenthesizedExpression","column":0,"line":0,"lparen":14281,"expression":{"children":[],"start":14282,"end":14295,"code":"*value.params","nodeType":"StarExpression","column":0,"line":0,"star":14282,"expression":{"children":[],"start":14283,"end":14295,"code":"value.params","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":14283,"end":14288,"code":"value","nodeType":"Identifier","column":0,"line":0,"namePos":14283,"name":"value","object":null},"sel":{"children":[],"start":14289,"end":14295,"code":"params","nodeType":"Identifier","column":0,"line":0,"namePos":14289,"name":"params","object":null}}},"rparen":14295},"leftBracket":14296,"low":null,"high":{"children":[],"start":14298,"end":14301,"code":"i + 1","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":14298,"end":14299,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":14298,"name":"i","object":null},"opPos":14299,"op":12,"rightExpression":{"children":[],"start":14300,"end":14301,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":14300,"kind":5,"value":"1"}},"max":null,"slice3":false,"rightBracket":14301}]},{"children":[],"start":14309,"end":14320,"code":"val := path","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":14309,"end":14312,"code":"val","nodeType":"Identifier","column":0,"line":0,"namePos":14309,"name":"val","object":null}],"tokenPos":14313,"token":47,"rhs":[{"children":[],"start":14316,"end":14320,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":14316,"name":"path","object":null}]},{"children":[],"start":14327,"end":14431,"code":"if unescape {\n\tif v, err := url.QueryUnescape(path); err == nil {\n\t\tval = v\n\t}\n}","nodeType":"IfStatement","column":0,"line":0,"if":14327,"initialization":null,"condition":{"children":[],"start":14330,"end":14338,"code":"unescape","nodeType":"Identifier","column":0,"line":0,"namePos":14330,"name":"unescape","object":null},"body":{"children":[],"start":14339,"end":14431,"code":"{\n\tif v, err := url.QueryUnescape(path); err == nil {\n\t\tval = v\n\t}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":14339,"list":[{"children":[],"start":14348,"end":14423,"code":"if v, err := url.QueryUnescape(path); err == nil {\n\tval = v\n}","nodeType":"IfStatement","column":0,"line":0,"if":14348,"initialization":{"children":[],"start":14351,"end":14384,"code":"v, err := url.QueryUnescape(path)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":14351,"end":14352,"code":"v","nodeType":"Identifier","column":0,"line":0,"namePos":14351,"name":"v","object":null},{"children":[],"start":14354,"end":14357,"code":"err","nodeType":"Identifier","column":0,"line":0,"namePos":14354,"name":"err","object":null}],"tokenPos":14358,"token":47,"rhs":[{"children":[],"start":14361,"end":14384,"code":"url.QueryUnescape(path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":14361,"end":14378,"code":"url.QueryUnescape","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":14361,"end":14364,"code":"url","nodeType":"Identifier","column":0,"line":0,"namePos":14361,"name":"url","object":null},"sel":{"children":[],"start":14365,"end":14378,"code":"QueryUnescape","nodeType":"Identifier","column":0,"line":0,"namePos":14365,"name":"QueryUnescape","object":null}},"lparen":0,"args":[{"children":[],"start":14379,"end":14383,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":14379,"name":"path","object":null}],"ellipsis":0,"rparen":0}]},"condition":{"children":[],"start":14386,"end":14396,"code":"err == nil","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":14386,"end":14389,"code":"err","nodeType":"Identifier","column":0,"line":0,"namePos":14386,"name":"err","object":null},"opPos":14390,"op":39,"rightExpression":{"children":[],"start":14393,"end":14396,"code":"nil","nodeType":"Identifier","column":0,"line":0,"namePos":14393,"name":"nil","object":null}},"body":{"children":[],"start":14397,"end":14423,"code":"{\n\tval = v\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":14397,"list":[{"children":[],"start":14407,"end":14414,"code":"val = v","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":14407,"end":14410,"code":"val","nodeType":"Identifier","column":0,"line":0,"namePos":14407,"name":"val","object":null}],"tokenPos":14411,"token":42,"rhs":[{"children":[],"start":14413,"end":14414,"code":"v","nodeType":"Identifier","column":0,"line":0,"namePos":14413,"name":"v","object":null}]}],"rbrace":14422},"else":null}],"rbrace":14430},"else":null},{"children":[],"start":14438,"end":14518,"code":"(*value.params)[i] = Param{Key: n.path[2:], Value: val}","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":14438,"end":14456,"code":"(*value.params)[i]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":14438,"end":14453,"code":"(*value.params)","nodeType":"ParenthesizedExpression","column":0,"line":0,"lparen":14438,"expression":{"children":[],"start":14439,"end":14452,"code":"*value.params","nodeType":"StarExpression","column":0,"line":0,"star":14439,"expression":{"children":[],"start":14440,"end":14452,"code":"value.params","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":14440,"end":14445,"code":"value","nodeType":"Identifier","column":0,"line":0,"namePos":14440,"name":"value","object":null},"sel":{"children":[],"start":14446,"end":14452,"code":"params","nodeType":"Identifier","column":0,"line":0,"namePos":14446,"name":"params","object":null}}},"rparen":14452},"leftBracket":14453,"index":{"children":[],"start":14454,"end":14455,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":14454,"name":"i","object":null},"rightBracket":14455}],"tokenPos":14457,"token":42,"rhs":[{"children":[],"start":14459,"end":14518,"code":"Param{Key: n.path[2:], Value: val}","nodeType":"CompositeLiteral","column":0,"line":0,"type":{"children":[],"start":14459,"end":14464,"code":"Param","nodeType":"Identifier","column":0,"line":0,"namePos":14459,"name":"Param","object":null},"lbrace":14464,"elements":[{"children":[],"start":14473,"end":14490,"code":"Key: n.path[2:]","nodeType":"KeyValueExpression","column":0,"line":0,"key":{"children":[],"start":14473,"end":14476,"code":"Key","nodeType":"Identifier","column":0,"line":0,"namePos":14473,"name":"Key","object":null},"colon":0,"value":{"children":[],"start":14480,"end":14490,"code":"n.path[2:]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":14480,"end":14486,"code":"n.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":14480,"end":14481,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":14480,"name":"n","object":null},"sel":{"children":[],"start":14482,"end":14486,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":14482,"name":"path","object":null}},"leftBracket":14486,"low":{"children":[],"start":14487,"end":14488,"code":"2","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":14487,"kind":5,"value":"2"},"high":null,"max":null,"slice3":false,"rightBracket":14489}},{"children":[],"start":14499,"end":14509,"code":"Value: val","nodeType":"KeyValueExpression","column":0,"line":0,"key":{"children":[],"start":14499,"end":14504,"code":"Value","nodeType":"Identifier","column":0,"line":0,"namePos":14499,"name":"Value","object":null},"colon":0,"value":{"children":[],"start":14506,"end":14509,"code":"val","nodeType":"Identifier","column":0,"line":0,"namePos":14506,"name":"val","object":null}}],"rbrace":14517,"incomplete":false}]}],"rbrace":14524},"else":null},{"children":[],"start":14532,"end":14559,"code":"value.handlers = n.handlers","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":14532,"end":14546,"code":"value.handlers","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":14532,"end":14537,"code":"value","nodeType":"Identifier","column":0,"line":0,"namePos":14532,"name":"value","object":null},"sel":{"children":[],"start":14538,"end":14546,"code":"handlers","nodeType":"Identifier","column":0,"line":0,"namePos":14538,"name":"handlers","object":null}}],"tokenPos":14547,"token":42,"rhs":[{"children":[],"start":14549,"end":14559,"code":"n.handlers","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":14549,"end":14550,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":14549,"name":"n","object":null},"sel":{"children":[],"start":14551,"end":14559,"code":"handlers","nodeType":"Identifier","column":0,"line":0,"namePos":14551,"name":"handlers","object":null}}]},{"children":[],"start":14565,"end":14592,"code":"value.fullPath = n.fullPath","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":14565,"end":14579,"code":"value.fullPath","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":14565,"end":14570,"code":"value","nodeType":"Identifier","column":0,"line":0,"namePos":14565,"name":"value","object":null},"sel":{"children":[],"start":14571,"end":14579,"code":"fullPath","nodeType":"Identifier","column":0,"line":0,"namePos":14571,"name":"fullPath","object":null}}],"tokenPos":14580,"token":42,"rhs":[{"children":[],"start":14582,"end":14592,"code":"n.fullPath","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":14582,"end":14583,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":14582,"name":"n","object":null},"sel":{"children":[],"start":14584,"end":14592,"code":"fullPath","nodeType":"Identifier","column":0,"line":0,"namePos":14584,"name":"fullPath","object":null}}]},{"children":[],"start":14598,"end":14604,"code":"return","nodeType":"ReturnStatement","column":0,"line":0,"return":14598,"results":[]}]},{"children":[],"start":14610,"end":14650,"code":"default:\n\tpanic(\"invalid node type\")","nodeType":"CaseClause","column":0,"line":0,"case":14610,"list":[],"colon":14617,"body":[{"children":[],"start":14624,"end":14650,"code":"panic(\"invalid node type\")","nodeType":"ExpressionStatement","column":0,"line":0,"Expression":{"children":[],"start":14624,"end":14650,"code":"panic(\"invalid node type\")","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":14624,"end":14629,"code":"panic","nodeType":"Identifier","column":0,"line":0,"namePos":14624,"name":"panic","object":null},"lparen":0,"args":[{"children":[],"start":14630,"end":14649,"code":"\"invalid node type\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":14630,"kind":9,"value":"\"invalid node type\""}],"ellipsis":0,"rparen":0}}]}],"rbrace":14655}}],"rbrace":14660},"else":null}],"rbrace":14664},"else":null},{"children":[],"start":14669,"end":16372,"code":"if path == prefix {\n\tif n.handlers == nil \u0026\u0026 path != \"/\" {\n\t\tfor length := len(*skippedNodes); length \u003e 0; length-- {\n\t\t\tskippedNode := (*skippedNodes)[length-1]\n\t\t\t*skippedNodes = (*skippedNodes)[:length-1]\n\t\t\tif strings.HasSuffix(skippedNode.path, path) {\n\t\t\t\tpath = skippedNode.path\n\t\t\t\tn = skippedNode.node\n\t\t\t\tif value.params != nil {\n\t\t\t\t\t*value.params = (*value.params)[:skippedNode.paramsCount]\n\t\t\t\t}\n\t\t\t\tglobalParamsCount = skippedNode.paramsCount\n\t\t\t\tcontinue walk\n\t\t\t}\n\t\t}\n\t}\n\tif value.handlers = n.handlers; value.handlers != nil {\n\t\tvalue.fullPath = n.fullPath\n\t\treturn\n\t}\n\tif path == \"/\" \u0026\u0026 n.wildChild \u0026\u0026 n.nType != root {\n\t\tvalue.tsr = true\n\t\treturn\n\t}\n\tif path == \"/\" \u0026\u0026 n.nType == static {\n\t\tvalue.tsr = true\n\t\treturn\n\t}\n\tfor i, c := range []byte(n.indices) {\n\t\tif c == '/' {\n\t\t\tn = n.children[i]\n\t\t\tvalue.tsr = (len(n.path) == 1 \u0026\u0026 n.handlers != nil) || (n.nType == catchAll \u0026\u0026 n.children[0].handlers != nil)\n\t\t\treturn\n\t\t}\n\t}\n\treturn\n}","nodeType":"IfStatement","column":0,"line":0,"if":14669,"initialization":null,"condition":{"children":[],"start":14672,"end":14686,"code":"path == prefix","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":14672,"end":14676,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":14672,"name":"path","object":null},"opPos":14677,"op":39,"rightExpression":{"children":[],"start":14680,"end":14686,"code":"prefix","nodeType":"Identifier","column":0,"line":0,"namePos":14680,"name":"prefix","object":null}},"body":{"children":[],"start":14687,"end":16372,"code":"{\n\tif n.handlers == nil \u0026\u0026 path != \"/\" {\n\t\tfor length := len(*skippedNodes); length \u003e 0; length-- {\n\t\t\tskippedNode := (*skippedNodes)[length-1]\n\t\t\t*skippedNodes = (*skippedNodes)[:length-1]\n\t\t\tif strings.HasSuffix(skippedNode.path, path) {\n\t\t\t\tpath = skippedNode.path\n\t\t\t\tn = skippedNode.node\n\t\t\t\tif value.params != nil {\n\t\t\t\t\t*value.params = (*value.params)[:skippedNode.paramsCount]\n\t\t\t\t}\n\t\t\t\tglobalParamsCount = skippedNode.paramsCount\n\t\t\t\tcontinue walk\n\t\t\t}\n\t\t}\n\t}\n\tif value.handlers = n.handlers; value.handlers != nil {\n\t\tvalue.fullPath = n.fullPath\n\t\treturn\n\t}\n\tif path == \"/\" \u0026\u0026 n.wildChild \u0026\u0026 n.nType != root {\n\t\tvalue.tsr = true\n\t\treturn\n\t}\n\tif path == \"/\" \u0026\u0026 n.nType == static {\n\t\tvalue.tsr = true\n\t\treturn\n\t}\n\tfor i, c := range []byte(n.indices) {\n\t\tif c == '/' {\n\t\t\tn = n.children[i]\n\t\t\tvalue.tsr = (len(n.path) == 1 \u0026\u0026 n.handlers != nil) || (n.nType == catchAll \u0026\u0026 n.children[0].handlers != nil)\n\t\t\treturn\n\t\t}\n\t}\n\treturn\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":14687,"list":[{"children":[],"start":14904,"end":15456,"code":"if n.handlers == nil \u0026\u0026 path != \"/\" {\n\tfor length := len(*skippedNodes); length \u003e 0; length-- {\n\t\tskippedNode := (*skippedNodes)[length-1]\n\t\t*skippedNodes = (*skippedNodes)[:length-1]\n\t\tif strings.HasSuffix(skippedNode.path, path) {\n\t\t\tpath = skippedNode.path\n\t\t\tn = skippedNode.node\n\t\t\tif value.params != nil {\n\t\t\t\t*value.params = (*value.params)[:skippedNode.paramsCount]\n\t\t\t}\n\t\t\tglobalParamsCount = skippedNode.paramsCount\n\t\t\tcontinue walk\n\t\t}\n\t}\n}","nodeType":"IfStatement","column":0,"line":0,"if":14904,"initialization":null,"condition":{"children":[],"start":14907,"end":14939,"code":"n.handlers == nil \u0026\u0026 path != \"/\"","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":14907,"end":14924,"code":"n.handlers == nil","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":14907,"end":14917,"code":"n.handlers","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":14907,"end":14908,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":14907,"name":"n","object":null},"sel":{"children":[],"start":14909,"end":14917,"code":"handlers","nodeType":"Identifier","column":0,"line":0,"namePos":14909,"name":"handlers","object":null}},"opPos":14918,"op":39,"rightExpression":{"children":[],"start":14921,"end":14924,"code":"nil","nodeType":"Identifier","column":0,"line":0,"namePos":14921,"name":"nil","object":null}},"opPos":14925,"op":34,"rightExpression":{"children":[],"start":14928,"end":14939,"code":"path != \"/\"","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":14928,"end":14932,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":14928,"name":"path","object":null},"opPos":14933,"op":44,"rightExpression":{"children":[],"start":14936,"end":14939,"code":"\"/\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":14936,"kind":9,"value":"\"/\""}}},"body":{"children":[],"start":14940,"end":15456,"code":"{\n\tfor length := len(*skippedNodes); length \u003e 0; length-- {\n\t\tskippedNode := (*skippedNodes)[length-1]\n\t\t*skippedNodes = (*skippedNodes)[:length-1]\n\t\tif strings.HasSuffix(skippedNode.path, path) {\n\t\t\tpath = skippedNode.path\n\t\t\tn = skippedNode.node\n\t\t\tif value.params != nil {\n\t\t\t\t*value.params = (*value.params)[:skippedNode.paramsCount]\n\t\t\t}\n\t\t\tglobalParamsCount = skippedNode.paramsCount\n\t\t\tcontinue walk\n\t\t}\n\t}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":14940,"list":[{"children":[],"start":14946,"end":15392,"code":"for length := len(*skippedNodes); length \u003e 0; length-- {\n\tskippedNode := (*skippedNodes)[length-1]\n\t*skippedNodes = (*skippedNodes)[:length-1]\n\tif strings.HasSuffix(skippedNode.path, path) {\n\t\tpath = skippedNode.path\n\t\tn = skippedNode.node\n\t\tif value.params != nil {\n\t\t\t*value.params = (*value.params)[:skippedNode.paramsCount]\n\t\t}\n\t\tglobalParamsCount = skippedNode.paramsCount\n\t\tcontinue walk\n\t}\n}","nodeType":"ForStatement","column":0,"line":0,"for":14946,"initialization":{"children":[],"start":14950,"end":14978,"code":"length := len(*skippedNodes)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":14950,"end":14956,"code":"length","nodeType":"Identifier","column":0,"line":0,"namePos":14950,"name":"length","object":null}],"tokenPos":14957,"token":47,"rhs":[{"children":[],"start":14960,"end":14978,"code":"len(*skippedNodes)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":14960,"end":14963,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":14960,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":14964,"end":14977,"code":"*skippedNodes","nodeType":"StarExpression","column":0,"line":0,"star":14964,"expression":{"children":[],"start":14965,"end":14977,"code":"skippedNodes","nodeType":"Identifier","column":0,"line":0,"namePos":14965,"name":"skippedNodes","object":null}}],"ellipsis":0,"rparen":0}]},"condition":{"children":[],"start":14980,"end":14990,"code":"length \u003e 0","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":14980,"end":14986,"code":"length","nodeType":"Identifier","column":0,"line":0,"namePos":14980,"name":"length","object":null},"opPos":14987,"op":41,"rightExpression":{"children":[],"start":14989,"end":14990,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":14989,"kind":5,"value":"0"}},"post":{"children":[],"start":14992,"end":15000,"code":"length--","nodeType":"IncrementDecrementStatement","column":0,"line":0,"Expression":{"children":[],"start":14992,"end":14998,"code":"length","nodeType":"Identifier","column":0,"line":0,"namePos":14992,"name":"length","object":null},"TokenPosition":14998,"Token":38},"body":{"children":[],"start":15001,"end":15392,"code":"{\n\tskippedNode := (*skippedNodes)[length-1]\n\t*skippedNodes = (*skippedNodes)[:length-1]\n\tif strings.HasSuffix(skippedNode.path, path) {\n\t\tpath = skippedNode.path\n\t\tn = skippedNode.node\n\t\tif value.params != nil {\n\t\t\t*value.params = (*value.params)[:skippedNode.paramsCount]\n\t\t}\n\t\tglobalParamsCount = skippedNode.paramsCount\n\t\tcontinue walk\n\t}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":15001,"list":[{"children":[],"start":15008,"end":15048,"code":"skippedNode := (*skippedNodes)[length-1]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":15008,"end":15019,"code":"skippedNode","nodeType":"Identifier","column":0,"line":0,"namePos":15008,"name":"skippedNode","object":null}],"tokenPos":15020,"token":47,"rhs":[{"children":[],"start":15023,"end":15048,"code":"(*skippedNodes)[length-1]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":15023,"end":15038,"code":"(*skippedNodes)","nodeType":"ParenthesizedExpression","column":0,"line":0,"lparen":15023,"expression":{"children":[],"start":15024,"end":15037,"code":"*skippedNodes","nodeType":"StarExpression","column":0,"line":0,"star":15024,"expression":{"children":[],"start":15025,"end":15037,"code":"skippedNodes","nodeType":"Identifier","column":0,"line":0,"namePos":15025,"name":"skippedNodes","object":null}},"rparen":15037},"leftBracket":15038,"index":{"children":[],"start":15039,"end":15047,"code":"length - 1","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":15039,"end":15045,"code":"length","nodeType":"Identifier","column":0,"line":0,"namePos":15039,"name":"length","object":null},"opPos":15045,"op":13,"rightExpression":{"children":[],"start":15046,"end":15047,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":15046,"kind":5,"value":"1"}},"rightBracket":15047}]},{"children":[],"start":15054,"end":15096,"code":"*skippedNodes = (*skippedNodes)[:length-1]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":15054,"end":15067,"code":"*skippedNodes","nodeType":"StarExpression","column":0,"line":0,"star":15054,"expression":{"children":[],"start":15055,"end":15067,"code":"skippedNodes","nodeType":"Identifier","column":0,"line":0,"namePos":15055,"name":"skippedNodes","object":null}}],"tokenPos":15068,"token":42,"rhs":[{"children":[],"start":15070,"end":15096,"code":"(*skippedNodes)[:length-1]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":15070,"end":15085,"code":"(*skippedNodes)","nodeType":"ParenthesizedExpression","column":0,"line":0,"lparen":15070,"expression":{"children":[],"start":15071,"end":15084,"code":"*skippedNodes","nodeType":"StarExpression","column":0,"line":0,"star":15071,"expression":{"children":[],"start":15072,"end":15084,"code":"skippedNodes","nodeType":"Identifier","column":0,"line":0,"namePos":15072,"name":"skippedNodes","object":null}},"rparen":15084},"leftBracket":15085,"low":null,"high":{"children":[],"start":15087,"end":15095,"code":"length - 1","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":15087,"end":15093,"code":"length","nodeType":"Identifier","column":0,"line":0,"namePos":15087,"name":"length","object":null},"opPos":15093,"op":13,"rightExpression":{"children":[],"start":15094,"end":15095,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":15094,"kind":5,"value":"1"}},"max":null,"slice3":false,"rightBracket":15095}]},{"children":[],"start":15102,"end":15386,"code":"if strings.HasSuffix(skippedNode.path, path) {\n\tpath = skippedNode.path\n\tn = skippedNode.node\n\tif value.params != nil {\n\t\t*value.params = (*value.params)[:skippedNode.paramsCount]\n\t}\n\tglobalParamsCount = skippedNode.paramsCount\n\tcontinue walk\n}","nodeType":"IfStatement","column":0,"line":0,"if":15102,"initialization":null,"condition":{"children":[],"start":15105,"end":15146,"code":"strings.HasSuffix(skippedNode.path, path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":15105,"end":15122,"code":"strings.HasSuffix","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":15105,"end":15112,"code":"strings","nodeType":"Identifier","column":0,"line":0,"namePos":15105,"name":"strings","object":null},"sel":{"children":[],"start":15113,"end":15122,"code":"HasSuffix","nodeType":"Identifier","column":0,"line":0,"namePos":15113,"name":"HasSuffix","object":null}},"lparen":0,"args":[{"children":[],"start":15123,"end":15139,"code":"skippedNode.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":15123,"end":15134,"code":"skippedNode","nodeType":"Identifier","column":0,"line":0,"namePos":15123,"name":"skippedNode","object":null},"sel":{"children":[],"start":15135,"end":15139,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":15135,"name":"path","object":null}},{"children":[],"start":15141,"end":15145,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":15141,"name":"path","object":null}],"ellipsis":0,"rparen":0},"body":{"children":[],"start":15147,"end":15386,"code":"{\n\tpath = skippedNode.path\n\tn = skippedNode.node\n\tif value.params != nil {\n\t\t*value.params = (*value.params)[:skippedNode.paramsCount]\n\t}\n\tglobalParamsCount = skippedNode.paramsCount\n\tcontinue walk\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":15147,"list":[{"children":[],"start":15155,"end":15178,"code":"path = skippedNode.path","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":15155,"end":15159,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":15155,"name":"path","object":null}],"tokenPos":15160,"token":42,"rhs":[{"children":[],"start":15162,"end":15178,"code":"skippedNode.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":15162,"end":15173,"code":"skippedNode","nodeType":"Identifier","column":0,"line":0,"namePos":15162,"name":"skippedNode","object":null},"sel":{"children":[],"start":15174,"end":15178,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":15174,"name":"path","object":null}}]},{"children":[],"start":15185,"end":15205,"code":"n = skippedNode.node","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":15185,"end":15186,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":15185,"name":"n","object":null}],"tokenPos":15187,"token":42,"rhs":[{"children":[],"start":15189,"end":15205,"code":"skippedNode.node","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":15189,"end":15200,"code":"skippedNode","nodeType":"Identifier","column":0,"line":0,"namePos":15189,"name":"skippedNode","object":null},"sel":{"children":[],"start":15201,"end":15205,"code":"node","nodeType":"Identifier","column":0,"line":0,"namePos":15201,"name":"node","object":null}}]},{"children":[],"start":15212,"end":15309,"code":"if value.params != nil {\n\t*value.params = (*value.params)[:skippedNode.paramsCount]\n}","nodeType":"IfStatement","column":0,"line":0,"if":15212,"initialization":null,"condition":{"children":[],"start":15215,"end":15234,"code":"value.params != nil","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":15215,"end":15227,"code":"value.params","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":15215,"end":15220,"code":"value","nodeType":"Identifier","column":0,"line":0,"namePos":15215,"name":"value","object":null},"sel":{"children":[],"start":15221,"end":15227,"code":"params","nodeType":"Identifier","column":0,"line":0,"namePos":15221,"name":"params","object":null}},"opPos":15228,"op":44,"rightExpression":{"children":[],"start":15231,"end":15234,"code":"nil","nodeType":"Identifier","column":0,"line":0,"namePos":15231,"name":"nil","object":null}},"body":{"children":[],"start":15235,"end":15309,"code":"{\n\t*value.params = (*value.params)[:skippedNode.paramsCount]\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":15235,"list":[{"children":[],"start":15244,"end":15301,"code":"*value.params = (*value.params)[:skippedNode.paramsCount]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":15244,"end":15257,"code":"*value.params","nodeType":"StarExpression","column":0,"line":0,"star":15244,"expression":{"children":[],"start":15245,"end":15257,"code":"value.params","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":15245,"end":15250,"code":"value","nodeType":"Identifier","column":0,"line":0,"namePos":15245,"name":"value","object":null},"sel":{"children":[],"start":15251,"end":15257,"code":"params","nodeType":"Identifier","column":0,"line":0,"namePos":15251,"name":"params","object":null}}}],"tokenPos":15258,"token":42,"rhs":[{"children":[],"start":15260,"end":15301,"code":"(*value.params)[:skippedNode.paramsCount]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":15260,"end":15275,"code":"(*value.params)","nodeType":"ParenthesizedExpression","column":0,"line":0,"lparen":15260,"expression":{"children":[],"start":15261,"end":15274,"code":"*value.params","nodeType":"StarExpression","column":0,"line":0,"star":15261,"expression":{"children":[],"start":15262,"end":15274,"code":"value.params","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":15262,"end":15267,"code":"value","nodeType":"Identifier","column":0,"line":0,"namePos":15262,"name":"value","object":null},"sel":{"children":[],"start":15268,"end":15274,"code":"params","nodeType":"Identifier","column":0,"line":0,"namePos":15268,"name":"params","object":null}}},"rparen":15274},"leftBracket":15275,"low":null,"high":{"children":[],"start":15277,"end":15300,"code":"skippedNode.paramsCount","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":15277,"end":15288,"code":"skippedNode","nodeType":"Identifier","column":0,"line":0,"namePos":15277,"name":"skippedNode","object":null},"sel":{"children":[],"start":15289,"end":15300,"code":"paramsCount","nodeType":"Identifier","column":0,"line":0,"namePos":15289,"name":"paramsCount","object":null}},"max":null,"slice3":false,"rightBracket":15300}]}],"rbrace":15308},"else":null},{"children":[],"start":15316,"end":15359,"code":"globalParamsCount = skippedNode.paramsCount","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":15316,"end":15333,"code":"globalParamsCount","nodeType":"Identifier","column":0,"line":0,"namePos":15316,"name":"globalParamsCount","object":null}],"tokenPos":15334,"token":42,"rhs":[{"children":[],"start":15336,"end":15359,"code":"skippedNode.paramsCount","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":15336,"end":15347,"code":"skippedNode","nodeType":"Identifier","column":0,"line":0,"namePos":15336,"name":"skippedNode","object":null},"sel":{"children":[],"start":15348,"end":15359,"code":"paramsCount","nodeType":"Identifier","column":0,"line":0,"namePos":15348,"name":"paramsCount","object":null}}]},{"children":[],"start":15366,"end":15379,"code":"continue walk","nodeType":"BranchStatement","column":0,"line":0,"tokenPosition":15366,"token":65,"label":{"children":[],"start":15375,"end":15379,"code":"walk","nodeType":"Identifier","column":0,"line":0,"namePos":15375,"name":"walk","object":null}}],"rbrace":15385},"else":null}],"rbrace":15391}}],"rbrace":15455},"else":null},{"children":[],"start":15571,"end":15674,"code":"if value.handlers = n.handlers; value.handlers != nil {\n\tvalue.fullPath = n.fullPath\n\treturn\n}","nodeType":"IfStatement","column":0,"line":0,"if":15571,"initialization":{"children":[],"start":15574,"end":15601,"code":"value.handlers = n.handlers","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":15574,"end":15588,"code":"value.handlers","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":15574,"end":15579,"code":"value","nodeType":"Identifier","column":0,"line":0,"namePos":15574,"name":"value","object":null},"sel":{"children":[],"start":15580,"end":15588,"code":"handlers","nodeType":"Identifier","column":0,"line":0,"namePos":15580,"name":"handlers","object":null}}],"tokenPos":15589,"token":42,"rhs":[{"children":[],"start":15591,"end":15601,"code":"n.handlers","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":15591,"end":15592,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":15591,"name":"n","object":null},"sel":{"children":[],"start":15593,"end":15601,"code":"handlers","nodeType":"Identifier","column":0,"line":0,"namePos":15593,"name":"handlers","object":null}}]},"condition":{"children":[],"start":15603,"end":15624,"code":"value.handlers != nil","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":15603,"end":15617,"code":"value.handlers","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":15603,"end":15608,"code":"value","nodeType":"Identifier","column":0,"line":0,"namePos":15603,"name":"value","object":null},"sel":{"children":[],"start":15609,"end":15617,"code":"handlers","nodeType":"Identifier","column":0,"line":0,"namePos":15609,"name":"handlers","object":null}},"opPos":15618,"op":44,"rightExpression":{"children":[],"start":15621,"end":15624,"code":"nil","nodeType":"Identifier","column":0,"line":0,"namePos":15621,"name":"nil","object":null}},"body":{"children":[],"start":15625,"end":15674,"code":"{\n\tvalue.fullPath = n.fullPath\n\treturn\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":15625,"list":[{"children":[],"start":15631,"end":15658,"code":"value.fullPath = n.fullPath","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":15631,"end":15645,"code":"value.fullPath","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":15631,"end":15636,"code":"value","nodeType":"Identifier","column":0,"line":0,"namePos":15631,"name":"value","object":null},"sel":{"children":[],"start":15637,"end":15645,"code":"fullPath","nodeType":"Identifier","column":0,"line":0,"namePos":15637,"name":"fullPath","object":null}}],"tokenPos":15646,"token":42,"rhs":[{"children":[],"start":15648,"end":15658,"code":"n.fullPath","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":15648,"end":15649,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":15648,"name":"n","object":null},"sel":{"children":[],"start":15650,"end":15658,"code":"fullPath","nodeType":"Identifier","column":0,"line":0,"namePos":15650,"name":"fullPath","object":null}}]},{"children":[],"start":15663,"end":15669,"code":"return","nodeType":"ReturnStatement","column":0,"line":0,"return":15663,"results":[]}],"rbrace":15673},"else":null},{"children":[],"start":15843,"end":15930,"code":"if path == \"/\" \u0026\u0026 n.wildChild \u0026\u0026 n.nType != root {\n\tvalue.tsr = true\n\treturn\n}","nodeType":"IfStatement","column":0,"line":0,"if":15843,"initialization":null,"condition":{"children":[],"start":15846,"end":15891,"code":"path == \"/\" \u0026\u0026 n.wildChild \u0026\u0026 n.nType != root","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":15846,"end":15872,"code":"path == \"/\" \u0026\u0026 n.wildChild","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":15846,"end":15857,"code":"path == \"/\"","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":15846,"end":15850,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":15846,"name":"path","object":null},"opPos":15851,"op":39,"rightExpression":{"children":[],"start":15854,"end":15857,"code":"\"/\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":15854,"kind":9,"value":"\"/\""}},"opPos":15858,"op":34,"rightExpression":{"children":[],"start":15861,"end":15872,"code":"n.wildChild","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":15861,"end":15862,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":15861,"name":"n","object":null},"sel":{"children":[],"start":15863,"end":15872,"code":"wildChild","nodeType":"Identifier","column":0,"line":0,"namePos":15863,"name":"wildChild","object":null}}},"opPos":15873,"op":34,"rightExpression":{"children":[],"start":15876,"end":15891,"code":"n.nType != root","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":15876,"end":15883,"code":"n.nType","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":15876,"end":15877,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":15876,"name":"n","object":null},"sel":{"children":[],"start":15878,"end":15883,"code":"nType","nodeType":"Identifier","column":0,"line":0,"namePos":15878,"name":"nType","object":null}},"opPos":15884,"op":44,"rightExpression":{"children":[],"start":15887,"end":15891,"code":"root","nodeType":"Identifier","column":0,"line":0,"namePos":15887,"name":"root","object":null}}},"body":{"children":[],"start":15892,"end":15930,"code":"{\n\tvalue.tsr = true\n\treturn\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":15892,"list":[{"children":[],"start":15898,"end":15914,"code":"value.tsr = true","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":15898,"end":15907,"code":"value.tsr","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":15898,"end":15903,"code":"value","nodeType":"Identifier","column":0,"line":0,"namePos":15898,"name":"value","object":null},"sel":{"children":[],"start":15904,"end":15907,"code":"tsr","nodeType":"Identifier","column":0,"line":0,"namePos":15904,"name":"tsr","object":null}}],"tokenPos":15908,"token":42,"rhs":[{"children":[],"start":15910,"end":15914,"code":"true","nodeType":"Identifier","column":0,"line":0,"namePos":15910,"name":"true","object":null}]},{"children":[],"start":15919,"end":15925,"code":"return","nodeType":"ReturnStatement","column":0,"line":0,"return":15919,"results":[]}],"rbrace":15929},"else":null},{"children":[],"start":15935,"end":16009,"code":"if path == \"/\" \u0026\u0026 n.nType == static {\n\tvalue.tsr = true\n\treturn\n}","nodeType":"IfStatement","column":0,"line":0,"if":15935,"initialization":null,"condition":{"children":[],"start":15938,"end":15970,"code":"path == \"/\" \u0026\u0026 n.nType == static","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":15938,"end":15949,"code":"path == \"/\"","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":15938,"end":15942,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":15938,"name":"path","object":null},"opPos":15943,"op":39,"rightExpression":{"children":[],"start":15946,"end":15949,"code":"\"/\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":15946,"kind":9,"value":"\"/\""}},"opPos":15950,"op":34,"rightExpression":{"children":[],"start":15953,"end":15970,"code":"n.nType == static","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":15953,"end":15960,"code":"n.nType","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":15953,"end":15954,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":15953,"name":"n","object":null},"sel":{"children":[],"start":15955,"end":15960,"code":"nType","nodeType":"Identifier","column":0,"line":0,"namePos":15955,"name":"nType","object":null}},"opPos":15961,"op":39,"rightExpression":{"children":[],"start":15964,"end":15970,"code":"static","nodeType":"Identifier","column":0,"line":0,"namePos":15964,"name":"static","object":null}}},"body":{"children":[],"start":15971,"end":16009,"code":"{\n\tvalue.tsr = true\n\treturn\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":15971,"list":[{"children":[],"start":15977,"end":15993,"code":"value.tsr = true","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":15977,"end":15986,"code":"value.tsr","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":15977,"end":15982,"code":"value","nodeType":"Identifier","column":0,"line":0,"namePos":15977,"name":"value","object":null},"sel":{"children":[],"start":15983,"end":15986,"code":"tsr","nodeType":"Identifier","column":0,"line":0,"namePos":15983,"name":"tsr","object":null}}],"tokenPos":15987,"token":42,"rhs":[{"children":[],"start":15989,"end":15993,"code":"true","nodeType":"Identifier","column":0,"line":0,"namePos":15989,"name":"true","object":null}]},{"children":[],"start":15998,"end":16004,"code":"return","nodeType":"ReturnStatement","column":0,"line":0,"return":15998,"results":[]}],"rbrace":16008},"else":null},{"children":[],"start":16135,"end":16357,"code":"for i, c := range []byte(n.indices) {\n\tif c == '/' {\n\t\tn = n.children[i]\n\t\tvalue.tsr = (len(n.path) == 1 \u0026\u0026 n.handlers != nil) || (n.nType == catchAll \u0026\u0026 n.children[0].handlers != nil)\n\t\treturn\n\t}\n}","nodeType":"RangeStatement","column":0,"line":0,"for":16135,"key":{"children":[],"start":16139,"end":16140,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":16139,"name":"i","object":null},"value":{"children":[],"start":16142,"end":16143,"code":"c","nodeType":"Identifier","column":0,"line":0,"namePos":16142,"name":"c","object":null},"tokenPos":16144,"token":47,"range":16147,"expression":{"children":[],"start":16153,"end":16170,"code":"[]byte(n.indices)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":16153,"end":16159,"code":"[]byte","nodeType":"ArrayType","column":0,"line":0,"leftBracket":16153,"length":null,"element":{"children":[],"start":16155,"end":16159,"code":"byte","nodeType":"Identifier","column":0,"line":0,"namePos":16155,"name":"byte","object":null}},"lparen":0,"args":[{"children":[],"start":16160,"end":16169,"code":"n.indices","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":16160,"end":16161,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":16160,"name":"n","object":null},"sel":{"children":[],"start":16162,"end":16169,"code":"indices","nodeType":"Identifier","column":0,"line":0,"namePos":16162,"name":"indices","object":null}}],"ellipsis":0,"rparen":0},"body":{"children":[],"start":16171,"end":16357,"code":"{\n\tif c == '/' {\n\t\tn = n.children[i]\n\t\tvalue.tsr = (len(n.path) == 1 \u0026\u0026 n.handlers != nil) || (n.nType == catchAll \u0026\u0026 n.children[0].handlers != nil)\n\t\treturn\n\t}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":16171,"list":[{"children":[],"start":16177,"end":16352,"code":"if c == '/' {\n\tn = n.children[i]\n\tvalue.tsr = (len(n.path) == 1 \u0026\u0026 n.handlers != nil) || (n.nType == catchAll \u0026\u0026 n.children[0].handlers != nil)\n\treturn\n}","nodeType":"IfStatement","column":0,"line":0,"if":16177,"initialization":null,"condition":{"children":[],"start":16180,"end":16188,"code":"c == '/'","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":16180,"end":16181,"code":"c","nodeType":"Identifier","column":0,"line":0,"namePos":16180,"name":"c","object":null},"opPos":16182,"op":39,"rightExpression":{"children":[],"start":16185,"end":16188,"code":"'/'","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":16185,"kind":8,"value":"'/'"}},"body":{"children":[],"start":16189,"end":16352,"code":"{\n\tn = n.children[i]\n\tvalue.tsr = (len(n.path) == 1 \u0026\u0026 n.handlers != nil) || (n.nType == catchAll \u0026\u0026 n.children[0].handlers != nil)\n\treturn\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":16189,"list":[{"children":[],"start":16196,"end":16213,"code":"n = n.children[i]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":16196,"end":16197,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":16196,"name":"n","object":null}],"tokenPos":16198,"token":42,"rhs":[{"children":[],"start":16200,"end":16213,"code":"n.children[i]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":16200,"end":16210,"code":"n.children","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":16200,"end":16201,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":16200,"name":"n","object":null},"sel":{"children":[],"start":16202,"end":16210,"code":"children","nodeType":"Identifier","column":0,"line":0,"namePos":16202,"name":"children","object":null}},"leftBracket":16210,"index":{"children":[],"start":16211,"end":16212,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":16211,"name":"i","object":null},"rightBracket":16212}]},{"children":[],"start":16219,"end":16334,"code":"value.tsr = (len(n.path) == 1 \u0026\u0026 n.handlers != nil) || (n.nType == catchAll \u0026\u0026 n.children[0].handlers != nil)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":16219,"end":16228,"code":"value.tsr","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":16219,"end":16224,"code":"value","nodeType":"Identifier","column":0,"line":0,"namePos":16219,"name":"value","object":null},"sel":{"children":[],"start":16225,"end":16228,"code":"tsr","nodeType":"Identifier","column":0,"line":0,"namePos":16225,"name":"tsr","object":null}}],"tokenPos":16229,"token":42,"rhs":[{"children":[],"start":16231,"end":16334,"code":"(len(n.path) == 1 \u0026\u0026 n.handlers != nil) || (n.nType == catchAll \u0026\u0026 n.children[0].handlers != nil)","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":16231,"end":16270,"code":"(len(n.path) == 1 \u0026\u0026 n.handlers != nil)","nodeType":"ParenthesizedExpression","column":0,"line":0,"lparen":16231,"expression":{"children":[],"start":16232,"end":16269,"code":"len(n.path) == 1 \u0026\u0026 n.handlers != nil","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":16232,"end":16248,"code":"len(n.path) == 1","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":16232,"end":16243,"code":"len(n.path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":16232,"end":16235,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":16232,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":16236,"end":16242,"code":"n.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":16236,"end":16237,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":16236,"name":"n","object":null},"sel":{"children":[],"start":16238,"end":16242,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":16238,"name":"path","object":null}}],"ellipsis":0,"rparen":0},"opPos":16244,"op":39,"rightExpression":{"children":[],"start":16247,"end":16248,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":16247,"kind":5,"value":"1"}},"opPos":16249,"op":34,"rightExpression":{"children":[],"start":16252,"end":16269,"code":"n.handlers != nil","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":16252,"end":16262,"code":"n.handlers","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":16252,"end":16253,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":16252,"name":"n","object":null},"sel":{"children":[],"start":16254,"end":16262,"code":"handlers","nodeType":"Identifier","column":0,"line":0,"namePos":16254,"name":"handlers","object":null}},"opPos":16263,"op":44,"rightExpression":{"children":[],"start":16266,"end":16269,"code":"nil","nodeType":"Identifier","column":0,"line":0,"namePos":16266,"name":"nil","object":null}}},"rparen":16269},"opPos":16271,"op":35,"rightExpression":{"children":[],"start":16280,"end":16334,"code":"(n.nType == catchAll \u0026\u0026 n.children[0].handlers != nil)","nodeType":"ParenthesizedExpression","column":0,"line":0,"lparen":16280,"expression":{"children":[],"start":16281,"end":16333,"code":"n.nType == catchAll \u0026\u0026 n.children[0].handlers != nil","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":16281,"end":16300,"code":"n.nType == catchAll","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":16281,"end":16288,"code":"n.nType","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":16281,"end":16282,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":16281,"name":"n","object":null},"sel":{"children":[],"start":16283,"end":16288,"code":"nType","nodeType":"Identifier","column":0,"line":0,"namePos":16283,"name":"nType","object":null}},"opPos":16289,"op":39,"rightExpression":{"children":[],"start":16292,"end":16300,"code":"catchAll","nodeType":"Identifier","column":0,"line":0,"namePos":16292,"name":"catchAll","object":null}},"opPos":16301,"op":34,"rightExpression":{"children":[],"start":16304,"end":16333,"code":"n.children[0].handlers != nil","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":16304,"end":16326,"code":"n.children[0].handlers","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":16304,"end":16317,"code":"n.children[0]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":16304,"end":16314,"code":"n.children","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":16304,"end":16305,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":16304,"name":"n","object":null},"sel":{"children":[],"start":16306,"end":16314,"code":"children","nodeType":"Identifier","column":0,"line":0,"namePos":16306,"name":"children","object":null}},"leftBracket":16314,"index":{"children":[],"start":16315,"end":16316,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":16315,"kind":5,"value":"0"},"rightBracket":16316},"sel":{"children":[],"start":16318,"end":16326,"code":"handlers","nodeType":"Identifier","column":0,"line":0,"namePos":16318,"name":"handlers","object":null}},"opPos":16327,"op":44,"rightExpression":{"children":[],"start":16330,"end":16333,"code":"nil","nodeType":"Identifier","column":0,"line":0,"namePos":16330,"name":"nil","object":null}}},"rparen":16333}}]},{"children":[],"start":16340,"end":16346,"code":"return","nodeType":"ReturnStatement","column":0,"line":0,"return":16340,"results":[]}],"rbrace":16351},"else":null}],"rbrace":16356}},{"children":[],"start":16362,"end":16368,"code":"return","nodeType":"ReturnStatement","column":0,"line":0,"return":16362,"results":[]}],"rbrace":16371},"else":null},{"children":[],"start":16506,"end":16651,"code":"value.tsr = path == \"/\" || (len(prefix) == len(path)+1 \u0026\u0026 prefix[len(path)] == '/' \u0026\u0026 path == prefix[:len(prefix)-1] \u0026\u0026 n.handlers != nil)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":16506,"end":16515,"code":"value.tsr","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":16506,"end":16511,"code":"value","nodeType":"Identifier","column":0,"line":0,"namePos":16506,"name":"value","object":null},"sel":{"children":[],"start":16512,"end":16515,"code":"tsr","nodeType":"Identifier","column":0,"line":0,"namePos":16512,"name":"tsr","object":null}}],"tokenPos":16516,"token":42,"rhs":[{"children":[],"start":16518,"end":16651,"code":"path == \"/\" || (len(prefix) == len(path)+1 \u0026\u0026 prefix[len(path)] == '/' \u0026\u0026 path == prefix[:len(prefix)-1] \u0026\u0026 n.handlers != nil)","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":16518,"end":16529,"code":"path == \"/\"","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":16518,"end":16522,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":16518,"name":"path","object":null},"opPos":16523,"op":39,"rightExpression":{"children":[],"start":16526,"end":16529,"code":"\"/\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":16526,"kind":9,"value":"\"/\""}},"opPos":16530,"op":35,"rightExpression":{"children":[],"start":16536,"end":16651,"code":"(len(prefix) == len(path)+1 \u0026\u0026 prefix[len(path)] == '/' \u0026\u0026 path == prefix[:len(prefix)-1] \u0026\u0026 n.handlers != nil)","nodeType":"ParenthesizedExpression","column":0,"line":0,"lparen":16536,"expression":{"children":[],"start":16537,"end":16650,"code":"len(prefix) == len(path)+1 \u0026\u0026 prefix[len(path)] == '/' \u0026\u0026 path == prefix[:len(prefix)-1] \u0026\u0026 n.handlers != nil","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":16537,"end":16629,"code":"len(prefix) == len(path)+1 \u0026\u0026 prefix[len(path)] == '/' \u0026\u0026 path == prefix[:len(prefix)-1]","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":16537,"end":16591,"code":"len(prefix) == len(path)+1 \u0026\u0026 prefix[len(path)] == '/'","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":16537,"end":16563,"code":"len(prefix) == len(path)+1","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":16537,"end":16548,"code":"len(prefix)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":16537,"end":16540,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":16537,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":16541,"end":16547,"code":"prefix","nodeType":"Identifier","column":0,"line":0,"namePos":16541,"name":"prefix","object":null}],"ellipsis":0,"rparen":0},"opPos":16549,"op":39,"rightExpression":{"children":[],"start":16552,"end":16563,"code":"len(path) + 1","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":16552,"end":16561,"code":"len(path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":16552,"end":16555,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":16552,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":16556,"end":16560,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":16556,"name":"path","object":null}],"ellipsis":0,"rparen":0},"opPos":16561,"op":12,"rightExpression":{"children":[],"start":16562,"end":16563,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":16562,"kind":5,"value":"1"}}},"opPos":16564,"op":34,"rightExpression":{"children":[],"start":16567,"end":16591,"code":"prefix[len(path)] == '/'","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":16567,"end":16584,"code":"prefix[len(path)]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":16567,"end":16573,"code":"prefix","nodeType":"Identifier","column":0,"line":0,"namePos":16567,"name":"prefix","object":null},"leftBracket":16573,"index":{"children":[],"start":16574,"end":16583,"code":"len(path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":16574,"end":16577,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":16574,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":16578,"end":16582,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":16578,"name":"path","object":null}],"ellipsis":0,"rparen":0},"rightBracket":16583},"opPos":16585,"op":39,"rightExpression":{"children":[],"start":16588,"end":16591,"code":"'/'","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":16588,"kind":8,"value":"'/'"}}},"opPos":16592,"op":34,"rightExpression":{"children":[],"start":16599,"end":16629,"code":"path == prefix[:len(prefix)-1]","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":16599,"end":16603,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":16599,"name":"path","object":null},"opPos":16604,"op":39,"rightExpression":{"children":[],"start":16607,"end":16629,"code":"prefix[:len(prefix)-1]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":16607,"end":16613,"code":"prefix","nodeType":"Identifier","column":0,"line":0,"namePos":16607,"name":"prefix","object":null},"leftBracket":16613,"low":null,"high":{"children":[],"start":16615,"end":16628,"code":"len(prefix) - 1","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":16615,"end":16626,"code":"len(prefix)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":16615,"end":16618,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":16615,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":16619,"end":16625,"code":"prefix","nodeType":"Identifier","column":0,"line":0,"namePos":16619,"name":"prefix","object":null}],"ellipsis":0,"rparen":0},"opPos":16626,"op":13,"rightExpression":{"children":[],"start":16627,"end":16628,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":16627,"kind":5,"value":"1"}},"max":null,"slice3":false,"rightBracket":16628}}},"opPos":16630,"op":34,"rightExpression":{"children":[],"start":16633,"end":16650,"code":"n.handlers != nil","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":16633,"end":16643,"code":"n.handlers","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":16633,"end":16634,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":16633,"name":"n","object":null},"sel":{"children":[],"start":16635,"end":16643,"code":"handlers","nodeType":"Identifier","column":0,"line":0,"namePos":16635,"name":"handlers","object":null}},"opPos":16644,"op":44,"rightExpression":{"children":[],"start":16647,"end":16650,"code":"nil","nodeType":"Identifier","column":0,"line":0,"namePos":16647,"name":"nil","object":null}}},"rparen":16650}}]},{"children":[],"start":16696,"end":17168,"code":"if !value.tsr \u0026\u0026 path != \"/\" {\n\tfor length := len(*skippedNodes); length \u003e 0; length-- {\n\t\tskippedNode := (*skippedNodes)[length-1]\n\t\t*skippedNodes = (*skippedNodes)[:length-1]\n\t\tif strings.HasSuffix(skippedNode.path, path) {\n\t\t\tpath = skippedNode.path\n\t\t\tn = skippedNode.node\n\t\t\tif value.params != nil {\n\t\t\t\t*value.params = (*value.params)[:skippedNode.paramsCount]\n\t\t\t}\n\t\t\tglobalParamsCount = skippedNode.paramsCount\n\t\t\tcontinue walk\n\t\t}\n\t}\n}","nodeType":"IfStatement","column":0,"line":0,"if":16696,"initialization":null,"condition":{"children":[],"start":16699,"end":16724,"code":"!value.tsr \u0026\u0026 path != \"/\"","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":16699,"end":16709,"code":"!value.tsr","nodeType":"UnaryExpression","column":0,"line":0,"opPos":16699,"op":43,"expression":{"children":[],"start":16700,"end":16709,"code":"value.tsr","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":16700,"end":16705,"code":"value","nodeType":"Identifier","column":0,"line":0,"namePos":16700,"name":"value","object":null},"sel":{"children":[],"start":16706,"end":16709,"code":"tsr","nodeType":"Identifier","column":0,"line":0,"namePos":16706,"name":"tsr","object":null}}},"opPos":16710,"op":34,"rightExpression":{"children":[],"start":16713,"end":16724,"code":"path != \"/\"","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":16713,"end":16717,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":16713,"name":"path","object":null},"opPos":16718,"op":44,"rightExpression":{"children":[],"start":16721,"end":16724,"code":"\"/\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":16721,"kind":9,"value":"\"/\""}}},"body":{"children":[],"start":16725,"end":17168,"code":"{\n\tfor length := len(*skippedNodes); length \u003e 0; length-- {\n\t\tskippedNode := (*skippedNodes)[length-1]\n\t\t*skippedNodes = (*skippedNodes)[:length-1]\n\t\tif strings.HasSuffix(skippedNode.path, path) {\n\t\t\tpath = skippedNode.path\n\t\t\tn = skippedNode.node\n\t\t\tif value.params != nil {\n\t\t\t\t*value.params = (*value.params)[:skippedNode.paramsCount]\n\t\t\t}\n\t\t\tglobalParamsCount = skippedNode.paramsCount\n\t\t\tcontinue walk\n\t\t}\n\t}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":16725,"list":[{"children":[],"start":16730,"end":17164,"code":"for length := len(*skippedNodes); length \u003e 0; length-- {\n\tskippedNode := (*skippedNodes)[length-1]\n\t*skippedNodes = (*skippedNodes)[:length-1]\n\tif strings.HasSuffix(skippedNode.path, path) {\n\t\tpath = skippedNode.path\n\t\tn = skippedNode.node\n\t\tif value.params != nil {\n\t\t\t*value.params = (*value.params)[:skippedNode.paramsCount]\n\t\t}\n\t\tglobalParamsCount = skippedNode.paramsCount\n\t\tcontinue walk\n\t}\n}","nodeType":"ForStatement","column":0,"line":0,"for":16730,"initialization":{"children":[],"start":16734,"end":16762,"code":"length := len(*skippedNodes)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":16734,"end":16740,"code":"length","nodeType":"Identifier","column":0,"line":0,"namePos":16734,"name":"length","object":null}],"tokenPos":16741,"token":47,"rhs":[{"children":[],"start":16744,"end":16762,"code":"len(*skippedNodes)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":16744,"end":16747,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":16744,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":16748,"end":16761,"code":"*skippedNodes","nodeType":"StarExpression","column":0,"line":0,"star":16748,"expression":{"children":[],"start":16749,"end":16761,"code":"skippedNodes","nodeType":"Identifier","column":0,"line":0,"namePos":16749,"name":"skippedNodes","object":null}}],"ellipsis":0,"rparen":0}]},"condition":{"children":[],"start":16764,"end":16774,"code":"length \u003e 0","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":16764,"end":16770,"code":"length","nodeType":"Identifier","column":0,"line":0,"namePos":16764,"name":"length","object":null},"opPos":16771,"op":41,"rightExpression":{"children":[],"start":16773,"end":16774,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":16773,"kind":5,"value":"0"}},"post":{"children":[],"start":16776,"end":16784,"code":"length--","nodeType":"IncrementDecrementStatement","column":0,"line":0,"Expression":{"children":[],"start":16776,"end":16782,"code":"length","nodeType":"Identifier","column":0,"line":0,"namePos":16776,"name":"length","object":null},"TokenPosition":16782,"Token":38},"body":{"children":[],"start":16785,"end":17164,"code":"{\n\tskippedNode := (*skippedNodes)[length-1]\n\t*skippedNodes = (*skippedNodes)[:length-1]\n\tif strings.HasSuffix(skippedNode.path, path) {\n\t\tpath = skippedNode.path\n\t\tn = skippedNode.node\n\t\tif value.params != nil {\n\t\t\t*value.params = (*value.params)[:skippedNode.paramsCount]\n\t\t}\n\t\tglobalParamsCount = skippedNode.paramsCount\n\t\tcontinue walk\n\t}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":16785,"list":[{"children":[],"start":16791,"end":16831,"code":"skippedNode := (*skippedNodes)[length-1]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":16791,"end":16802,"code":"skippedNode","nodeType":"Identifier","column":0,"line":0,"namePos":16791,"name":"skippedNode","object":null}],"tokenPos":16803,"token":47,"rhs":[{"children":[],"start":16806,"end":16831,"code":"(*skippedNodes)[length-1]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":16806,"end":16821,"code":"(*skippedNodes)","nodeType":"ParenthesizedExpression","column":0,"line":0,"lparen":16806,"expression":{"children":[],"start":16807,"end":16820,"code":"*skippedNodes","nodeType":"StarExpression","column":0,"line":0,"star":16807,"expression":{"children":[],"start":16808,"end":16820,"code":"skippedNodes","nodeType":"Identifier","column":0,"line":0,"namePos":16808,"name":"skippedNodes","object":null}},"rparen":16820},"leftBracket":16821,"index":{"children":[],"start":16822,"end":16830,"code":"length - 1","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":16822,"end":16828,"code":"length","nodeType":"Identifier","column":0,"line":0,"namePos":16822,"name":"length","object":null},"opPos":16828,"op":13,"rightExpression":{"children":[],"start":16829,"end":16830,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":16829,"kind":5,"value":"1"}},"rightBracket":16830}]},{"children":[],"start":16836,"end":16878,"code":"*skippedNodes = (*skippedNodes)[:length-1]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":16836,"end":16849,"code":"*skippedNodes","nodeType":"StarExpression","column":0,"line":0,"star":16836,"expression":{"children":[],"start":16837,"end":16849,"code":"skippedNodes","nodeType":"Identifier","column":0,"line":0,"namePos":16837,"name":"skippedNodes","object":null}}],"tokenPos":16850,"token":42,"rhs":[{"children":[],"start":16852,"end":16878,"code":"(*skippedNodes)[:length-1]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":16852,"end":16867,"code":"(*skippedNodes)","nodeType":"ParenthesizedExpression","column":0,"line":0,"lparen":16852,"expression":{"children":[],"start":16853,"end":16866,"code":"*skippedNodes","nodeType":"StarExpression","column":0,"line":0,"star":16853,"expression":{"children":[],"start":16854,"end":16866,"code":"skippedNodes","nodeType":"Identifier","column":0,"line":0,"namePos":16854,"name":"skippedNodes","object":null}},"rparen":16866},"leftBracket":16867,"low":null,"high":{"children":[],"start":16869,"end":16877,"code":"length - 1","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":16869,"end":16875,"code":"length","nodeType":"Identifier","column":0,"line":0,"namePos":16869,"name":"length","object":null},"opPos":16875,"op":13,"rightExpression":{"children":[],"start":16876,"end":16877,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":16876,"kind":5,"value":"1"}},"max":null,"slice3":false,"rightBracket":16877}]},{"children":[],"start":16883,"end":17159,"code":"if strings.HasSuffix(skippedNode.path, path) {\n\tpath = skippedNode.path\n\tn = skippedNode.node\n\tif value.params != nil {\n\t\t*value.params = (*value.params)[:skippedNode.paramsCount]\n\t}\n\tglobalParamsCount = skippedNode.paramsCount\n\tcontinue walk\n}","nodeType":"IfStatement","column":0,"line":0,"if":16883,"initialization":null,"condition":{"children":[],"start":16886,"end":16927,"code":"strings.HasSuffix(skippedNode.path, path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":16886,"end":16903,"code":"strings.HasSuffix","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":16886,"end":16893,"code":"strings","nodeType":"Identifier","column":0,"line":0,"namePos":16886,"name":"strings","object":null},"sel":{"children":[],"start":16894,"end":16903,"code":"HasSuffix","nodeType":"Identifier","column":0,"line":0,"namePos":16894,"name":"HasSuffix","object":null}},"lparen":0,"args":[{"children":[],"start":16904,"end":16920,"code":"skippedNode.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":16904,"end":16915,"code":"skippedNode","nodeType":"Identifier","column":0,"line":0,"namePos":16904,"name":"skippedNode","object":null},"sel":{"children":[],"start":16916,"end":16920,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":16916,"name":"path","object":null}},{"children":[],"start":16922,"end":16926,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":16922,"name":"path","object":null}],"ellipsis":0,"rparen":0},"body":{"children":[],"start":16928,"end":17159,"code":"{\n\tpath = skippedNode.path\n\tn = skippedNode.node\n\tif value.params != nil {\n\t\t*value.params = (*value.params)[:skippedNode.paramsCount]\n\t}\n\tglobalParamsCount = skippedNode.paramsCount\n\tcontinue walk\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":16928,"list":[{"children":[],"start":16935,"end":16958,"code":"path = skippedNode.path","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":16935,"end":16939,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":16935,"name":"path","object":null}],"tokenPos":16940,"token":42,"rhs":[{"children":[],"start":16942,"end":16958,"code":"skippedNode.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":16942,"end":16953,"code":"skippedNode","nodeType":"Identifier","column":0,"line":0,"namePos":16942,"name":"skippedNode","object":null},"sel":{"children":[],"start":16954,"end":16958,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":16954,"name":"path","object":null}}]},{"children":[],"start":16964,"end":16984,"code":"n = skippedNode.node","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":16964,"end":16965,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":16964,"name":"n","object":null}],"tokenPos":16966,"token":42,"rhs":[{"children":[],"start":16968,"end":16984,"code":"skippedNode.node","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":16968,"end":16979,"code":"skippedNode","nodeType":"Identifier","column":0,"line":0,"namePos":16968,"name":"skippedNode","object":null},"sel":{"children":[],"start":16980,"end":16984,"code":"node","nodeType":"Identifier","column":0,"line":0,"namePos":16980,"name":"node","object":null}}]},{"children":[],"start":16990,"end":17085,"code":"if value.params != nil {\n\t*value.params = (*value.params)[:skippedNode.paramsCount]\n}","nodeType":"IfStatement","column":0,"line":0,"if":16990,"initialization":null,"condition":{"children":[],"start":16993,"end":17012,"code":"value.params != nil","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":16993,"end":17005,"code":"value.params","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":16993,"end":16998,"code":"value","nodeType":"Identifier","column":0,"line":0,"namePos":16993,"name":"value","object":null},"sel":{"children":[],"start":16999,"end":17005,"code":"params","nodeType":"Identifier","column":0,"line":0,"namePos":16999,"name":"params","object":null}},"opPos":17006,"op":44,"rightExpression":{"children":[],"start":17009,"end":17012,"code":"nil","nodeType":"Identifier","column":0,"line":0,"namePos":17009,"name":"nil","object":null}},"body":{"children":[],"start":17013,"end":17085,"code":"{\n\t*value.params = (*value.params)[:skippedNode.paramsCount]\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":17013,"list":[{"children":[],"start":17021,"end":17078,"code":"*value.params = (*value.params)[:skippedNode.paramsCount]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":17021,"end":17034,"code":"*value.params","nodeType":"StarExpression","column":0,"line":0,"star":17021,"expression":{"children":[],"start":17022,"end":17034,"code":"value.params","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":17022,"end":17027,"code":"value","nodeType":"Identifier","column":0,"line":0,"namePos":17022,"name":"value","object":null},"sel":{"children":[],"start":17028,"end":17034,"code":"params","nodeType":"Identifier","column":0,"line":0,"namePos":17028,"name":"params","object":null}}}],"tokenPos":17035,"token":42,"rhs":[{"children":[],"start":17037,"end":17078,"code":"(*value.params)[:skippedNode.paramsCount]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":17037,"end":17052,"code":"(*value.params)","nodeType":"ParenthesizedExpression","column":0,"line":0,"lparen":17037,"expression":{"children":[],"start":17038,"end":17051,"code":"*value.params","nodeType":"StarExpression","column":0,"line":0,"star":17038,"expression":{"children":[],"start":17039,"end":17051,"code":"value.params","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":17039,"end":17044,"code":"value","nodeType":"Identifier","column":0,"line":0,"namePos":17039,"name":"value","object":null},"sel":{"children":[],"start":17045,"end":17051,"code":"params","nodeType":"Identifier","column":0,"line":0,"namePos":17045,"name":"params","object":null}}},"rparen":17051},"leftBracket":17052,"low":null,"high":{"children":[],"start":17054,"end":17077,"code":"skippedNode.paramsCount","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":17054,"end":17065,"code":"skippedNode","nodeType":"Identifier","column":0,"line":0,"namePos":17054,"name":"skippedNode","object":null},"sel":{"children":[],"start":17066,"end":17077,"code":"paramsCount","nodeType":"Identifier","column":0,"line":0,"namePos":17066,"name":"paramsCount","object":null}},"max":null,"slice3":false,"rightBracket":17077}]}],"rbrace":17084},"else":null},{"children":[],"start":17091,"end":17134,"code":"globalParamsCount = skippedNode.paramsCount","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":17091,"end":17108,"code":"globalParamsCount","nodeType":"Identifier","column":0,"line":0,"namePos":17091,"name":"globalParamsCount","object":null}],"tokenPos":17109,"token":42,"rhs":[{"children":[],"start":17111,"end":17134,"code":"skippedNode.paramsCount","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":17111,"end":17122,"code":"skippedNode","nodeType":"Identifier","column":0,"line":0,"namePos":17111,"name":"skippedNode","object":null},"sel":{"children":[],"start":17123,"end":17134,"code":"paramsCount","nodeType":"Identifier","column":0,"line":0,"namePos":17123,"name":"paramsCount","object":null}}]},{"children":[],"start":17140,"end":17153,"code":"continue walk","nodeType":"BranchStatement","column":0,"line":0,"tokenPosition":17140,"token":65,"label":{"children":[],"start":17149,"end":17153,"code":"walk","nodeType":"Identifier","column":0,"line":0,"namePos":17149,"name":"walk","object":null}}],"rbrace":17158},"else":null}],"rbrace":17163}}],"rbrace":17167},"else":null},{"children":[],"start":17172,"end":17178,"code":"return","nodeType":"ReturnStatement","column":0,"line":0,"return":17172,"results":[]}],"rbrace":17180}},"label":{"children":[],"start":10240,"end":10244,"code":"walk","nodeType":"Identifier","column":0,"line":0,"namePos":10240,"name":"walk","object":null},"colon":10244}],"rbrace":17182}},{"children":[],"start":17413,"end":17983,"code":"func (n *node) findCaseInsensitivePath(path string, fixTrailingSlash bool) ([]byte, bool) {\n\tconst stackBufSize = 128\n\tbuf := make([]byte, 0, stackBufSize)\n\tif length := len(path) + 1; length \u003e stackBufSize {\n\t\tbuf = make([]byte, 0, length)\n\t}\n\tciPath := n.findCaseInsensitivePathRec(path, buf, [4]byte{}, fixTrailingSlash)\n\treturn ciPath, ciPath != nil\n}","nodeType":"FunctionDeclaration","column":0,"line":0,"doc":null,"receiver":{"children":[],"start":17418,"end":17427,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":17418,"list":[{"children":[],"start":17419,"end":17426,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":17419,"end":17420,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":17419,"name":"n","object":null}],"type":{"children":[],"start":17421,"end":17426,"code":"*node","nodeType":"StarExpression","column":0,"line":0,"star":17421,"expression":{"children":[],"start":17422,"end":17426,"code":"node","nodeType":"Identifier","column":0,"line":0,"namePos":17422,"name":"node","object":null}},"tag":null,"comment":null}],"closing":17426},"name":{"children":[],"start":17428,"end":17451,"code":"findCaseInsensitivePath","nodeType":"Identifier","column":0,"line":0,"namePos":17428,"name":"findCaseInsensitivePath","object":null},"type":{"children":[],"start":17413,"end":17502,"code":"func(path string, fixTrailingSlash bool) ([]byte, bool)","nodeType":"FunctionType","column":0,"line":0,"Function":17413,"TypeParams":null,"Params":{"children":[],"start":17451,"end":17487,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":17451,"list":[{"children":[],"start":17452,"end":17463,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":17452,"end":17456,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":17452,"name":"path","object":null}],"type":{"children":[],"start":17457,"end":17463,"code":"string","nodeType":"Identifier","column":0,"line":0,"namePos":17457,"name":"string","object":null},"tag":null,"comment":null},{"children":[],"start":17465,"end":17486,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":17465,"end":17481,"code":"fixTrailingSlash","nodeType":"Identifier","column":0,"line":0,"namePos":17465,"name":"fixTrailingSlash","object":null}],"type":{"children":[],"start":17482,"end":17486,"code":"bool","nodeType":"Identifier","column":0,"line":0,"namePos":17482,"name":"bool","object":null},"tag":null,"comment":null}],"closing":17486},"Results":{"children":[],"start":17488,"end":17502,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":17488,"list":[{"children":[],"start":17489,"end":17495,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":null,"type":{"children":[],"start":17489,"end":17495,"code":"[]byte","nodeType":"ArrayType","column":0,"line":0,"leftBracket":17489,"length":null,"element":{"children":[],"start":17491,"end":17495,"code":"byte","nodeType":"Identifier","column":0,"line":0,"namePos":17491,"name":"byte","object":null}},"tag":null,"comment":null},{"children":[],"start":17497,"end":17501,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":null,"type":{"children":[],"start":17497,"end":17501,"code":"bool","nodeType":"Identifier","column":0,"line":0,"namePos":17497,"name":"bool","object":null},"tag":null,"comment":null}],"closing":17501}},"body":{"children":[],"start":17503,"end":17983,"code":"{\n\tconst stackBufSize = 128\n\tbuf := make([]byte, 0, stackBufSize)\n\tif length := len(path) + 1; length \u003e stackBufSize {\n\t\tbuf = make([]byte, 0, length)\n\t}\n\tciPath := n.findCaseInsensitivePathRec(path, buf, [4]byte{}, fixTrailingSlash)\n\treturn ciPath, ciPath != nil\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":17503,"list":[{"children":[],"start":17506,"end":17530,"code":"const stackBufSize = 128","nodeType":"DeclarationStatement","column":0,"line":0,"declaration":{"children":[],"start":17506,"end":17530,"code":"const stackBufSize = 128","nodeType":"GenericDeclaration","column":0,"line":0,"doc":null,"tokenPosition":17506,"token":64,"lparen":0,"specifications":[{"children":[],"start":17512,"end":17530,"code":"stackBufSize = 128","nodeType":"ValueSpecification","column":0,"line":0,"doc":null,"names":[{"children":[],"start":17512,"end":17524,"code":"stackBufSize","nodeType":"Identifier","column":0,"line":0,"namePos":17512,"name":"stackBufSize","object":null}],"type":null,"values":[{"children":[],"start":17527,"end":17530,"code":"128","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":17527,"kind":5,"value":"128"}],"comment":null}],"rparen":0}},{"children":[],"start":17664,"end":17700,"code":"buf := make([]byte, 0, stackBufSize)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":17664,"end":17667,"code":"buf","nodeType":"Identifier","column":0,"line":0,"namePos":17664,"name":"buf","object":null}],"tokenPos":17668,"token":47,"rhs":[{"children":[],"start":17671,"end":17700,"code":"make([]byte, 0, stackBufSize)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":17671,"end":17675,"code":"make","nodeType":"Identifier","column":0,"line":0,"namePos":17671,"name":"make","object":null},"lparen":0,"args":[{"children":[],"start":17676,"end":17682,"code":"[]byte","nodeType":"ArrayType","column":0,"line":0,"leftBracket":17676,"length":null,"element":{"children":[],"start":17678,"end":17682,"code":"byte","nodeType":"Identifier","column":0,"line":0,"namePos":17678,"name":"byte","object":null}},{"children":[],"start":17684,"end":17685,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":17684,"kind":5,"value":"0"},{"children":[],"start":17687,"end":17699,"code":"stackBufSize","nodeType":"Identifier","column":0,"line":0,"namePos":17687,"name":"stackBufSize","object":null}],"ellipsis":0,"rparen":0}]},{"children":[],"start":17702,"end":17788,"code":"if length := len(path) + 1; length \u003e stackBufSize {\n\tbuf = make([]byte, 0, length)\n}","nodeType":"IfStatement","column":0,"line":0,"if":17702,"initialization":{"children":[],"start":17705,"end":17728,"code":"length := len(path) + 1","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":17705,"end":17711,"code":"length","nodeType":"Identifier","column":0,"line":0,"namePos":17705,"name":"length","object":null}],"tokenPos":17712,"token":47,"rhs":[{"children":[],"start":17715,"end":17728,"code":"len(path) + 1","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":17715,"end":17724,"code":"len(path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":17715,"end":17718,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":17715,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":17719,"end":17723,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":17719,"name":"path","object":null}],"ellipsis":0,"rparen":0},"opPos":17725,"op":12,"rightExpression":{"children":[],"start":17727,"end":17728,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":17727,"kind":5,"value":"1"}}]},"condition":{"children":[],"start":17730,"end":17751,"code":"length \u003e stackBufSize","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":17730,"end":17736,"code":"length","nodeType":"Identifier","column":0,"line":0,"namePos":17730,"name":"length","object":null},"opPos":17737,"op":41,"rightExpression":{"children":[],"start":17739,"end":17751,"code":"stackBufSize","nodeType":"Identifier","column":0,"line":0,"namePos":17739,"name":"stackBufSize","object":null}},"body":{"children":[],"start":17752,"end":17788,"code":"{\n\tbuf = make([]byte, 0, length)\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":17752,"list":[{"children":[],"start":17756,"end":17785,"code":"buf = make([]byte, 0, length)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":17756,"end":17759,"code":"buf","nodeType":"Identifier","column":0,"line":0,"namePos":17756,"name":"buf","object":null}],"tokenPos":17760,"token":42,"rhs":[{"children":[],"start":17762,"end":17785,"code":"make([]byte, 0, length)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":17762,"end":17766,"code":"make","nodeType":"Identifier","column":0,"line":0,"namePos":17762,"name":"make","object":null},"lparen":0,"args":[{"children":[],"start":17767,"end":17773,"code":"[]byte","nodeType":"ArrayType","column":0,"line":0,"leftBracket":17767,"length":null,"element":{"children":[],"start":17769,"end":17773,"code":"byte","nodeType":"Identifier","column":0,"line":0,"namePos":17769,"name":"byte","object":null}},{"children":[],"start":17775,"end":17776,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":17775,"kind":5,"value":"0"},{"children":[],"start":17778,"end":17784,"code":"length","nodeType":"Identifier","column":0,"line":0,"namePos":17778,"name":"length","object":null}],"ellipsis":0,"rparen":0}]}],"rbrace":17787},"else":null},{"children":[],"start":17791,"end":17950,"code":"ciPath := n.findCaseInsensitivePathRec(path, buf, [4]byte{}, fixTrailingSlash)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":17791,"end":17797,"code":"ciPath","nodeType":"Identifier","column":0,"line":0,"namePos":17791,"name":"ciPath","object":null}],"tokenPos":17798,"token":47,"rhs":[{"children":[],"start":17801,"end":17950,"code":"n.findCaseInsensitivePathRec(path, buf, [4]byte{}, fixTrailingSlash)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":17801,"end":17829,"code":"n.findCaseInsensitivePathRec","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":17801,"end":17802,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":17801,"name":"n","object":null},"sel":{"children":[],"start":17803,"end":17829,"code":"findCaseInsensitivePathRec","nodeType":"Identifier","column":0,"line":0,"namePos":17803,"name":"findCaseInsensitivePathRec","object":null}},"lparen":0,"args":[{"children":[],"start":17833,"end":17837,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":17833,"name":"path","object":null},{"children":[],"start":17841,"end":17844,"code":"buf","nodeType":"Identifier","column":0,"line":0,"namePos":17841,"name":"buf","object":null},{"children":[],"start":17896,"end":17905,"code":"[4]byte{}","nodeType":"CompositeLiteral","column":0,"line":0,"type":{"children":[],"start":17896,"end":17903,"code":"[4]byte","nodeType":"ArrayType","column":0,"line":0,"leftBracket":17896,"length":{"children":[],"start":17897,"end":17898,"code":"4","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":17897,"kind":5,"value":"4"},"element":{"children":[],"start":17899,"end":17903,"code":"byte","nodeType":"Identifier","column":0,"line":0,"namePos":17899,"name":"byte","object":null}},"lbrace":17903,"elements":[],"rbrace":17904,"incomplete":false},{"children":[],"start":17930,"end":17946,"code":"fixTrailingSlash","nodeType":"Identifier","column":0,"line":0,"namePos":17930,"name":"fixTrailingSlash","object":null}],"ellipsis":0,"rparen":0}]},{"children":[],"start":17953,"end":17981,"code":"return ciPath, ciPath != nil","nodeType":"ReturnStatement","column":0,"line":0,"return":17953,"results":[{"children":[],"start":17960,"end":17966,"code":"ciPath","nodeType":"Identifier","column":0,"line":0,"namePos":17960,"name":"ciPath","object":null},{"children":[],"start":17968,"end":17981,"code":"ciPath != nil","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":17968,"end":17974,"code":"ciPath","nodeType":"Identifier","column":0,"line":0,"namePos":17968,"name":"ciPath","object":null},"opPos":17975,"op":44,"rightExpression":{"children":[],"start":17978,"end":17981,"code":"nil","nodeType":"Identifier","column":0,"line":0,"namePos":17978,"name":"nil","object":null}}]}],"rbrace":17982}},{"children":[],"start":18025,"end":18264,"code":"func shiftNRuneBytes(rb [4]byte, n int) [4]byte {\n\tswitch n {\n\tcase 0:\n\t\treturn rb\n\tcase 1:\n\t\treturn [4]byte{rb[1], rb[2], rb[3], 0}\n\tcase 2:\n\t\treturn [4]byte{rb[2], rb[3]}\n\tcase 3:\n\t\treturn [4]byte{rb[3]}\n\tdefault:\n\t\treturn [4]byte{}\n\t}\n}","nodeType":"FunctionDeclaration","column":0,"line":0,"doc":null,"receiver":null,"name":{"children":[],"start":18030,"end":18045,"code":"shiftNRuneBytes","nodeType":"Identifier","column":0,"line":0,"namePos":18030,"name":"shiftNRuneBytes","object":null},"type":{"children":[],"start":18025,"end":18072,"code":"func(rb [4]byte, n int) [4]byte","nodeType":"FunctionType","column":0,"line":0,"Function":18025,"TypeParams":null,"Params":{"children":[],"start":18045,"end":18064,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":18045,"list":[{"children":[],"start":18046,"end":18056,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":18046,"end":18048,"code":"rb","nodeType":"Identifier","column":0,"line":0,"namePos":18046,"name":"rb","object":null}],"type":{"children":[],"start":18049,"end":18056,"code":"[4]byte","nodeType":"ArrayType","column":0,"line":0,"leftBracket":18049,"length":{"children":[],"start":18050,"end":18051,"code":"4","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":18050,"kind":5,"value":"4"},"element":{"children":[],"start":18052,"end":18056,"code":"byte","nodeType":"Identifier","column":0,"line":0,"namePos":18052,"name":"byte","object":null}},"tag":null,"comment":null},{"children":[],"start":18058,"end":18063,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":18058,"end":18059,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":18058,"name":"n","object":null}],"type":{"children":[],"start":18060,"end":18063,"code":"int","nodeType":"Identifier","column":0,"line":0,"namePos":18060,"name":"int","object":null},"tag":null,"comment":null}],"closing":18063},"Results":{"children":[],"start":18065,"end":18072,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":0,"list":[{"children":[],"start":18065,"end":18072,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":null,"type":{"children":[],"start":18065,"end":18072,"code":"[4]byte","nodeType":"ArrayType","column":0,"line":0,"leftBracket":18065,"length":{"children":[],"start":18066,"end":18067,"code":"4","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":18066,"kind":5,"value":"4"},"element":{"children":[],"start":18068,"end":18072,"code":"byte","nodeType":"Identifier","column":0,"line":0,"namePos":18068,"name":"byte","object":null}},"tag":null,"comment":null}],"closing":0}},"body":{"children":[],"start":18073,"end":18264,"code":"{\n\tswitch n {\n\tcase 0:\n\t\treturn rb\n\tcase 1:\n\t\treturn [4]byte{rb[1], rb[2], rb[3], 0}\n\tcase 2:\n\t\treturn [4]byte{rb[2], rb[3]}\n\tcase 3:\n\t\treturn [4]byte{rb[3]}\n\tdefault:\n\t\treturn [4]byte{}\n\t}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":18073,"list":[{"children":[],"start":18076,"end":18262,"code":"switch n {\ncase 0:\n\treturn rb\ncase 1:\n\treturn [4]byte{rb[1], rb[2], rb[3], 0}\ncase 2:\n\treturn [4]byte{rb[2], rb[3]}\ncase 3:\n\treturn [4]byte{rb[3]}\ndefault:\n\treturn [4]byte{}\n}","nodeType":"SwitchStatement","column":0,"line":0,"switch":18076,"initialization":null,"tag":{"children":[],"start":18083,"end":18084,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":18083,"name":"n","object":null},"body":{"children":[],"start":18085,"end":18262,"code":"{\n\tcase 0:\n\t\treturn rb\n\tcase 1:\n\t\treturn [4]byte{rb[1], rb[2], rb[3], 0}\n\tcase 2:\n\t\treturn [4]byte{rb[2], rb[3]}\n\tcase 3:\n\t\treturn [4]byte{rb[3]}\n\tdefault:\n\t\treturn [4]byte{}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":18085,"list":[{"children":[],"start":18088,"end":18107,"code":"case 0:\n\treturn rb","nodeType":"CaseClause","column":0,"line":0,"case":18088,"list":[{"children":[],"start":18093,"end":18094,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":18093,"kind":5,"value":"0"}],"colon":18094,"body":[{"children":[],"start":18098,"end":18107,"code":"return rb","nodeType":"ReturnStatement","column":0,"line":0,"return":18098,"results":[{"children":[],"start":18105,"end":18107,"code":"rb","nodeType":"Identifier","column":0,"line":0,"namePos":18105,"name":"rb","object":null}]}]},{"children":[],"start":18109,"end":18157,"code":"case 1:\n\treturn [4]byte{rb[1], rb[2], rb[3], 0}","nodeType":"CaseClause","column":0,"line":0,"case":18109,"list":[{"children":[],"start":18114,"end":18115,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":18114,"kind":5,"value":"1"}],"colon":18115,"body":[{"children":[],"start":18119,"end":18157,"code":"return [4]byte{rb[1], rb[2], rb[3], 0}","nodeType":"ReturnStatement","column":0,"line":0,"return":18119,"results":[{"children":[],"start":18126,"end":18157,"code":"[4]byte{rb[1], rb[2], rb[3], 0}","nodeType":"CompositeLiteral","column":0,"line":0,"type":{"children":[],"start":18126,"end":18133,"code":"[4]byte","nodeType":"ArrayType","column":0,"line":0,"leftBracket":18126,"length":{"children":[],"start":18127,"end":18128,"code":"4","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":18127,"kind":5,"value":"4"},"element":{"children":[],"start":18129,"end":18133,"code":"byte","nodeType":"Identifier","column":0,"line":0,"namePos":18129,"name":"byte","object":null}},"lbrace":18133,"elements":[{"children":[],"start":18134,"end":18139,"code":"rb[1]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":18134,"end":18136,"code":"rb","nodeType":"Identifier","column":0,"line":0,"namePos":18134,"name":"rb","object":null},"leftBracket":18136,"index":{"children":[],"start":18137,"end":18138,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":18137,"kind":5,"value":"1"},"rightBracket":18138},{"children":[],"start":18141,"end":18146,"code":"rb[2]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":18141,"end":18143,"code":"rb","nodeType":"Identifier","column":0,"line":0,"namePos":18141,"name":"rb","object":null},"leftBracket":18143,"index":{"children":[],"start":18144,"end":18145,"code":"2","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":18144,"kind":5,"value":"2"},"rightBracket":18145},{"children":[],"start":18148,"end":18153,"code":"rb[3]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":18148,"end":18150,"code":"rb","nodeType":"Identifier","column":0,"line":0,"namePos":18148,"name":"rb","object":null},"leftBracket":18150,"index":{"children":[],"start":18151,"end":18152,"code":"3","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":18151,"kind":5,"value":"3"},"rightBracket":18152},{"children":[],"start":18155,"end":18156,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":18155,"kind":5,"value":"0"}],"rbrace":18156,"incomplete":false}]}]},{"children":[],"start":18159,"end":18197,"code":"case 2:\n\treturn [4]byte{rb[2], rb[3]}","nodeType":"CaseClause","column":0,"line":0,"case":18159,"list":[{"children":[],"start":18164,"end":18165,"code":"2","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":18164,"kind":5,"value":"2"}],"colon":18165,"body":[{"children":[],"start":18169,"end":18197,"code":"return [4]byte{rb[2], rb[3]}","nodeType":"ReturnStatement","column":0,"line":0,"return":18169,"results":[{"children":[],"start":18176,"end":18197,"code":"[4]byte{rb[2], rb[3]}","nodeType":"CompositeLiteral","column":0,"line":0,"type":{"children":[],"start":18176,"end":18183,"code":"[4]byte","nodeType":"ArrayType","column":0,"line":0,"leftBracket":18176,"length":{"children":[],"start":18177,"end":18178,"code":"4","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":18177,"kind":5,"value":"4"},"element":{"children":[],"start":18179,"end":18183,"code":"byte","nodeType":"Identifier","column":0,"line":0,"namePos":18179,"name":"byte","object":null}},"lbrace":18183,"elements":[{"children":[],"start":18184,"end":18189,"code":"rb[2]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":18184,"end":18186,"code":"rb","nodeType":"Identifier","column":0,"line":0,"namePos":18184,"name":"rb","object":null},"leftBracket":18186,"index":{"children":[],"start":18187,"end":18188,"code":"2","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":18187,"kind":5,"value":"2"},"rightBracket":18188},{"children":[],"start":18191,"end":18196,"code":"rb[3]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":18191,"end":18193,"code":"rb","nodeType":"Identifier","column":0,"line":0,"namePos":18191,"name":"rb","object":null},"leftBracket":18193,"index":{"children":[],"start":18194,"end":18195,"code":"3","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":18194,"kind":5,"value":"3"},"rightBracket":18195}],"rbrace":18196,"incomplete":false}]}]},{"children":[],"start":18199,"end":18230,"code":"case 3:\n\treturn [4]byte{rb[3]}","nodeType":"CaseClause","column":0,"line":0,"case":18199,"list":[{"children":[],"start":18204,"end":18205,"code":"3","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":18204,"kind":5,"value":"3"}],"colon":18205,"body":[{"children":[],"start":18209,"end":18230,"code":"return [4]byte{rb[3]}","nodeType":"ReturnStatement","column":0,"line":0,"return":18209,"results":[{"children":[],"start":18216,"end":18230,"code":"[4]byte{rb[3]}","nodeType":"CompositeLiteral","column":0,"line":0,"type":{"children":[],"start":18216,"end":18223,"code":"[4]byte","nodeType":"ArrayType","column":0,"line":0,"leftBracket":18216,"length":{"children":[],"start":18217,"end":18218,"code":"4","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":18217,"kind":5,"value":"4"},"element":{"children":[],"start":18219,"end":18223,"code":"byte","nodeType":"Identifier","column":0,"line":0,"namePos":18219,"name":"byte","object":null}},"lbrace":18223,"elements":[{"children":[],"start":18224,"end":18229,"code":"rb[3]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":18224,"end":18226,"code":"rb","nodeType":"Identifier","column":0,"line":0,"namePos":18224,"name":"rb","object":null},"leftBracket":18226,"index":{"children":[],"start":18227,"end":18228,"code":"3","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":18227,"kind":5,"value":"3"},"rightBracket":18228}],"rbrace":18229,"incomplete":false}]}]},{"children":[],"start":18232,"end":18259,"code":"default:\n\treturn [4]byte{}","nodeType":"CaseClause","column":0,"line":0,"case":18232,"list":[],"colon":18239,"body":[{"children":[],"start":18243,"end":18259,"code":"return [4]byte{}","nodeType":"ReturnStatement","column":0,"line":0,"return":18243,"results":[{"children":[],"start":18250,"end":18259,"code":"[4]byte{}","nodeType":"CompositeLiteral","column":0,"line":0,"type":{"children":[],"start":18250,"end":18257,"code":"[4]byte","nodeType":"ArrayType","column":0,"line":0,"leftBracket":18250,"length":{"children":[],"start":18251,"end":18252,"code":"4","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":18251,"kind":5,"value":"4"},"element":{"children":[],"start":18253,"end":18257,"code":"byte","nodeType":"Identifier","column":0,"line":0,"namePos":18253,"name":"byte","object":null}},"lbrace":18257,"elements":[],"rbrace":18258,"incomplete":false}]}]}],"rbrace":18261}}],"rbrace":18263}},{"children":[],"start":18346,"end":22795,"code":"func (n *node) findCaseInsensitivePathRec(path string, ciPath []byte, rb [4]byte, fixTrailingSlash bool) []byte {\n\tnpLen := len(n.path)\nwalk:\n\tfor len(path) \u003e= npLen \u0026\u0026 (npLen == 0 || strings.EqualFold(path[1:npLen], n.path[1:])) {\n\t\toldPath := path\n\t\tpath = path[npLen:]\n\t\tciPath = append(ciPath, n.path...)\n\t\tif len(path) == 0 {\n\t\t\tif n.handlers != nil {\n\t\t\t\treturn ciPath\n\t\t\t}\n\t\t\tif fixTrailingSlash {\n\t\t\t\tfor i, c := range []byte(n.indices) {\n\t\t\t\t\tif c == '/' {\n\t\t\t\t\t\tn = n.children[i]\n\t\t\t\t\t\tif (len(n.path) == 1 \u0026\u0026 n.handlers != nil) || (n.nType == catchAll \u0026\u0026 n.children[0].handlers != nil) {\n\t\t\t\t\t\t\treturn append(ciPath, '/')\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn nil\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn nil\n\t\t}\n\t\tif !n.wildChild {\n\t\t\trb = shiftNRuneBytes(rb, npLen)\n\t\t\tif rb[0] != 0 {\n\t\t\t\tidxc := rb[0]\n\t\t\t\tfor i, c := range []byte(n.indices) {\n\t\t\t\t\tif c == idxc {\n\t\t\t\t\t\tn = n.children[i]\n\t\t\t\t\t\tnpLen = len(n.path)\n\t\t\t\t\t\tcontinue walk\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar rv rune\n\t\t\t\tvar off int\n\t\t\t\tfor max := min(npLen, 3); off \u003c max; off++ {\n\t\t\t\t\tif i := npLen - off; utf8.RuneStart(oldPath[i]) {\n\t\t\t\t\t\trv, _ = utf8.DecodeRuneInString(oldPath[i:])\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlo := unicode.ToLower(rv)\n\t\t\t\tutf8.EncodeRune(rb[:], lo)\n\t\t\t\trb = shiftNRuneBytes(rb, off)\n\t\t\t\tidxc := rb[0]\n\t\t\t\tfor i, c := range []byte(n.indices) {\n\t\t\t\t\tif c == idxc {\n\t\t\t\t\t\tif out := n.children[i].findCaseInsensitivePathRec(path, ciPath, rb, fixTrailingSlash); out != nil {\n\t\t\t\t\t\t\treturn out\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif up := unicode.ToUpper(rv); up != lo {\n\t\t\t\t\tutf8.EncodeRune(rb[:], up)\n\t\t\t\t\trb = shiftNRuneBytes(rb, off)\n\t\t\t\t\tidxc := rb[0]\n\t\t\t\t\tfor i, c := range []byte(n.indices) {\n\t\t\t\t\t\tif c == idxc {\n\t\t\t\t\t\t\tn = n.children[i]\n\t\t\t\t\t\t\tnpLen = len(n.path)\n\t\t\t\t\t\t\tcontinue walk\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif fixTrailingSlash \u0026\u0026 path == \"/\" \u0026\u0026 n.handlers != nil {\n\t\t\t\treturn ciPath\n\t\t\t}\n\t\t\treturn nil\n\t\t}\n\t\tn = n.children[0]\n\t\tswitch n.nType {\n\t\tcase param:\n\t\t\tend := 0\n\t\t\tfor end \u003c len(path) \u0026\u0026 path[end] != '/' {\n\t\t\t\tend++\n\t\t\t}\n\t\t\tciPath = append(ciPath, path[:end]...)\n\t\t\tif end \u003c len(path) {\n\t\t\t\tif len(n.children) \u003e 0 {\n\t\t\t\t\tn = n.children[0]\n\t\t\t\t\tnpLen = len(n.path)\n\t\t\t\t\tpath = path[end:]\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\t\t\t\tif fixTrailingSlash \u0026\u0026 len(path) == end+1 {\n\t\t\t\t\treturn ciPath\n\t\t\t\t}\n\t\t\t\treturn nil\n\t\t\t}\n\t\t\tif n.handlers != nil {\n\t\t\t\treturn ciPath\n\t\t\t}\n\t\t\tif fixTrailingSlash \u0026\u0026 len(n.children) == 1 {\n\t\t\t\tn = n.children[0]\n\t\t\t\tif n.path == \"/\" \u0026\u0026 n.handlers != nil {\n\t\t\t\t\treturn append(ciPath, '/')\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn nil\n\t\tcase catchAll:\n\t\t\treturn append(ciPath, path...)\n\t\tdefault:\n\t\t\tpanic(\"invalid node type\")\n\t\t}\n\t}\n\tif fixTrailingSlash {\n\t\tif path == \"/\" {\n\t\t\treturn ciPath\n\t\t}\n\t\tif len(path)+1 == npLen \u0026\u0026 n.path[len(path)] == '/' \u0026\u0026 strings.EqualFold(path[1:], n.path[1:len(path)]) \u0026\u0026 n.handlers != nil {\n\t\t\treturn append(ciPath, n.path...)\n\t\t}\n\t}\n\treturn nil\n}","nodeType":"FunctionDeclaration","column":0,"line":0,"doc":null,"receiver":{"children":[],"start":18351,"end":18360,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":18351,"list":[{"children":[],"start":18352,"end":18359,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":18352,"end":18353,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":18352,"name":"n","object":null}],"type":{"children":[],"start":18354,"end":18359,"code":"*node","nodeType":"StarExpression","column":0,"line":0,"star":18354,"expression":{"children":[],"start":18355,"end":18359,"code":"node","nodeType":"Identifier","column":0,"line":0,"namePos":18355,"name":"node","object":null}},"tag":null,"comment":null}],"closing":18359},"name":{"children":[],"start":18361,"end":18387,"code":"findCaseInsensitivePathRec","nodeType":"Identifier","column":0,"line":0,"namePos":18361,"name":"findCaseInsensitivePathRec","object":null},"type":{"children":[],"start":18346,"end":18457,"code":"func(path string, ciPath []byte, rb [4]byte, fixTrailingSlash bool) []byte","nodeType":"FunctionType","column":0,"line":0,"Function":18346,"TypeParams":null,"Params":{"children":[],"start":18387,"end":18450,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":18387,"list":[{"children":[],"start":18388,"end":18399,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":18388,"end":18392,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":18388,"name":"path","object":null}],"type":{"children":[],"start":18393,"end":18399,"code":"string","nodeType":"Identifier","column":0,"line":0,"namePos":18393,"name":"string","object":null},"tag":null,"comment":null},{"children":[],"start":18401,"end":18414,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":18401,"end":18407,"code":"ciPath","nodeType":"Identifier","column":0,"line":0,"namePos":18401,"name":"ciPath","object":null}],"type":{"children":[],"start":18408,"end":18414,"code":"[]byte","nodeType":"ArrayType","column":0,"line":0,"leftBracket":18408,"length":null,"element":{"children":[],"start":18410,"end":18414,"code":"byte","nodeType":"Identifier","column":0,"line":0,"namePos":18410,"name":"byte","object":null}},"tag":null,"comment":null},{"children":[],"start":18416,"end":18426,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":18416,"end":18418,"code":"rb","nodeType":"Identifier","column":0,"line":0,"namePos":18416,"name":"rb","object":null}],"type":{"children":[],"start":18419,"end":18426,"code":"[4]byte","nodeType":"ArrayType","column":0,"line":0,"leftBracket":18419,"length":{"children":[],"start":18420,"end":18421,"code":"4","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":18420,"kind":5,"value":"4"},"element":{"children":[],"start":18422,"end":18426,"code":"byte","nodeType":"Identifier","column":0,"line":0,"namePos":18422,"name":"byte","object":null}},"tag":null,"comment":null},{"children":[],"start":18428,"end":18449,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":18428,"end":18444,"code":"fixTrailingSlash","nodeType":"Identifier","column":0,"line":0,"namePos":18428,"name":"fixTrailingSlash","object":null}],"type":{"children":[],"start":18445,"end":18449,"code":"bool","nodeType":"Identifier","column":0,"line":0,"namePos":18445,"name":"bool","object":null},"tag":null,"comment":null}],"closing":18449},"Results":{"children":[],"start":18451,"end":18457,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":0,"list":[{"children":[],"start":18451,"end":18457,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":null,"type":{"children":[],"start":18451,"end":18457,"code":"[]byte","nodeType":"ArrayType","column":0,"line":0,"leftBracket":18451,"length":null,"element":{"children":[],"start":18453,"end":18457,"code":"byte","nodeType":"Identifier","column":0,"line":0,"namePos":18453,"name":"byte","object":null}},"tag":null,"comment":null}],"closing":0}},"body":{"children":[],"start":18458,"end":22795,"code":"{\n\tnpLen := len(n.path)\nwalk:\n\tfor len(path) \u003e= npLen \u0026\u0026 (npLen == 0 || strings.EqualFold(path[1:npLen], n.path[1:])) {\n\t\toldPath := path\n\t\tpath = path[npLen:]\n\t\tciPath = append(ciPath, n.path...)\n\t\tif len(path) == 0 {\n\t\t\tif n.handlers != nil {\n\t\t\t\treturn ciPath\n\t\t\t}\n\t\t\tif fixTrailingSlash {\n\t\t\t\tfor i, c := range []byte(n.indices) {\n\t\t\t\t\tif c == '/' {\n\t\t\t\t\t\tn = n.children[i]\n\t\t\t\t\t\tif (len(n.path) == 1 \u0026\u0026 n.handlers != nil) || (n.nType == catchAll \u0026\u0026 n.children[0].handlers != nil) {\n\t\t\t\t\t\t\treturn append(ciPath, '/')\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn nil\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn nil\n\t\t}\n\t\tif !n.wildChild {\n\t\t\trb = shiftNRuneBytes(rb, npLen)\n\t\t\tif rb[0] != 0 {\n\t\t\t\tidxc := rb[0]\n\t\t\t\tfor i, c := range []byte(n.indices) {\n\t\t\t\t\tif c == idxc {\n\t\t\t\t\t\tn = n.children[i]\n\t\t\t\t\t\tnpLen = len(n.path)\n\t\t\t\t\t\tcontinue walk\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar rv rune\n\t\t\t\tvar off int\n\t\t\t\tfor max := min(npLen, 3); off \u003c max; off++ {\n\t\t\t\t\tif i := npLen - off; utf8.RuneStart(oldPath[i]) {\n\t\t\t\t\t\trv, _ = utf8.DecodeRuneInString(oldPath[i:])\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlo := unicode.ToLower(rv)\n\t\t\t\tutf8.EncodeRune(rb[:], lo)\n\t\t\t\trb = shiftNRuneBytes(rb, off)\n\t\t\t\tidxc := rb[0]\n\t\t\t\tfor i, c := range []byte(n.indices) {\n\t\t\t\t\tif c == idxc {\n\t\t\t\t\t\tif out := n.children[i].findCaseInsensitivePathRec(path, ciPath, rb, fixTrailingSlash); out != nil {\n\t\t\t\t\t\t\treturn out\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif up := unicode.ToUpper(rv); up != lo {\n\t\t\t\t\tutf8.EncodeRune(rb[:], up)\n\t\t\t\t\trb = shiftNRuneBytes(rb, off)\n\t\t\t\t\tidxc := rb[0]\n\t\t\t\t\tfor i, c := range []byte(n.indices) {\n\t\t\t\t\t\tif c == idxc {\n\t\t\t\t\t\t\tn = n.children[i]\n\t\t\t\t\t\t\tnpLen = len(n.path)\n\t\t\t\t\t\t\tcontinue walk\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif fixTrailingSlash \u0026\u0026 path == \"/\" \u0026\u0026 n.handlers != nil {\n\t\t\t\treturn ciPath\n\t\t\t}\n\t\t\treturn nil\n\t\t}\n\t\tn = n.children[0]\n\t\tswitch n.nType {\n\t\tcase param:\n\t\t\tend := 0\n\t\t\tfor end \u003c len(path) \u0026\u0026 path[end] != '/' {\n\t\t\t\tend++\n\t\t\t}\n\t\t\tciPath = append(ciPath, path[:end]...)\n\t\t\tif end \u003c len(path) {\n\t\t\t\tif len(n.children) \u003e 0 {\n\t\t\t\t\tn = n.children[0]\n\t\t\t\t\tnpLen = len(n.path)\n\t\t\t\t\tpath = path[end:]\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\t\t\t\tif fixTrailingSlash \u0026\u0026 len(path) == end+1 {\n\t\t\t\t\treturn ciPath\n\t\t\t\t}\n\t\t\t\treturn nil\n\t\t\t}\n\t\t\tif n.handlers != nil {\n\t\t\t\treturn ciPath\n\t\t\t}\n\t\t\tif fixTrailingSlash \u0026\u0026 len(n.children) == 1 {\n\t\t\t\tn = n.children[0]\n\t\t\t\tif n.path == \"/\" \u0026\u0026 n.handlers != nil {\n\t\t\t\t\treturn append(ciPath, '/')\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn nil\n\t\tcase catchAll:\n\t\t\treturn append(ciPath, path...)\n\t\tdefault:\n\t\t\tpanic(\"invalid node type\")\n\t\t}\n\t}\n\tif fixTrailingSlash {\n\t\tif path == \"/\" {\n\t\t\treturn ciPath\n\t\t}\n\t\tif len(path)+1 == npLen \u0026\u0026 n.path[len(path)] == '/' \u0026\u0026 strings.EqualFold(path[1:], n.path[1:len(path)]) \u0026\u0026 n.handlers != nil {\n\t\t\treturn append(ciPath, n.path...)\n\t\t}\n\t}\n\treturn nil\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":18458,"list":[{"children":[],"start":18461,"end":18481,"code":"npLen := len(n.path)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":18461,"end":18466,"code":"npLen","nodeType":"Identifier","column":0,"line":0,"namePos":18461,"name":"npLen","object":null}],"tokenPos":18467,"token":47,"rhs":[{"children":[],"start":18470,"end":18481,"code":"len(n.path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":18470,"end":18473,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":18470,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":18474,"end":18480,"code":"n.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":18474,"end":18475,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":18474,"name":"n","object":null},"sel":{"children":[],"start":18476,"end":18480,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":18476,"name":"path","object":null}}],"ellipsis":0,"rparen":0}]},{"children":[],"start":18483,"end":22461,"code":"walk:\n\tfor len(path) \u003e= npLen \u0026\u0026 (npLen == 0 || strings.EqualFold(path[1:npLen], n.path[1:])) {\n\t\toldPath := path\n\t\tpath = path[npLen:]\n\t\tciPath = append(ciPath, n.path...)\n\t\tif len(path) == 0 {\n\t\t\tif n.handlers != nil {\n\t\t\t\treturn ciPath\n\t\t\t}\n\t\t\tif fixTrailingSlash {\n\t\t\t\tfor i, c := range []byte(n.indices) {\n\t\t\t\t\tif c == '/' {\n\t\t\t\t\t\tn = n.children[i]\n\t\t\t\t\t\tif (len(n.path) == 1 \u0026\u0026 n.handlers != nil) || (n.nType == catchAll \u0026\u0026 n.children[0].handlers != nil) {\n\t\t\t\t\t\t\treturn append(ciPath, '/')\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn nil\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn nil\n\t\t}\n\t\tif !n.wildChild {\n\t\t\trb = shiftNRuneBytes(rb, npLen)\n\t\t\tif rb[0] != 0 {\n\t\t\t\tidxc := rb[0]\n\t\t\t\tfor i, c := range []byte(n.indices) {\n\t\t\t\t\tif c == idxc {\n\t\t\t\t\t\tn = n.children[i]\n\t\t\t\t\t\tnpLen = len(n.path)\n\t\t\t\t\t\tcontinue walk\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar rv rune\n\t\t\t\tvar off int\n\t\t\t\tfor max := min(npLen, 3); off \u003c max; off++ {\n\t\t\t\t\tif i := npLen - off; utf8.RuneStart(oldPath[i]) {\n\t\t\t\t\t\trv, _ = utf8.DecodeRuneInString(oldPath[i:])\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlo := unicode.ToLower(rv)\n\t\t\t\tutf8.EncodeRune(rb[:], lo)\n\t\t\t\trb = shiftNRuneBytes(rb, off)\n\t\t\t\tidxc := rb[0]\n\t\t\t\tfor i, c := range []byte(n.indices) {\n\t\t\t\t\tif c == idxc {\n\t\t\t\t\t\tif out := n.children[i].findCaseInsensitivePathRec(path, ciPath, rb, fixTrailingSlash); out != nil {\n\t\t\t\t\t\t\treturn out\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif up := unicode.ToUpper(rv); up != lo {\n\t\t\t\t\tutf8.EncodeRune(rb[:], up)\n\t\t\t\t\trb = shiftNRuneBytes(rb, off)\n\t\t\t\t\tidxc := rb[0]\n\t\t\t\t\tfor i, c := range []byte(n.indices) {\n\t\t\t\t\t\tif c == idxc {\n\t\t\t\t\t\t\tn = n.children[i]\n\t\t\t\t\t\t\tnpLen = len(n.path)\n\t\t\t\t\t\t\tcontinue walk\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif fixTrailingSlash \u0026\u0026 path == \"/\" \u0026\u0026 n.handlers != nil {\n\t\t\t\treturn ciPath\n\t\t\t}\n\t\t\treturn nil\n\t\t}\n\t\tn = n.children[0]\n\t\tswitch n.nType {\n\t\tcase param:\n\t\t\tend := 0\n\t\t\tfor end \u003c len(path) \u0026\u0026 path[end] != '/' {\n\t\t\t\tend++\n\t\t\t}\n\t\t\tciPath = append(ciPath, path[:end]...)\n\t\t\tif end \u003c len(path) {\n\t\t\t\tif len(n.children) \u003e 0 {\n\t\t\t\t\tn = n.children[0]\n\t\t\t\t\tnpLen = len(n.path)\n\t\t\t\t\tpath = path[end:]\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\t\t\t\tif fixTrailingSlash \u0026\u0026 len(path) == end+1 {\n\t\t\t\t\treturn ciPath\n\t\t\t\t}\n\t\t\t\treturn nil\n\t\t\t}\n\t\t\tif n.handlers != nil {\n\t\t\t\treturn ciPath\n\t\t\t}\n\t\t\tif fixTrailingSlash \u0026\u0026 len(n.children) == 1 {\n\t\t\t\tn = n.children[0]\n\t\t\t\tif n.path == \"/\" \u0026\u0026 n.handlers != nil {\n\t\t\t\t\treturn append(ciPath, '/')\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn nil\n\t\tcase catchAll:\n\t\t\treturn append(ciPath, path...)\n\t\tdefault:\n\t\t\tpanic(\"invalid node type\")\n\t\t}\n\t}","nodeType":"LabeledStatement","column":0,"line":0,"statement":{"children":[],"start":18525,"end":22461,"code":"for len(path) \u003e= npLen \u0026\u0026 (npLen == 0 || strings.EqualFold(path[1:npLen], n.path[1:])) {\n\toldPath := path\n\tpath = path[npLen:]\n\tciPath = append(ciPath, n.path...)\n\tif len(path) == 0 {\n\t\tif n.handlers != nil {\n\t\t\treturn ciPath\n\t\t}\n\t\tif fixTrailingSlash {\n\t\t\tfor i, c := range []byte(n.indices) {\n\t\t\t\tif c == '/' {\n\t\t\t\t\tn = n.children[i]\n\t\t\t\t\tif (len(n.path) == 1 \u0026\u0026 n.handlers != nil) || (n.nType == catchAll \u0026\u0026 n.children[0].handlers != nil) {\n\t\t\t\t\t\treturn append(ciPath, '/')\n\t\t\t\t\t}\n\t\t\t\t\treturn nil\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn nil\n\t}\n\tif !n.wildChild {\n\t\trb = shiftNRuneBytes(rb, npLen)\n\t\tif rb[0] != 0 {\n\t\t\tidxc := rb[0]\n\t\t\tfor i, c := range []byte(n.indices) {\n\t\t\t\tif c == idxc {\n\t\t\t\t\tn = n.children[i]\n\t\t\t\t\tnpLen = len(n.path)\n\t\t\t\t\tcontinue walk\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tvar rv rune\n\t\t\tvar off int\n\t\t\tfor max := min(npLen, 3); off \u003c max; off++ {\n\t\t\t\tif i := npLen - off; utf8.RuneStart(oldPath[i]) {\n\t\t\t\t\trv, _ = utf8.DecodeRuneInString(oldPath[i:])\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tlo := unicode.ToLower(rv)\n\t\t\tutf8.EncodeRune(rb[:], lo)\n\t\t\trb = shiftNRuneBytes(rb, off)\n\t\t\tidxc := rb[0]\n\t\t\tfor i, c := range []byte(n.indices) {\n\t\t\t\tif c == idxc {\n\t\t\t\t\tif out := n.children[i].findCaseInsensitivePathRec(path, ciPath, rb, fixTrailingSlash); out != nil {\n\t\t\t\t\t\treturn out\n\t\t\t\t\t}\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif up := unicode.ToUpper(rv); up != lo {\n\t\t\t\tutf8.EncodeRune(rb[:], up)\n\t\t\t\trb = shiftNRuneBytes(rb, off)\n\t\t\t\tidxc := rb[0]\n\t\t\t\tfor i, c := range []byte(n.indices) {\n\t\t\t\t\tif c == idxc {\n\t\t\t\t\t\tn = n.children[i]\n\t\t\t\t\t\tnpLen = len(n.path)\n\t\t\t\t\t\tcontinue walk\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif fixTrailingSlash \u0026\u0026 path == \"/\" \u0026\u0026 n.handlers != nil {\n\t\t\treturn ciPath\n\t\t}\n\t\treturn nil\n\t}\n\tn = n.children[0]\n\tswitch n.nType {\n\tcase param:\n\t\tend := 0\n\t\tfor end \u003c len(path) \u0026\u0026 path[end] != '/' {\n\t\t\tend++\n\t\t}\n\t\tciPath = append(ciPath, path[:end]...)\n\t\tif end \u003c len(path) {\n\t\t\tif len(n.children) \u003e 0 {\n\t\t\t\tn = n.children[0]\n\t\t\t\tnpLen = len(n.path)\n\t\t\t\tpath = path[end:]\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tif fixTrailingSlash \u0026\u0026 len(path) == end+1 {\n\t\t\t\treturn ciPath\n\t\t\t}\n\t\t\treturn nil\n\t\t}\n\t\tif n.handlers != nil {\n\t\t\treturn ciPath\n\t\t}\n\t\tif fixTrailingSlash \u0026\u0026 len(n.children) == 1 {\n\t\t\tn = n.children[0]\n\t\t\tif n.path == \"/\" \u0026\u0026 n.handlers != nil {\n\t\t\t\treturn append(ciPath, '/')\n\t\t\t}\n\t\t}\n\t\treturn nil\n\tcase catchAll:\n\t\treturn append(ciPath, path...)\n\tdefault:\n\t\tpanic(\"invalid node type\")\n\t}\n}","nodeType":"ForStatement","column":0,"line":0,"for":18525,"initialization":null,"condition":{"children":[],"start":18529,"end":18611,"code":"len(path) \u003e= npLen \u0026\u0026 (npLen == 0 || strings.EqualFold(path[1:npLen], n.path[1:]))","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":18529,"end":18547,"code":"len(path) \u003e= npLen","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":18529,"end":18538,"code":"len(path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":18529,"end":18532,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":18529,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":18533,"end":18537,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":18533,"name":"path","object":null}],"ellipsis":0,"rparen":0},"opPos":18539,"op":46,"rightExpression":{"children":[],"start":18542,"end":18547,"code":"npLen","nodeType":"Identifier","column":0,"line":0,"namePos":18542,"name":"npLen","object":null}},"opPos":18548,"op":34,"rightExpression":{"children":[],"start":18551,"end":18611,"code":"(npLen == 0 || strings.EqualFold(path[1:npLen], n.path[1:]))","nodeType":"ParenthesizedExpression","column":0,"line":0,"lparen":18551,"expression":{"children":[],"start":18552,"end":18610,"code":"npLen == 0 || strings.EqualFold(path[1:npLen], n.path[1:])","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":18552,"end":18562,"code":"npLen == 0","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":18552,"end":18557,"code":"npLen","nodeType":"Identifier","column":0,"line":0,"namePos":18552,"name":"npLen","object":null},"opPos":18558,"op":39,"rightExpression":{"children":[],"start":18561,"end":18562,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":18561,"kind":5,"value":"0"}},"opPos":18563,"op":35,"rightExpression":{"children":[],"start":18566,"end":18610,"code":"strings.EqualFold(path[1:npLen], n.path[1:])","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":18566,"end":18583,"code":"strings.EqualFold","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":18566,"end":18573,"code":"strings","nodeType":"Identifier","column":0,"line":0,"namePos":18566,"name":"strings","object":null},"sel":{"children":[],"start":18574,"end":18583,"code":"EqualFold","nodeType":"Identifier","column":0,"line":0,"namePos":18574,"name":"EqualFold","object":null}},"lparen":0,"args":[{"children":[],"start":18584,"end":18597,"code":"path[1:npLen]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":18584,"end":18588,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":18584,"name":"path","object":null},"leftBracket":18588,"low":{"children":[],"start":18589,"end":18590,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":18589,"kind":5,"value":"1"},"high":{"children":[],"start":18591,"end":18596,"code":"npLen","nodeType":"Identifier","column":0,"line":0,"namePos":18591,"name":"npLen","object":null},"max":null,"slice3":false,"rightBracket":18596},{"children":[],"start":18599,"end":18609,"code":"n.path[1:]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":18599,"end":18605,"code":"n.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":18599,"end":18600,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":18599,"name":"n","object":null},"sel":{"children":[],"start":18601,"end":18605,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":18601,"name":"path","object":null}},"leftBracket":18605,"low":{"children":[],"start":18606,"end":18607,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":18606,"kind":5,"value":"1"},"high":null,"max":null,"slice3":false,"rightBracket":18608}],"ellipsis":0,"rparen":0}},"rparen":18610}},"post":null,"body":{"children":[],"start":18612,"end":22461,"code":"{\n\toldPath := path\n\tpath = path[npLen:]\n\tciPath = append(ciPath, n.path...)\n\tif len(path) == 0 {\n\t\tif n.handlers != nil {\n\t\t\treturn ciPath\n\t\t}\n\t\tif fixTrailingSlash {\n\t\t\tfor i, c := range []byte(n.indices) {\n\t\t\t\tif c == '/' {\n\t\t\t\t\tn = n.children[i]\n\t\t\t\t\tif (len(n.path) == 1 \u0026\u0026 n.handlers != nil) || (n.nType == catchAll \u0026\u0026 n.children[0].handlers != nil) {\n\t\t\t\t\t\treturn append(ciPath, '/')\n\t\t\t\t\t}\n\t\t\t\t\treturn nil\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn nil\n\t}\n\tif !n.wildChild {\n\t\trb = shiftNRuneBytes(rb, npLen)\n\t\tif rb[0] != 0 {\n\t\t\tidxc := rb[0]\n\t\t\tfor i, c := range []byte(n.indices) {\n\t\t\t\tif c == idxc {\n\t\t\t\t\tn = n.children[i]\n\t\t\t\t\tnpLen = len(n.path)\n\t\t\t\t\tcontinue walk\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tvar rv rune\n\t\t\tvar off int\n\t\t\tfor max := min(npLen, 3); off \u003c max; off++ {\n\t\t\t\tif i := npLen - off; utf8.RuneStart(oldPath[i]) {\n\t\t\t\t\trv, _ = utf8.DecodeRuneInString(oldPath[i:])\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tlo := unicode.ToLower(rv)\n\t\t\tutf8.EncodeRune(rb[:], lo)\n\t\t\trb = shiftNRuneBytes(rb, off)\n\t\t\tidxc := rb[0]\n\t\t\tfor i, c := range []byte(n.indices) {\n\t\t\t\tif c == idxc {\n\t\t\t\t\tif out := n.children[i].findCaseInsensitivePathRec(path, ciPath, rb, fixTrailingSlash); out != nil {\n\t\t\t\t\t\treturn out\n\t\t\t\t\t}\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif up := unicode.ToUpper(rv); up != lo {\n\t\t\t\tutf8.EncodeRune(rb[:], up)\n\t\t\t\trb = shiftNRuneBytes(rb, off)\n\t\t\t\tidxc := rb[0]\n\t\t\t\tfor i, c := range []byte(n.indices) {\n\t\t\t\t\tif c == idxc {\n\t\t\t\t\t\tn = n.children[i]\n\t\t\t\t\t\tnpLen = len(n.path)\n\t\t\t\t\t\tcontinue walk\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif fixTrailingSlash \u0026\u0026 path == \"/\" \u0026\u0026 n.handlers != nil {\n\t\t\treturn ciPath\n\t\t}\n\t\treturn nil\n\t}\n\tn = n.children[0]\n\tswitch n.nType {\n\tcase param:\n\t\tend := 0\n\t\tfor end \u003c len(path) \u0026\u0026 path[end] != '/' {\n\t\t\tend++\n\t\t}\n\t\tciPath = append(ciPath, path[:end]...)\n\t\tif end \u003c len(path) {\n\t\t\tif len(n.children) \u003e 0 {\n\t\t\t\tn = n.children[0]\n\t\t\t\tnpLen = len(n.path)\n\t\t\t\tpath = path[end:]\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tif fixTrailingSlash \u0026\u0026 len(path) == end+1 {\n\t\t\t\treturn ciPath\n\t\t\t}\n\t\t\treturn nil\n\t\t}\n\t\tif n.handlers != nil {\n\t\t\treturn ciPath\n\t\t}\n\t\tif fixTrailingSlash \u0026\u0026 len(n.children) == 1 {\n\t\t\tn = n.children[0]\n\t\t\tif n.path == \"/\" \u0026\u0026 n.handlers != nil {\n\t\t\t\treturn append(ciPath, '/')\n\t\t\t}\n\t\t}\n\t\treturn nil\n\tcase catchAll:\n\t\treturn append(ciPath, path...)\n\tdefault:\n\t\tpanic(\"invalid node type\")\n\t}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":18612,"list":[{"children":[],"start":18649,"end":18664,"code":"oldPath := path","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":18649,"end":18656,"code":"oldPath","nodeType":"Identifier","column":0,"line":0,"namePos":18649,"name":"oldPath","object":null}],"tokenPos":18657,"token":47,"rhs":[{"children":[],"start":18660,"end":18664,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":18660,"name":"path","object":null}]},{"children":[],"start":18667,"end":18686,"code":"path = path[npLen:]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":18667,"end":18671,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":18667,"name":"path","object":null}],"tokenPos":18672,"token":42,"rhs":[{"children":[],"start":18674,"end":18686,"code":"path[npLen:]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":18674,"end":18678,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":18674,"name":"path","object":null},"leftBracket":18678,"low":{"children":[],"start":18679,"end":18684,"code":"npLen","nodeType":"Identifier","column":0,"line":0,"namePos":18679,"name":"npLen","object":null},"high":null,"max":null,"slice3":false,"rightBracket":18685}]},{"children":[],"start":18689,"end":18723,"code":"ciPath = append(ciPath, n.path...)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":18689,"end":18695,"code":"ciPath","nodeType":"Identifier","column":0,"line":0,"namePos":18689,"name":"ciPath","object":null}],"tokenPos":18696,"token":42,"rhs":[{"children":[],"start":18698,"end":18723,"code":"append(ciPath, n.path...)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":18698,"end":18704,"code":"append","nodeType":"Identifier","column":0,"line":0,"namePos":18698,"name":"append","object":null},"lparen":0,"args":[{"children":[],"start":18705,"end":18711,"code":"ciPath","nodeType":"Identifier","column":0,"line":0,"namePos":18705,"name":"ciPath","object":null},{"children":[],"start":18713,"end":18719,"code":"n.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":18713,"end":18714,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":18713,"name":"n","object":null},"sel":{"children":[],"start":18715,"end":18719,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":18715,"name":"path","object":null}}],"ellipsis":0,"rparen":0}]},{"children":[],"start":18727,"end":19304,"code":"if len(path) == 0 {\n\tif n.handlers != nil {\n\t\treturn ciPath\n\t}\n\tif fixTrailingSlash {\n\t\tfor i, c := range []byte(n.indices) {\n\t\t\tif c == '/' {\n\t\t\t\tn = n.children[i]\n\t\t\t\tif (len(n.path) == 1 \u0026\u0026 n.handlers != nil) || (n.nType == catchAll \u0026\u0026 n.children[0].handlers != nil) {\n\t\t\t\t\treturn append(ciPath, '/')\n\t\t\t\t}\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t}\n\treturn nil\n}","nodeType":"IfStatement","column":0,"line":0,"if":18727,"initialization":null,"condition":{"children":[],"start":18730,"end":18744,"code":"len(path) == 0","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":18730,"end":18739,"code":"len(path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":18730,"end":18733,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":18730,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":18734,"end":18738,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":18734,"name":"path","object":null}],"ellipsis":0,"rparen":0},"opPos":18740,"op":39,"rightExpression":{"children":[],"start":18743,"end":18744,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":18743,"kind":5,"value":"0"}},"body":{"children":[],"start":18745,"end":19304,"code":"{\n\tif n.handlers != nil {\n\t\treturn ciPath\n\t}\n\tif fixTrailingSlash {\n\t\tfor i, c := range []byte(n.indices) {\n\t\t\tif c == '/' {\n\t\t\t\tn = n.children[i]\n\t\t\t\tif (len(n.path) == 1 \u0026\u0026 n.handlers != nil) || (n.nType == catchAll \u0026\u0026 n.children[0].handlers != nil) {\n\t\t\t\t\treturn append(ciPath, '/')\n\t\t\t\t}\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t}\n\treturn nil\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":18745,"list":[{"children":[],"start":18861,"end":18906,"code":"if n.handlers != nil {\n\treturn ciPath\n}","nodeType":"IfStatement","column":0,"line":0,"if":18861,"initialization":null,"condition":{"children":[],"start":18864,"end":18881,"code":"n.handlers != nil","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":18864,"end":18874,"code":"n.handlers","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":18864,"end":18865,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":18864,"name":"n","object":null},"sel":{"children":[],"start":18866,"end":18874,"code":"handlers","nodeType":"Identifier","column":0,"line":0,"namePos":18866,"name":"handlers","object":null}},"opPos":18875,"op":44,"rightExpression":{"children":[],"start":18878,"end":18881,"code":"nil","nodeType":"Identifier","column":0,"line":0,"namePos":18878,"name":"nil","object":null}},"body":{"children":[],"start":18882,"end":18906,"code":"{\n\treturn ciPath\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":18882,"list":[{"children":[],"start":18888,"end":18901,"code":"return ciPath","nodeType":"ReturnStatement","column":0,"line":0,"return":18888,"results":[{"children":[],"start":18895,"end":18901,"code":"ciPath","nodeType":"Identifier","column":0,"line":0,"namePos":18895,"name":"ciPath","object":null}]}],"rbrace":18905},"else":null},{"children":[],"start":18987,"end":19286,"code":"if fixTrailingSlash {\n\tfor i, c := range []byte(n.indices) {\n\t\tif c == '/' {\n\t\t\tn = n.children[i]\n\t\t\tif (len(n.path) == 1 \u0026\u0026 n.handlers != nil) || (n.nType == catchAll \u0026\u0026 n.children[0].handlers != nil) {\n\t\t\t\treturn append(ciPath, '/')\n\t\t\t}\n\t\t\treturn nil\n\t\t}\n\t}\n}","nodeType":"IfStatement","column":0,"line":0,"if":18987,"initialization":null,"condition":{"children":[],"start":18990,"end":19006,"code":"fixTrailingSlash","nodeType":"Identifier","column":0,"line":0,"namePos":18990,"name":"fixTrailingSlash","object":null},"body":{"children":[],"start":19007,"end":19286,"code":"{\n\tfor i, c := range []byte(n.indices) {\n\t\tif c == '/' {\n\t\t\tn = n.children[i]\n\t\t\tif (len(n.path) == 1 \u0026\u0026 n.handlers != nil) || (n.nType == catchAll \u0026\u0026 n.children[0].handlers != nil) {\n\t\t\t\treturn append(ciPath, '/')\n\t\t\t}\n\t\t\treturn nil\n\t\t}\n\t}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":19007,"list":[{"children":[],"start":19013,"end":19281,"code":"for i, c := range []byte(n.indices) {\n\tif c == '/' {\n\t\tn = n.children[i]\n\t\tif (len(n.path) == 1 \u0026\u0026 n.handlers != nil) || (n.nType == catchAll \u0026\u0026 n.children[0].handlers != nil) {\n\t\t\treturn append(ciPath, '/')\n\t\t}\n\t\treturn nil\n\t}\n}","nodeType":"RangeStatement","column":0,"line":0,"for":19013,"key":{"children":[],"start":19017,"end":19018,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":19017,"name":"i","object":null},"value":{"children":[],"start":19020,"end":19021,"code":"c","nodeType":"Identifier","column":0,"line":0,"namePos":19020,"name":"c","object":null},"tokenPos":19022,"token":47,"range":19025,"expression":{"children":[],"start":19031,"end":19048,"code":"[]byte(n.indices)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":19031,"end":19037,"code":"[]byte","nodeType":"ArrayType","column":0,"line":0,"leftBracket":19031,"length":null,"element":{"children":[],"start":19033,"end":19037,"code":"byte","nodeType":"Identifier","column":0,"line":0,"namePos":19033,"name":"byte","object":null}},"lparen":0,"args":[{"children":[],"start":19038,"end":19047,"code":"n.indices","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":19038,"end":19039,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":19038,"name":"n","object":null},"sel":{"children":[],"start":19040,"end":19047,"code":"indices","nodeType":"Identifier","column":0,"line":0,"namePos":19040,"name":"indices","object":null}}],"ellipsis":0,"rparen":0},"body":{"children":[],"start":19049,"end":19281,"code":"{\n\tif c == '/' {\n\t\tn = n.children[i]\n\t\tif (len(n.path) == 1 \u0026\u0026 n.handlers != nil) || (n.nType == catchAll \u0026\u0026 n.children[0].handlers != nil) {\n\t\t\treturn append(ciPath, '/')\n\t\t}\n\t\treturn nil\n\t}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":19049,"list":[{"children":[],"start":19056,"end":19275,"code":"if c == '/' {\n\tn = n.children[i]\n\tif (len(n.path) == 1 \u0026\u0026 n.handlers != nil) || (n.nType == catchAll \u0026\u0026 n.children[0].handlers != nil) {\n\t\treturn append(ciPath, '/')\n\t}\n\treturn nil\n}","nodeType":"IfStatement","column":0,"line":0,"if":19056,"initialization":null,"condition":{"children":[],"start":19059,"end":19067,"code":"c == '/'","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":19059,"end":19060,"code":"c","nodeType":"Identifier","column":0,"line":0,"namePos":19059,"name":"c","object":null},"opPos":19061,"op":39,"rightExpression":{"children":[],"start":19064,"end":19067,"code":"'/'","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":19064,"kind":8,"value":"'/'"}},"body":{"children":[],"start":19068,"end":19275,"code":"{\n\tn = n.children[i]\n\tif (len(n.path) == 1 \u0026\u0026 n.handlers != nil) || (n.nType == catchAll \u0026\u0026 n.children[0].handlers != nil) {\n\t\treturn append(ciPath, '/')\n\t}\n\treturn nil\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":19068,"list":[{"children":[],"start":19076,"end":19093,"code":"n = n.children[i]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":19076,"end":19077,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":19076,"name":"n","object":null}],"tokenPos":19078,"token":42,"rhs":[{"children":[],"start":19080,"end":19093,"code":"n.children[i]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":19080,"end":19090,"code":"n.children","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":19080,"end":19081,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":19080,"name":"n","object":null},"sel":{"children":[],"start":19082,"end":19090,"code":"children","nodeType":"Identifier","column":0,"line":0,"namePos":19082,"name":"children","object":null}},"leftBracket":19090,"index":{"children":[],"start":19091,"end":19092,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":19091,"name":"i","object":null},"rightBracket":19092}]},{"children":[],"start":19100,"end":19251,"code":"if (len(n.path) == 1 \u0026\u0026 n.handlers != nil) || (n.nType == catchAll \u0026\u0026 n.children[0].handlers != nil) {\n\treturn append(ciPath, '/')\n}","nodeType":"IfStatement","column":0,"line":0,"if":19100,"initialization":null,"condition":{"children":[],"start":19103,"end":19207,"code":"(len(n.path) == 1 \u0026\u0026 n.handlers != nil) || (n.nType == catchAll \u0026\u0026 n.children[0].handlers != nil)","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":19103,"end":19142,"code":"(len(n.path) == 1 \u0026\u0026 n.handlers != nil)","nodeType":"ParenthesizedExpression","column":0,"line":0,"lparen":19103,"expression":{"children":[],"start":19104,"end":19141,"code":"len(n.path) == 1 \u0026\u0026 n.handlers != nil","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":19104,"end":19120,"code":"len(n.path) == 1","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":19104,"end":19115,"code":"len(n.path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":19104,"end":19107,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":19104,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":19108,"end":19114,"code":"n.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":19108,"end":19109,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":19108,"name":"n","object":null},"sel":{"children":[],"start":19110,"end":19114,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":19110,"name":"path","object":null}}],"ellipsis":0,"rparen":0},"opPos":19116,"op":39,"rightExpression":{"children":[],"start":19119,"end":19120,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":19119,"kind":5,"value":"1"}},"opPos":19121,"op":34,"rightExpression":{"children":[],"start":19124,"end":19141,"code":"n.handlers != nil","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":19124,"end":19134,"code":"n.handlers","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":19124,"end":19125,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":19124,"name":"n","object":null},"sel":{"children":[],"start":19126,"end":19134,"code":"handlers","nodeType":"Identifier","column":0,"line":0,"namePos":19126,"name":"handlers","object":null}},"opPos":19135,"op":44,"rightExpression":{"children":[],"start":19138,"end":19141,"code":"nil","nodeType":"Identifier","column":0,"line":0,"namePos":19138,"name":"nil","object":null}}},"rparen":19141},"opPos":19143,"op":35,"rightExpression":{"children":[],"start":19153,"end":19207,"code":"(n.nType == catchAll \u0026\u0026 n.children[0].handlers != nil)","nodeType":"ParenthesizedExpression","column":0,"line":0,"lparen":19153,"expression":{"children":[],"start":19154,"end":19206,"code":"n.nType == catchAll \u0026\u0026 n.children[0].handlers != nil","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":19154,"end":19173,"code":"n.nType == catchAll","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":19154,"end":19161,"code":"n.nType","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":19154,"end":19155,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":19154,"name":"n","object":null},"sel":{"children":[],"start":19156,"end":19161,"code":"nType","nodeType":"Identifier","column":0,"line":0,"namePos":19156,"name":"nType","object":null}},"opPos":19162,"op":39,"rightExpression":{"children":[],"start":19165,"end":19173,"code":"catchAll","nodeType":"Identifier","column":0,"line":0,"namePos":19165,"name":"catchAll","object":null}},"opPos":19174,"op":34,"rightExpression":{"children":[],"start":19177,"end":19206,"code":"n.children[0].handlers != nil","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":19177,"end":19199,"code":"n.children[0].handlers","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":19177,"end":19190,"code":"n.children[0]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":19177,"end":19187,"code":"n.children","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":19177,"end":19178,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":19177,"name":"n","object":null},"sel":{"children":[],"start":19179,"end":19187,"code":"children","nodeType":"Identifier","column":0,"line":0,"namePos":19179,"name":"children","object":null}},"leftBracket":19187,"index":{"children":[],"start":19188,"end":19189,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":19188,"kind":5,"value":"0"},"rightBracket":19189},"sel":{"children":[],"start":19191,"end":19199,"code":"handlers","nodeType":"Identifier","column":0,"line":0,"namePos":19191,"name":"handlers","object":null}},"opPos":19200,"op":44,"rightExpression":{"children":[],"start":19203,"end":19206,"code":"nil","nodeType":"Identifier","column":0,"line":0,"namePos":19203,"name":"nil","object":null}}},"rparen":19206}},"body":{"children":[],"start":19208,"end":19251,"code":"{\n\treturn append(ciPath, '/')\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":19208,"list":[{"children":[],"start":19217,"end":19243,"code":"return append(ciPath, '/')","nodeType":"ReturnStatement","column":0,"line":0,"return":19217,"results":[{"children":[],"start":19224,"end":19243,"code":"append(ciPath, '/')","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":19224,"end":19230,"code":"append","nodeType":"Identifier","column":0,"line":0,"namePos":19224,"name":"append","object":null},"lparen":0,"args":[{"children":[],"start":19231,"end":19237,"code":"ciPath","nodeType":"Identifier","column":0,"line":0,"namePos":19231,"name":"ciPath","object":null},{"children":[],"start":19239,"end":19242,"code":"'/'","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":19239,"kind":8,"value":"'/'"}],"ellipsis":0,"rparen":0}]}],"rbrace":19250},"else":null},{"children":[],"start":19258,"end":19268,"code":"return nil","nodeType":"ReturnStatement","column":0,"line":0,"return":19258,"results":[{"children":[],"start":19265,"end":19268,"code":"nil","nodeType":"Identifier","column":0,"line":0,"namePos":19265,"name":"nil","object":null}]}],"rbrace":19274},"else":null}],"rbrace":19280}}],"rbrace":19285},"else":null},{"children":[],"start":19290,"end":19300,"code":"return nil","nodeType":"ReturnStatement","column":0,"line":0,"return":19290,"results":[{"children":[],"start":19297,"end":19300,"code":"nil","nodeType":"Identifier","column":0,"line":0,"namePos":19297,"name":"nil","object":null}]}],"rbrace":19303},"else":null},{"children":[],"start":19463,"end":21461,"code":"if !n.wildChild {\n\trb = shiftNRuneBytes(rb, npLen)\n\tif rb[0] != 0 {\n\t\tidxc := rb[0]\n\t\tfor i, c := range []byte(n.indices) {\n\t\t\tif c == idxc {\n\t\t\t\tn = n.children[i]\n\t\t\t\tnpLen = len(n.path)\n\t\t\t\tcontinue walk\n\t\t\t}\n\t\t}\n\t} else {\n\t\tvar rv rune\n\t\tvar off int\n\t\tfor max := min(npLen, 3); off \u003c max; off++ {\n\t\t\tif i := npLen - off; utf8.RuneStart(oldPath[i]) {\n\t\t\t\trv, _ = utf8.DecodeRuneInString(oldPath[i:])\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\tlo := unicode.ToLower(rv)\n\t\tutf8.EncodeRune(rb[:], lo)\n\t\trb = shiftNRuneBytes(rb, off)\n\t\tidxc := rb[0]\n\t\tfor i, c := range []byte(n.indices) {\n\t\t\tif c == idxc {\n\t\t\t\tif out := n.children[i].findCaseInsensitivePathRec(path, ciPath, rb, fixTrailingSlash); out != nil {\n\t\t\t\t\treturn out\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\tif up := unicode.ToUpper(rv); up != lo {\n\t\t\tutf8.EncodeRune(rb[:], up)\n\t\t\trb = shiftNRuneBytes(rb, off)\n\t\t\tidxc := rb[0]\n\t\t\tfor i, c := range []byte(n.indices) {\n\t\t\t\tif c == idxc {\n\t\t\t\t\tn = n.children[i]\n\t\t\t\t\tnpLen = len(n.path)\n\t\t\t\t\tcontinue walk\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif fixTrailingSlash \u0026\u0026 path == \"/\" \u0026\u0026 n.handlers != nil {\n\t\treturn ciPath\n\t}\n\treturn nil\n}","nodeType":"IfStatement","column":0,"line":0,"if":19463,"initialization":null,"condition":{"children":[],"start":19466,"end":19478,"code":"!n.wildChild","nodeType":"UnaryExpression","column":0,"line":0,"opPos":19466,"op":43,"expression":{"children":[],"start":19467,"end":19478,"code":"n.wildChild","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":19467,"end":19468,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":19467,"name":"n","object":null},"sel":{"children":[],"start":19469,"end":19478,"code":"wildChild","nodeType":"Identifier","column":0,"line":0,"namePos":19469,"name":"wildChild","object":null}}},"body":{"children":[],"start":19479,"end":21461,"code":"{\n\trb = shiftNRuneBytes(rb, npLen)\n\tif rb[0] != 0 {\n\t\tidxc := rb[0]\n\t\tfor i, c := range []byte(n.indices) {\n\t\t\tif c == idxc {\n\t\t\t\tn = n.children[i]\n\t\t\t\tnpLen = len(n.path)\n\t\t\t\tcontinue walk\n\t\t\t}\n\t\t}\n\t} else {\n\t\tvar rv rune\n\t\tvar off int\n\t\tfor max := min(npLen, 3); off \u003c max; off++ {\n\t\t\tif i := npLen - off; utf8.RuneStart(oldPath[i]) {\n\t\t\t\trv, _ = utf8.DecodeRuneInString(oldPath[i:])\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\tlo := unicode.ToLower(rv)\n\t\tutf8.EncodeRune(rb[:], lo)\n\t\trb = shiftNRuneBytes(rb, off)\n\t\tidxc := rb[0]\n\t\tfor i, c := range []byte(n.indices) {\n\t\t\tif c == idxc {\n\t\t\t\tif out := n.children[i].findCaseInsensitivePathRec(path, ciPath, rb, fixTrailingSlash); out != nil {\n\t\t\t\t\treturn out\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\tif up := unicode.ToUpper(rv); up != lo {\n\t\t\tutf8.EncodeRune(rb[:], up)\n\t\t\trb = shiftNRuneBytes(rb, off)\n\t\t\tidxc := rb[0]\n\t\t\tfor i, c := range []byte(n.indices) {\n\t\t\t\tif c == idxc {\n\t\t\t\t\tn = n.children[i]\n\t\t\t\t\tnpLen = len(n.path)\n\t\t\t\t\tcontinue walk\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif fixTrailingSlash \u0026\u0026 path == \"/\" \u0026\u0026 n.handlers != nil {\n\t\treturn ciPath\n\t}\n\treturn nil\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":19479,"list":[{"children":[],"start":19524,"end":19555,"code":"rb = shiftNRuneBytes(rb, npLen)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":19524,"end":19526,"code":"rb","nodeType":"Identifier","column":0,"line":0,"namePos":19524,"name":"rb","object":null}],"tokenPos":19527,"token":42,"rhs":[{"children":[],"start":19529,"end":19555,"code":"shiftNRuneBytes(rb, npLen)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":19529,"end":19544,"code":"shiftNRuneBytes","nodeType":"Identifier","column":0,"line":0,"namePos":19529,"name":"shiftNRuneBytes","object":null},"lparen":0,"args":[{"children":[],"start":19545,"end":19547,"code":"rb","nodeType":"Identifier","column":0,"line":0,"namePos":19545,"name":"rb","object":null},{"children":[],"start":19549,"end":19554,"code":"npLen","nodeType":"Identifier","column":0,"line":0,"namePos":19549,"name":"npLen","object":null}],"ellipsis":0,"rparen":0}]},{"children":[],"start":19560,"end":21230,"code":"if rb[0] != 0 {\n\tidxc := rb[0]\n\tfor i, c := range []byte(n.indices) {\n\t\tif c == idxc {\n\t\t\tn = n.children[i]\n\t\t\tnpLen = len(n.path)\n\t\t\tcontinue walk\n\t\t}\n\t}\n} else {\n\tvar rv rune\n\tvar off int\n\tfor max := min(npLen, 3); off \u003c max; off++ {\n\t\tif i := npLen - off; utf8.RuneStart(oldPath[i]) {\n\t\t\trv, _ = utf8.DecodeRuneInString(oldPath[i:])\n\t\t\tbreak\n\t\t}\n\t}\n\tlo := unicode.ToLower(rv)\n\tutf8.EncodeRune(rb[:], lo)\n\trb = shiftNRuneBytes(rb, off)\n\tidxc := rb[0]\n\tfor i, c := range []byte(n.indices) {\n\t\tif c == idxc {\n\t\t\tif out := n.children[i].findCaseInsensitivePathRec(path, ciPath, rb, fixTrailingSlash); out != nil {\n\t\t\t\treturn out\n\t\t\t}\n\t\t\tbreak\n\t\t}\n\t}\n\tif up := unicode.ToUpper(rv); up != lo {\n\t\tutf8.EncodeRune(rb[:], up)\n\t\trb = shiftNRuneBytes(rb, off)\n\t\tidxc := rb[0]\n\t\tfor i, c := range []byte(n.indices) {\n\t\t\tif c == idxc {\n\t\t\t\tn = n.children[i]\n\t\t\t\tnpLen = len(n.path)\n\t\t\t\tcontinue walk\n\t\t\t}\n\t\t}\n\t}\n}","nodeType":"IfStatement","column":0,"line":0,"if":19560,"initialization":null,"condition":{"children":[],"start":19563,"end":19573,"code":"rb[0] != 0","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":19563,"end":19568,"code":"rb[0]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":19563,"end":19565,"code":"rb","nodeType":"Identifier","column":0,"line":0,"namePos":19563,"name":"rb","object":null},"leftBracket":19565,"index":{"children":[],"start":19566,"end":19567,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":19566,"kind":5,"value":"0"},"rightBracket":19567},"opPos":19569,"op":44,"rightExpression":{"children":[],"start":19572,"end":19573,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":19572,"kind":5,"value":"0"}},"body":{"children":[],"start":19574,"end":19806,"code":"{\n\tidxc := rb[0]\n\tfor i, c := range []byte(n.indices) {\n\t\tif c == idxc {\n\t\t\tn = n.children[i]\n\t\t\tnpLen = len(n.path)\n\t\t\tcontinue walk\n\t\t}\n\t}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":19574,"list":[{"children":[],"start":19609,"end":19622,"code":"idxc := rb[0]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":19609,"end":19613,"code":"idxc","nodeType":"Identifier","column":0,"line":0,"namePos":19609,"name":"idxc","object":null}],"tokenPos":19614,"token":47,"rhs":[{"children":[],"start":19617,"end":19622,"code":"rb[0]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":19617,"end":19619,"code":"rb","nodeType":"Identifier","column":0,"line":0,"namePos":19617,"name":"rb","object":null},"leftBracket":19619,"index":{"children":[],"start":19620,"end":19621,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":19620,"kind":5,"value":"0"},"rightBracket":19621}]},{"children":[],"start":19627,"end":19801,"code":"for i, c := range []byte(n.indices) {\n\tif c == idxc {\n\t\tn = n.children[i]\n\t\tnpLen = len(n.path)\n\t\tcontinue walk\n\t}\n}","nodeType":"RangeStatement","column":0,"line":0,"for":19627,"key":{"children":[],"start":19631,"end":19632,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":19631,"name":"i","object":null},"value":{"children":[],"start":19634,"end":19635,"code":"c","nodeType":"Identifier","column":0,"line":0,"namePos":19634,"name":"c","object":null},"tokenPos":19636,"token":47,"range":19639,"expression":{"children":[],"start":19645,"end":19662,"code":"[]byte(n.indices)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":19645,"end":19651,"code":"[]byte","nodeType":"ArrayType","column":0,"line":0,"leftBracket":19645,"length":null,"element":{"children":[],"start":19647,"end":19651,"code":"byte","nodeType":"Identifier","column":0,"line":0,"namePos":19647,"name":"byte","object":null}},"lparen":0,"args":[{"children":[],"start":19652,"end":19661,"code":"n.indices","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":19652,"end":19653,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":19652,"name":"n","object":null},"sel":{"children":[],"start":19654,"end":19661,"code":"indices","nodeType":"Identifier","column":0,"line":0,"namePos":19654,"name":"indices","object":null}}],"ellipsis":0,"rparen":0},"body":{"children":[],"start":19663,"end":19801,"code":"{\n\tif c == idxc {\n\t\tn = n.children[i]\n\t\tnpLen = len(n.path)\n\t\tcontinue walk\n\t}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":19663,"list":[{"children":[],"start":19670,"end":19795,"code":"if c == idxc {\n\tn = n.children[i]\n\tnpLen = len(n.path)\n\tcontinue walk\n}","nodeType":"IfStatement","column":0,"line":0,"if":19670,"initialization":null,"condition":{"children":[],"start":19673,"end":19682,"code":"c == idxc","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":19673,"end":19674,"code":"c","nodeType":"Identifier","column":0,"line":0,"namePos":19673,"name":"c","object":null},"opPos":19675,"op":39,"rightExpression":{"children":[],"start":19678,"end":19682,"code":"idxc","nodeType":"Identifier","column":0,"line":0,"namePos":19678,"name":"idxc","object":null}},"body":{"children":[],"start":19683,"end":19795,"code":"{\n\tn = n.children[i]\n\tnpLen = len(n.path)\n\tcontinue walk\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":19683,"list":[{"children":[],"start":19725,"end":19742,"code":"n = n.children[i]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":19725,"end":19726,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":19725,"name":"n","object":null}],"tokenPos":19727,"token":42,"rhs":[{"children":[],"start":19729,"end":19742,"code":"n.children[i]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":19729,"end":19739,"code":"n.children","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":19729,"end":19730,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":19729,"name":"n","object":null},"sel":{"children":[],"start":19731,"end":19739,"code":"children","nodeType":"Identifier","column":0,"line":0,"namePos":19731,"name":"children","object":null}},"leftBracket":19739,"index":{"children":[],"start":19740,"end":19741,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":19740,"name":"i","object":null},"rightBracket":19741}]},{"children":[],"start":19749,"end":19768,"code":"npLen = len(n.path)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":19749,"end":19754,"code":"npLen","nodeType":"Identifier","column":0,"line":0,"namePos":19749,"name":"npLen","object":null}],"tokenPos":19755,"token":42,"rhs":[{"children":[],"start":19757,"end":19768,"code":"len(n.path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":19757,"end":19760,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":19757,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":19761,"end":19767,"code":"n.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":19761,"end":19762,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":19761,"name":"n","object":null},"sel":{"children":[],"start":19763,"end":19767,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":19763,"name":"path","object":null}}],"ellipsis":0,"rparen":0}]},{"children":[],"start":19775,"end":19788,"code":"continue walk","nodeType":"BranchStatement","column":0,"line":0,"tokenPosition":19775,"token":65,"label":{"children":[],"start":19784,"end":19788,"code":"walk","nodeType":"Identifier","column":0,"line":0,"namePos":19784,"name":"walk","object":null}}],"rbrace":19794},"else":null}],"rbrace":19800}}],"rbrace":19805},"else":{"children":[],"start":19812,"end":21230,"code":"{\n\tvar rv rune\n\tvar off int\n\tfor max := min(npLen, 3); off \u003c max; off++ {\n\t\tif i := npLen - off; utf8.RuneStart(oldPath[i]) {\n\t\t\trv, _ = utf8.DecodeRuneInString(oldPath[i:])\n\t\t\tbreak\n\t\t}\n\t}\n\tlo := unicode.ToLower(rv)\n\tutf8.EncodeRune(rb[:], lo)\n\trb = shiftNRuneBytes(rb, off)\n\tidxc := rb[0]\n\tfor i, c := range []byte(n.indices) {\n\t\tif c == idxc {\n\t\t\tif out := n.children[i].findCaseInsensitivePathRec(path, ciPath, rb, fixTrailingSlash); out != nil {\n\t\t\t\treturn out\n\t\t\t}\n\t\t\tbreak\n\t\t}\n\t}\n\tif up := unicode.ToUpper(rv); up != lo {\n\t\tutf8.EncodeRune(rb[:], up)\n\t\trb = shiftNRuneBytes(rb, off)\n\t\tidxc := rb[0]\n\t\tfor i, c := range []byte(n.indices) {\n\t\t\tif c == idxc {\n\t\t\t\tn = n.children[i]\n\t\t\t\tnpLen = len(n.path)\n\t\t\t\tcontinue walk\n\t\t\t}\n\t\t}\n\t}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":19812,"list":[{"children":[],"start":19844,"end":19855,"code":"var rv rune","nodeType":"DeclarationStatement","column":0,"line":0,"declaration":{"children":[],"start":19844,"end":19855,"code":"var rv rune","nodeType":"GenericDeclaration","column":0,"line":0,"doc":null,"tokenPosition":19844,"token":85,"lparen":0,"specifications":[{"children":[],"start":19848,"end":19855,"code":"rv rune","nodeType":"ValueSpecification","column":0,"line":0,"doc":null,"names":[{"children":[],"start":19848,"end":19850,"code":"rv","nodeType":"Identifier","column":0,"line":0,"namePos":19848,"name":"rv","object":null}],"type":{"children":[],"start":19851,"end":19855,"code":"rune","nodeType":"Identifier","column":0,"line":0,"namePos":19851,"name":"rune","object":null},"values":[],"comment":null}],"rparen":0}},{"children":[],"start":19965,"end":19976,"code":"var off int","nodeType":"DeclarationStatement","column":0,"line":0,"declaration":{"children":[],"start":19965,"end":19976,"code":"var off int","nodeType":"GenericDeclaration","column":0,"line":0,"doc":null,"tokenPosition":19965,"token":85,"lparen":0,"specifications":[{"children":[],"start":19969,"end":19976,"code":"off int","nodeType":"ValueSpecification","column":0,"line":0,"doc":null,"names":[{"children":[],"start":19969,"end":19972,"code":"off","nodeType":"Identifier","column":0,"line":0,"namePos":19969,"name":"off","object":null}],"type":{"children":[],"start":19973,"end":19976,"code":"int","nodeType":"Identifier","column":0,"line":0,"namePos":19973,"name":"int","object":null},"values":[],"comment":null}],"rparen":0}},{"children":[],"start":19981,"end":20192,"code":"for max := min(npLen, 3); off \u003c max; off++ {\n\tif i := npLen - off; utf8.RuneStart(oldPath[i]) {\n\t\trv, _ = utf8.DecodeRuneInString(oldPath[i:])\n\t\tbreak\n\t}\n}","nodeType":"ForStatement","column":0,"line":0,"for":19981,"initialization":{"children":[],"start":19985,"end":20005,"code":"max := min(npLen, 3)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":19985,"end":19988,"code":"max","nodeType":"Identifier","column":0,"line":0,"namePos":19985,"name":"max","object":null}],"tokenPos":19989,"token":47,"rhs":[{"children":[],"start":19992,"end":20005,"code":"min(npLen, 3)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":19992,"end":19995,"code":"min","nodeType":"Identifier","column":0,"line":0,"namePos":19992,"name":"min","object":null},"lparen":0,"args":[{"children":[],"start":19996,"end":20001,"code":"npLen","nodeType":"Identifier","column":0,"line":0,"namePos":19996,"name":"npLen","object":null},{"children":[],"start":20003,"end":20004,"code":"3","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":20003,"kind":5,"value":"3"}],"ellipsis":0,"rparen":0}]},"condition":{"children":[],"start":20007,"end":20016,"code":"off \u003c max","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":20007,"end":20010,"code":"off","nodeType":"Identifier","column":0,"line":0,"namePos":20007,"name":"off","object":null},"opPos":20011,"op":40,"rightExpression":{"children":[],"start":20013,"end":20016,"code":"max","nodeType":"Identifier","column":0,"line":0,"namePos":20013,"name":"max","object":null}},"post":{"children":[],"start":20018,"end":20023,"code":"off++","nodeType":"IncrementDecrementStatement","column":0,"line":0,"Expression":{"children":[],"start":20018,"end":20021,"code":"off","nodeType":"Identifier","column":0,"line":0,"namePos":20018,"name":"off","object":null},"TokenPosition":20021,"Token":37},"body":{"children":[],"start":20024,"end":20192,"code":"{\n\tif i := npLen - off; utf8.RuneStart(oldPath[i]) {\n\t\trv, _ = utf8.DecodeRuneInString(oldPath[i:])\n\t\tbreak\n\t}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":20024,"list":[{"children":[],"start":20031,"end":20186,"code":"if i := npLen - off; utf8.RuneStart(oldPath[i]) {\n\trv, _ = utf8.DecodeRuneInString(oldPath[i:])\n\tbreak\n}","nodeType":"IfStatement","column":0,"line":0,"if":20031,"initialization":{"children":[],"start":20034,"end":20050,"code":"i := npLen - off","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":20034,"end":20035,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":20034,"name":"i","object":null}],"tokenPos":20036,"token":47,"rhs":[{"children":[],"start":20039,"end":20050,"code":"npLen - off","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":20039,"end":20044,"code":"npLen","nodeType":"Identifier","column":0,"line":0,"namePos":20039,"name":"npLen","object":null},"opPos":20045,"op":13,"rightExpression":{"children":[],"start":20047,"end":20050,"code":"off","nodeType":"Identifier","column":0,"line":0,"namePos":20047,"name":"off","object":null}}]},"condition":{"children":[],"start":20052,"end":20078,"code":"utf8.RuneStart(oldPath[i])","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":20052,"end":20066,"code":"utf8.RuneStart","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":20052,"end":20056,"code":"utf8","nodeType":"Identifier","column":0,"line":0,"namePos":20052,"name":"utf8","object":null},"sel":{"children":[],"start":20057,"end":20066,"code":"RuneStart","nodeType":"Identifier","column":0,"line":0,"namePos":20057,"name":"RuneStart","object":null}},"lparen":0,"args":[{"children":[],"start":20067,"end":20077,"code":"oldPath[i]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":20067,"end":20074,"code":"oldPath","nodeType":"Identifier","column":0,"line":0,"namePos":20067,"name":"oldPath","object":null},"leftBracket":20074,"index":{"children":[],"start":20075,"end":20076,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":20075,"name":"i","object":null},"rightBracket":20076}],"ellipsis":0,"rparen":0},"body":{"children":[],"start":20079,"end":20186,"code":"{\n\trv, _ = utf8.DecodeRuneInString(oldPath[i:])\n\tbreak\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":20079,"list":[{"children":[],"start":20123,"end":20167,"code":"rv, _ = utf8.DecodeRuneInString(oldPath[i:])","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":20123,"end":20125,"code":"rv","nodeType":"Identifier","column":0,"line":0,"namePos":20123,"name":"rv","object":null},{"children":[],"start":20127,"end":20128,"code":"_","nodeType":"Identifier","column":0,"line":0,"namePos":20127,"name":"_","object":null}],"tokenPos":20129,"token":42,"rhs":[{"children":[],"start":20131,"end":20167,"code":"utf8.DecodeRuneInString(oldPath[i:])","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":20131,"end":20154,"code":"utf8.DecodeRuneInString","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":20131,"end":20135,"code":"utf8","nodeType":"Identifier","column":0,"line":0,"namePos":20131,"name":"utf8","object":null},"sel":{"children":[],"start":20136,"end":20154,"code":"DecodeRuneInString","nodeType":"Identifier","column":0,"line":0,"namePos":20136,"name":"DecodeRuneInString","object":null}},"lparen":0,"args":[{"children":[],"start":20155,"end":20166,"code":"oldPath[i:]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":20155,"end":20162,"code":"oldPath","nodeType":"Identifier","column":0,"line":0,"namePos":20155,"name":"oldPath","object":null},"leftBracket":20162,"low":{"children":[],"start":20163,"end":20164,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":20163,"name":"i","object":null},"high":null,"max":null,"slice3":false,"rightBracket":20165}],"ellipsis":0,"rparen":0}]},{"children":[],"start":20174,"end":20179,"code":"break","nodeType":"BranchStatement","column":0,"line":0,"tokenPosition":20174,"token":61,"label":null}],"rbrace":20185},"else":null}],"rbrace":20191}},{"children":[],"start":20247,"end":20272,"code":"lo := unicode.ToLower(rv)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":20247,"end":20249,"code":"lo","nodeType":"Identifier","column":0,"line":0,"namePos":20247,"name":"lo","object":null}],"tokenPos":20250,"token":47,"rhs":[{"children":[],"start":20253,"end":20272,"code":"unicode.ToLower(rv)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":20253,"end":20268,"code":"unicode.ToLower","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":20253,"end":20260,"code":"unicode","nodeType":"Identifier","column":0,"line":0,"namePos":20253,"name":"unicode","object":null},"sel":{"children":[],"start":20261,"end":20268,"code":"ToLower","nodeType":"Identifier","column":0,"line":0,"namePos":20261,"name":"ToLower","object":null}},"lparen":0,"args":[{"children":[],"start":20269,"end":20271,"code":"rv","nodeType":"Identifier","column":0,"line":0,"namePos":20269,"name":"rv","object":null}],"ellipsis":0,"rparen":0}]},{"children":[],"start":20277,"end":20303,"code":"utf8.EncodeRune(rb[:], lo)","nodeType":"ExpressionStatement","column":0,"line":0,"Expression":{"children":[],"start":20277,"end":20303,"code":"utf8.EncodeRune(rb[:], lo)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":20277,"end":20292,"code":"utf8.EncodeRune","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":20277,"end":20281,"code":"utf8","nodeType":"Identifier","column":0,"line":0,"namePos":20277,"name":"utf8","object":null},"sel":{"children":[],"start":20282,"end":20292,"code":"EncodeRune","nodeType":"Identifier","column":0,"line":0,"namePos":20282,"name":"EncodeRune","object":null}},"lparen":0,"args":[{"children":[],"start":20293,"end":20298,"code":"rb[:]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":20293,"end":20295,"code":"rb","nodeType":"Identifier","column":0,"line":0,"namePos":20293,"name":"rb","object":null},"leftBracket":20295,"low":null,"high":null,"max":null,"slice3":false,"rightBracket":20297},{"children":[],"start":20300,"end":20302,"code":"lo","nodeType":"Identifier","column":0,"line":0,"namePos":20300,"name":"lo","object":null}],"ellipsis":0,"rparen":0}},{"children":[],"start":20345,"end":20374,"code":"rb = shiftNRuneBytes(rb, off)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":20345,"end":20347,"code":"rb","nodeType":"Identifier","column":0,"line":0,"namePos":20345,"name":"rb","object":null}],"tokenPos":20348,"token":42,"rhs":[{"children":[],"start":20350,"end":20374,"code":"shiftNRuneBytes(rb, off)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":20350,"end":20365,"code":"shiftNRuneBytes","nodeType":"Identifier","column":0,"line":0,"namePos":20350,"name":"shiftNRuneBytes","object":null},"lparen":0,"args":[{"children":[],"start":20366,"end":20368,"code":"rb","nodeType":"Identifier","column":0,"line":0,"namePos":20366,"name":"rb","object":null},{"children":[],"start":20370,"end":20373,"code":"off","nodeType":"Identifier","column":0,"line":0,"namePos":20370,"name":"off","object":null}],"ellipsis":0,"rparen":0}]},{"children":[],"start":20380,"end":20393,"code":"idxc := rb[0]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":20380,"end":20384,"code":"idxc","nodeType":"Identifier","column":0,"line":0,"namePos":20380,"name":"idxc","object":null}],"tokenPos":20385,"token":47,"rhs":[{"children":[],"start":20388,"end":20393,"code":"rb[0]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":20388,"end":20390,"code":"rb","nodeType":"Identifier","column":0,"line":0,"namePos":20388,"name":"rb","object":null},"leftBracket":20390,"index":{"children":[],"start":20391,"end":20392,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":20391,"kind":5,"value":"0"},"rightBracket":20392}]},{"children":[],"start":20398,"end":20789,"code":"for i, c := range []byte(n.indices) {\n\tif c == idxc {\n\t\tif out := n.children[i].findCaseInsensitivePathRec(path, ciPath, rb, fixTrailingSlash); out != nil {\n\t\t\treturn out\n\t\t}\n\t\tbreak\n\t}\n}","nodeType":"RangeStatement","column":0,"line":0,"for":20398,"key":{"children":[],"start":20402,"end":20403,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":20402,"name":"i","object":null},"value":{"children":[],"start":20405,"end":20406,"code":"c","nodeType":"Identifier","column":0,"line":0,"namePos":20405,"name":"c","object":null},"tokenPos":20407,"token":47,"range":20410,"expression":{"children":[],"start":20416,"end":20433,"code":"[]byte(n.indices)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":20416,"end":20422,"code":"[]byte","nodeType":"ArrayType","column":0,"line":0,"leftBracket":20416,"length":null,"element":{"children":[],"start":20418,"end":20422,"code":"byte","nodeType":"Identifier","column":0,"line":0,"namePos":20418,"name":"byte","object":null}},"lparen":0,"args":[{"children":[],"start":20423,"end":20432,"code":"n.indices","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":20423,"end":20424,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":20423,"name":"n","object":null},"sel":{"children":[],"start":20425,"end":20432,"code":"indices","nodeType":"Identifier","column":0,"line":0,"namePos":20425,"name":"indices","object":null}}],"ellipsis":0,"rparen":0},"body":{"children":[],"start":20434,"end":20789,"code":"{\n\tif c == idxc {\n\t\tif out := n.children[i].findCaseInsensitivePathRec(path, ciPath, rb, fixTrailingSlash); out != nil {\n\t\t\treturn out\n\t\t}\n\t\tbreak\n\t}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":20434,"list":[{"children":[],"start":20467,"end":20783,"code":"if c == idxc {\n\tif out := n.children[i].findCaseInsensitivePathRec(path, ciPath, rb, fixTrailingSlash); out != nil {\n\t\treturn out\n\t}\n\tbreak\n}","nodeType":"IfStatement","column":0,"line":0,"if":20467,"initialization":null,"condition":{"children":[],"start":20470,"end":20479,"code":"c == idxc","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":20470,"end":20471,"code":"c","nodeType":"Identifier","column":0,"line":0,"namePos":20470,"name":"c","object":null},"opPos":20472,"op":39,"rightExpression":{"children":[],"start":20475,"end":20479,"code":"idxc","nodeType":"Identifier","column":0,"line":0,"namePos":20475,"name":"idxc","object":null}},"body":{"children":[],"start":20480,"end":20783,"code":"{\n\tif out := n.children[i].findCaseInsensitivePathRec(path, ciPath, rb, fixTrailingSlash); out != nil {\n\t\treturn out\n\t}\n\tbreak\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":20480,"list":[{"children":[],"start":20622,"end":20764,"code":"if out := n.children[i].findCaseInsensitivePathRec(path, ciPath, rb, fixTrailingSlash); out != nil {\n\treturn out\n}","nodeType":"IfStatement","column":0,"line":0,"if":20622,"initialization":{"children":[],"start":20625,"end":20724,"code":"out := n.children[i].findCaseInsensitivePathRec(path, ciPath, rb, fixTrailingSlash)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":20625,"end":20628,"code":"out","nodeType":"Identifier","column":0,"line":0,"namePos":20625,"name":"out","object":null}],"tokenPos":20629,"token":47,"rhs":[{"children":[],"start":20632,"end":20724,"code":"n.children[i].findCaseInsensitivePathRec(path, ciPath, rb, fixTrailingSlash)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":20632,"end":20672,"code":"n.children[i].findCaseInsensitivePathRec","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":20632,"end":20645,"code":"n.children[i]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":20632,"end":20642,"code":"n.children","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":20632,"end":20633,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":20632,"name":"n","object":null},"sel":{"children":[],"start":20634,"end":20642,"code":"children","nodeType":"Identifier","column":0,"line":0,"namePos":20634,"name":"children","object":null}},"leftBracket":20642,"index":{"children":[],"start":20643,"end":20644,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":20643,"name":"i","object":null},"rightBracket":20644},"sel":{"children":[],"start":20646,"end":20672,"code":"findCaseInsensitivePathRec","nodeType":"Identifier","column":0,"line":0,"namePos":20646,"name":"findCaseInsensitivePathRec","object":null}},"lparen":0,"args":[{"children":[],"start":20681,"end":20685,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":20681,"name":"path","object":null},{"children":[],"start":20687,"end":20693,"code":"ciPath","nodeType":"Identifier","column":0,"line":0,"namePos":20687,"name":"ciPath","object":null},{"children":[],"start":20695,"end":20697,"code":"rb","nodeType":"Identifier","column":0,"line":0,"namePos":20695,"name":"rb","object":null},{"children":[],"start":20699,"end":20715,"code":"fixTrailingSlash","nodeType":"Identifier","column":0,"line":0,"namePos":20699,"name":"fixTrailingSlash","object":null}],"ellipsis":0,"rparen":0}]},"condition":{"children":[],"start":20726,"end":20736,"code":"out != nil","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":20726,"end":20729,"code":"out","nodeType":"Identifier","column":0,"line":0,"namePos":20726,"name":"out","object":null},"opPos":20730,"op":44,"rightExpression":{"children":[],"start":20733,"end":20736,"code":"nil","nodeType":"Identifier","column":0,"line":0,"namePos":20733,"name":"nil","object":null}},"body":{"children":[],"start":20737,"end":20764,"code":"{\n\treturn out\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":20737,"list":[{"children":[],"start":20746,"end":20756,"code":"return out","nodeType":"ReturnStatement","column":0,"line":0,"return":20746,"results":[{"children":[],"start":20753,"end":20756,"code":"out","nodeType":"Identifier","column":0,"line":0,"namePos":20753,"name":"out","object":null}]}],"rbrace":20763},"else":null},{"children":[],"start":20771,"end":20776,"code":"break","nodeType":"BranchStatement","column":0,"line":0,"tokenPosition":20771,"token":61,"label":null}],"rbrace":20782},"else":null}],"rbrace":20788}},{"children":[],"start":20878,"end":21225,"code":"if up := unicode.ToUpper(rv); up != lo {\n\tutf8.EncodeRune(rb[:], up)\n\trb = shiftNRuneBytes(rb, off)\n\tidxc := rb[0]\n\tfor i, c := range []byte(n.indices) {\n\t\tif c == idxc {\n\t\t\tn = n.children[i]\n\t\t\tnpLen = len(n.path)\n\t\t\tcontinue walk\n\t\t}\n\t}\n}","nodeType":"IfStatement","column":0,"line":0,"if":20878,"initialization":{"children":[],"start":20881,"end":20906,"code":"up := unicode.ToUpper(rv)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":20881,"end":20883,"code":"up","nodeType":"Identifier","column":0,"line":0,"namePos":20881,"name":"up","object":null}],"tokenPos":20884,"token":47,"rhs":[{"children":[],"start":20887,"end":20906,"code":"unicode.ToUpper(rv)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":20887,"end":20902,"code":"unicode.ToUpper","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":20887,"end":20894,"code":"unicode","nodeType":"Identifier","column":0,"line":0,"namePos":20887,"name":"unicode","object":null},"sel":{"children":[],"start":20895,"end":20902,"code":"ToUpper","nodeType":"Identifier","column":0,"line":0,"namePos":20895,"name":"ToUpper","object":null}},"lparen":0,"args":[{"children":[],"start":20903,"end":20905,"code":"rv","nodeType":"Identifier","column":0,"line":0,"namePos":20903,"name":"rv","object":null}],"ellipsis":0,"rparen":0}]},"condition":{"children":[],"start":20908,"end":20916,"code":"up != lo","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":20908,"end":20910,"code":"up","nodeType":"Identifier","column":0,"line":0,"namePos":20908,"name":"up","object":null},"opPos":20911,"op":44,"rightExpression":{"children":[],"start":20914,"end":20916,"code":"lo","nodeType":"Identifier","column":0,"line":0,"namePos":20914,"name":"lo","object":null}},"body":{"children":[],"start":20917,"end":21225,"code":"{\n\tutf8.EncodeRune(rb[:], up)\n\trb = shiftNRuneBytes(rb, off)\n\tidxc := rb[0]\n\tfor i, c := range []byte(n.indices) {\n\t\tif c == idxc {\n\t\t\tn = n.children[i]\n\t\t\tnpLen = len(n.path)\n\t\t\tcontinue walk\n\t\t}\n\t}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":20917,"list":[{"children":[],"start":20924,"end":20950,"code":"utf8.EncodeRune(rb[:], up)","nodeType":"ExpressionStatement","column":0,"line":0,"Expression":{"children":[],"start":20924,"end":20950,"code":"utf8.EncodeRune(rb[:], up)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":20924,"end":20939,"code":"utf8.EncodeRune","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":20924,"end":20928,"code":"utf8","nodeType":"Identifier","column":0,"line":0,"namePos":20924,"name":"utf8","object":null},"sel":{"children":[],"start":20929,"end":20939,"code":"EncodeRune","nodeType":"Identifier","column":0,"line":0,"namePos":20929,"name":"EncodeRune","object":null}},"lparen":0,"args":[{"children":[],"start":20940,"end":20945,"code":"rb[:]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":20940,"end":20942,"code":"rb","nodeType":"Identifier","column":0,"line":0,"namePos":20940,"name":"rb","object":null},"leftBracket":20942,"low":null,"high":null,"max":null,"slice3":false,"rightBracket":20944},{"children":[],"start":20947,"end":20949,"code":"up","nodeType":"Identifier","column":0,"line":0,"namePos":20947,"name":"up","object":null}],"ellipsis":0,"rparen":0}},{"children":[],"start":20956,"end":20985,"code":"rb = shiftNRuneBytes(rb, off)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":20956,"end":20958,"code":"rb","nodeType":"Identifier","column":0,"line":0,"namePos":20956,"name":"rb","object":null}],"tokenPos":20959,"token":42,"rhs":[{"children":[],"start":20961,"end":20985,"code":"shiftNRuneBytes(rb, off)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":20961,"end":20976,"code":"shiftNRuneBytes","nodeType":"Identifier","column":0,"line":0,"namePos":20961,"name":"shiftNRuneBytes","object":null},"lparen":0,"args":[{"children":[],"start":20977,"end":20979,"code":"rb","nodeType":"Identifier","column":0,"line":0,"namePos":20977,"name":"rb","object":null},{"children":[],"start":20981,"end":20984,"code":"off","nodeType":"Identifier","column":0,"line":0,"namePos":20981,"name":"off","object":null}],"ellipsis":0,"rparen":0}]},{"children":[],"start":20992,"end":21005,"code":"idxc := rb[0]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":20992,"end":20996,"code":"idxc","nodeType":"Identifier","column":0,"line":0,"namePos":20992,"name":"idxc","object":null}],"tokenPos":20997,"token":47,"rhs":[{"children":[],"start":21000,"end":21005,"code":"rb[0]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":21000,"end":21002,"code":"rb","nodeType":"Identifier","column":0,"line":0,"namePos":21000,"name":"rb","object":null},"leftBracket":21002,"index":{"children":[],"start":21003,"end":21004,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":21003,"kind":5,"value":"0"},"rightBracket":21004}]},{"children":[],"start":21011,"end":21219,"code":"for i, c := range []byte(n.indices) {\n\tif c == idxc {\n\t\tn = n.children[i]\n\t\tnpLen = len(n.path)\n\t\tcontinue walk\n\t}\n}","nodeType":"RangeStatement","column":0,"line":0,"for":21011,"key":{"children":[],"start":21015,"end":21016,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":21015,"name":"i","object":null},"value":{"children":[],"start":21018,"end":21019,"code":"c","nodeType":"Identifier","column":0,"line":0,"namePos":21018,"name":"c","object":null},"tokenPos":21020,"token":47,"range":21023,"expression":{"children":[],"start":21029,"end":21046,"code":"[]byte(n.indices)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":21029,"end":21035,"code":"[]byte","nodeType":"ArrayType","column":0,"line":0,"leftBracket":21029,"length":null,"element":{"children":[],"start":21031,"end":21035,"code":"byte","nodeType":"Identifier","column":0,"line":0,"namePos":21031,"name":"byte","object":null}},"lparen":0,"args":[{"children":[],"start":21036,"end":21045,"code":"n.indices","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":21036,"end":21037,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":21036,"name":"n","object":null},"sel":{"children":[],"start":21038,"end":21045,"code":"indices","nodeType":"Identifier","column":0,"line":0,"namePos":21038,"name":"indices","object":null}}],"ellipsis":0,"rparen":0},"body":{"children":[],"start":21047,"end":21219,"code":"{\n\tif c == idxc {\n\t\tn = n.children[i]\n\t\tnpLen = len(n.path)\n\t\tcontinue walk\n\t}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":21047,"list":[{"children":[],"start":21082,"end":21212,"code":"if c == idxc {\n\tn = n.children[i]\n\tnpLen = len(n.path)\n\tcontinue walk\n}","nodeType":"IfStatement","column":0,"line":0,"if":21082,"initialization":null,"condition":{"children":[],"start":21085,"end":21094,"code":"c == idxc","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":21085,"end":21086,"code":"c","nodeType":"Identifier","column":0,"line":0,"namePos":21085,"name":"c","object":null},"opPos":21087,"op":39,"rightExpression":{"children":[],"start":21090,"end":21094,"code":"idxc","nodeType":"Identifier","column":0,"line":0,"namePos":21090,"name":"idxc","object":null}},"body":{"children":[],"start":21095,"end":21212,"code":"{\n\tn = n.children[i]\n\tnpLen = len(n.path)\n\tcontinue walk\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":21095,"list":[{"children":[],"start":21139,"end":21156,"code":"n = n.children[i]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":21139,"end":21140,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":21139,"name":"n","object":null}],"tokenPos":21141,"token":42,"rhs":[{"children":[],"start":21143,"end":21156,"code":"n.children[i]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":21143,"end":21153,"code":"n.children","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":21143,"end":21144,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":21143,"name":"n","object":null},"sel":{"children":[],"start":21145,"end":21153,"code":"children","nodeType":"Identifier","column":0,"line":0,"namePos":21145,"name":"children","object":null}},"leftBracket":21153,"index":{"children":[],"start":21154,"end":21155,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":21154,"name":"i","object":null},"rightBracket":21155}]},{"children":[],"start":21164,"end":21183,"code":"npLen = len(n.path)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":21164,"end":21169,"code":"npLen","nodeType":"Identifier","column":0,"line":0,"namePos":21164,"name":"npLen","object":null}],"tokenPos":21170,"token":42,"rhs":[{"children":[],"start":21172,"end":21183,"code":"len(n.path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":21172,"end":21175,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":21172,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":21176,"end":21182,"code":"n.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":21176,"end":21177,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":21176,"name":"n","object":null},"sel":{"children":[],"start":21178,"end":21182,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":21178,"name":"path","object":null}}],"ellipsis":0,"rparen":0}]},{"children":[],"start":21191,"end":21204,"code":"continue walk","nodeType":"BranchStatement","column":0,"line":0,"tokenPosition":21191,"token":65,"label":{"children":[],"start":21200,"end":21204,"code":"walk","nodeType":"Identifier","column":0,"line":0,"namePos":21200,"name":"walk","object":null}}],"rbrace":21211},"else":null}],"rbrace":21218}}],"rbrace":21224},"else":null}],"rbrace":21229}},{"children":[],"start":21363,"end":21443,"code":"if fixTrailingSlash \u0026\u0026 path == \"/\" \u0026\u0026 n.handlers != nil {\n\treturn ciPath\n}","nodeType":"IfStatement","column":0,"line":0,"if":21363,"initialization":null,"condition":{"children":[],"start":21366,"end":21418,"code":"fixTrailingSlash \u0026\u0026 path == \"/\" \u0026\u0026 n.handlers != nil","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":21366,"end":21397,"code":"fixTrailingSlash \u0026\u0026 path == \"/\"","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":21366,"end":21382,"code":"fixTrailingSlash","nodeType":"Identifier","column":0,"line":0,"namePos":21366,"name":"fixTrailingSlash","object":null},"opPos":21383,"op":34,"rightExpression":{"children":[],"start":21386,"end":21397,"code":"path == \"/\"","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":21386,"end":21390,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":21386,"name":"path","object":null},"opPos":21391,"op":39,"rightExpression":{"children":[],"start":21394,"end":21397,"code":"\"/\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":21394,"kind":9,"value":"\"/\""}}},"opPos":21398,"op":34,"rightExpression":{"children":[],"start":21401,"end":21418,"code":"n.handlers != nil","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":21401,"end":21411,"code":"n.handlers","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":21401,"end":21402,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":21401,"name":"n","object":null},"sel":{"children":[],"start":21403,"end":21411,"code":"handlers","nodeType":"Identifier","column":0,"line":0,"namePos":21403,"name":"handlers","object":null}},"opPos":21412,"op":44,"rightExpression":{"children":[],"start":21415,"end":21418,"code":"nil","nodeType":"Identifier","column":0,"line":0,"namePos":21415,"name":"nil","object":null}}},"body":{"children":[],"start":21419,"end":21443,"code":"{\n\treturn ciPath\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":21419,"list":[{"children":[],"start":21425,"end":21438,"code":"return ciPath","nodeType":"ReturnStatement","column":0,"line":0,"return":21425,"results":[{"children":[],"start":21432,"end":21438,"code":"ciPath","nodeType":"Identifier","column":0,"line":0,"namePos":21432,"name":"ciPath","object":null}]}],"rbrace":21442},"else":null},{"children":[],"start":21447,"end":21457,"code":"return nil","nodeType":"ReturnStatement","column":0,"line":0,"return":21447,"results":[{"children":[],"start":21454,"end":21457,"code":"nil","nodeType":"Identifier","column":0,"line":0,"namePos":21454,"name":"nil","object":null}]}],"rbrace":21460},"else":null},{"children":[],"start":21465,"end":21482,"code":"n = n.children[0]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":21465,"end":21466,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":21465,"name":"n","object":null}],"tokenPos":21467,"token":42,"rhs":[{"children":[],"start":21469,"end":21482,"code":"n.children[0]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":21469,"end":21479,"code":"n.children","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":21469,"end":21470,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":21469,"name":"n","object":null},"sel":{"children":[],"start":21471,"end":21479,"code":"children","nodeType":"Identifier","column":0,"line":0,"namePos":21471,"name":"children","object":null}},"leftBracket":21479,"index":{"children":[],"start":21480,"end":21481,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":21480,"kind":5,"value":"0"},"rightBracket":21481}]},{"children":[],"start":21485,"end":22458,"code":"switch n.nType {\ncase param:\n\tend := 0\n\tfor end \u003c len(path) \u0026\u0026 path[end] != '/' {\n\t\tend++\n\t}\n\tciPath = append(ciPath, path[:end]...)\n\tif end \u003c len(path) {\n\t\tif len(n.children) \u003e 0 {\n\t\t\tn = n.children[0]\n\t\t\tnpLen = len(n.path)\n\t\t\tpath = path[end:]\n\t\t\tcontinue\n\t\t}\n\t\tif fixTrailingSlash \u0026\u0026 len(path) == end+1 {\n\t\t\treturn ciPath\n\t\t}\n\t\treturn nil\n\t}\n\tif n.handlers != nil {\n\t\treturn ciPath\n\t}\n\tif fixTrailingSlash \u0026\u0026 len(n.children) == 1 {\n\t\tn = n.children[0]\n\t\tif n.path == \"/\" \u0026\u0026 n.handlers != nil {\n\t\t\treturn append(ciPath, '/')\n\t\t}\n\t}\n\treturn nil\ncase catchAll:\n\treturn append(ciPath, path...)\ndefault:\n\tpanic(\"invalid node type\")\n}","nodeType":"SwitchStatement","column":0,"line":0,"switch":21485,"initialization":null,"tag":{"children":[],"start":21492,"end":21499,"code":"n.nType","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":21492,"end":21493,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":21492,"name":"n","object":null},"sel":{"children":[],"start":21494,"end":21499,"code":"nType","nodeType":"Identifier","column":0,"line":0,"namePos":21494,"name":"nType","object":null}},"body":{"children":[],"start":21500,"end":22458,"code":"{\n\tcase param:\n\t\tend := 0\n\t\tfor end \u003c len(path) \u0026\u0026 path[end] != '/' {\n\t\t\tend++\n\t\t}\n\t\tciPath = append(ciPath, path[:end]...)\n\t\tif end \u003c len(path) {\n\t\t\tif len(n.children) \u003e 0 {\n\t\t\t\tn = n.children[0]\n\t\t\t\tnpLen = len(n.path)\n\t\t\t\tpath = path[end:]\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tif fixTrailingSlash \u0026\u0026 len(path) == end+1 {\n\t\t\t\treturn ciPath\n\t\t\t}\n\t\t\treturn nil\n\t\t}\n\t\tif n.handlers != nil {\n\t\t\treturn ciPath\n\t\t}\n\t\tif fixTrailingSlash \u0026\u0026 len(n.children) == 1 {\n\t\t\tn = n.children[0]\n\t\t\tif n.path == \"/\" \u0026\u0026 n.handlers != nil {\n\t\t\t\treturn append(ciPath, '/')\n\t\t\t}\n\t\t}\n\t\treturn nil\n\tcase catchAll:\n\t\treturn append(ciPath, path...)\n\tdefault:\n\t\tpanic(\"invalid node type\")\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":21500,"list":[{"children":[],"start":21504,"end":22360,"code":"case param:\n\tend := 0\n\tfor end \u003c len(path) \u0026\u0026 path[end] != '/' {\n\t\tend++\n\t}\n\tciPath = append(ciPath, path[:end]...)\n\tif end \u003c len(path) {\n\t\tif len(n.children) \u003e 0 {\n\t\t\tn = n.children[0]\n\t\t\tnpLen = len(n.path)\n\t\t\tpath = path[end:]\n\t\t\tcontinue\n\t\t}\n\t\tif fixTrailingSlash \u0026\u0026 len(path) == end+1 {\n\t\t\treturn ciPath\n\t\t}\n\t\treturn nil\n\t}\n\tif n.handlers != nil {\n\t\treturn ciPath\n\t}\n\tif fixTrailingSlash \u0026\u0026 len(n.children) == 1 {\n\t\tn = n.children[0]\n\t\tif n.path == \"/\" \u0026\u0026 n.handlers != nil {\n\t\t\treturn append(ciPath, '/')\n\t\t}\n\t}\n\treturn nil","nodeType":"CaseClause","column":0,"line":0,"case":21504,"list":[{"children":[],"start":21509,"end":21514,"code":"param","nodeType":"Identifier","column":0,"line":0,"namePos":21509,"name":"param","object":null}],"colon":21514,"body":[{"children":[],"start":21565,"end":21573,"code":"end := 0","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":21565,"end":21568,"code":"end","nodeType":"Identifier","column":0,"line":0,"namePos":21565,"name":"end","object":null}],"tokenPos":21569,"token":47,"rhs":[{"children":[],"start":21572,"end":21573,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":21572,"kind":5,"value":"0"}]},{"children":[],"start":21577,"end":21633,"code":"for end \u003c len(path) \u0026\u0026 path[end] != '/' {\n\tend++\n}","nodeType":"ForStatement","column":0,"line":0,"for":21577,"initialization":null,"condition":{"children":[],"start":21581,"end":21616,"code":"end \u003c len(path) \u0026\u0026 path[end] != '/'","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":21581,"end":21596,"code":"end \u003c len(path)","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":21581,"end":21584,"code":"end","nodeType":"Identifier","column":0,"line":0,"namePos":21581,"name":"end","object":null},"opPos":21585,"op":40,"rightExpression":{"children":[],"start":21587,"end":21596,"code":"len(path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":21587,"end":21590,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":21587,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":21591,"end":21595,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":21591,"name":"path","object":null}],"ellipsis":0,"rparen":0}},"opPos":21597,"op":34,"rightExpression":{"children":[],"start":21600,"end":21616,"code":"path[end] != '/'","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":21600,"end":21609,"code":"path[end]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":21600,"end":21604,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":21600,"name":"path","object":null},"leftBracket":21604,"index":{"children":[],"start":21605,"end":21608,"code":"end","nodeType":"Identifier","column":0,"line":0,"namePos":21605,"name":"end","object":null},"rightBracket":21608},"opPos":21610,"op":44,"rightExpression":{"children":[],"start":21613,"end":21616,"code":"'/'","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":21613,"kind":8,"value":"'/'"}}},"post":null,"body":{"children":[],"start":21617,"end":21633,"code":"{\n\tend++\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":21617,"list":[{"children":[],"start":21623,"end":21628,"code":"end++","nodeType":"IncrementDecrementStatement","column":0,"line":0,"Expression":{"children":[],"start":21623,"end":21626,"code":"end","nodeType":"Identifier","column":0,"line":0,"namePos":21623,"name":"end","object":null},"TokenPosition":21626,"Token":37}],"rbrace":21632}},{"children":[],"start":21685,"end":21723,"code":"ciPath = append(ciPath, path[:end]...)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":21685,"end":21691,"code":"ciPath","nodeType":"Identifier","column":0,"line":0,"namePos":21685,"name":"ciPath","object":null}],"tokenPos":21692,"token":42,"rhs":[{"children":[],"start":21694,"end":21723,"code":"append(ciPath, path[:end]...)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":21694,"end":21700,"code":"append","nodeType":"Identifier","column":0,"line":0,"namePos":21694,"name":"append","object":null},"lparen":0,"args":[{"children":[],"start":21701,"end":21707,"code":"ciPath","nodeType":"Identifier","column":0,"line":0,"namePos":21701,"name":"ciPath","object":null},{"children":[],"start":21709,"end":21719,"code":"path[:end]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":21709,"end":21713,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":21709,"name":"path","object":null},"leftBracket":21713,"low":null,"high":{"children":[],"start":21715,"end":21718,"code":"end","nodeType":"Identifier","column":0,"line":0,"namePos":21715,"name":"end","object":null},"max":null,"slice3":false,"rightBracket":21718}],"ellipsis":0,"rparen":0}]},{"children":[],"start":21756,"end":22047,"code":"if end \u003c len(path) {\n\tif len(n.children) \u003e 0 {\n\t\tn = n.children[0]\n\t\tnpLen = len(n.path)\n\t\tpath = path[end:]\n\t\tcontinue\n\t}\n\tif fixTrailingSlash \u0026\u0026 len(path) == end+1 {\n\t\treturn ciPath\n\t}\n\treturn nil\n}","nodeType":"IfStatement","column":0,"line":0,"if":21756,"initialization":null,"condition":{"children":[],"start":21759,"end":21774,"code":"end \u003c len(path)","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":21759,"end":21762,"code":"end","nodeType":"Identifier","column":0,"line":0,"namePos":21759,"name":"end","object":null},"opPos":21763,"op":40,"rightExpression":{"children":[],"start":21765,"end":21774,"code":"len(path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":21765,"end":21768,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":21765,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":21769,"end":21773,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":21769,"name":"path","object":null}],"ellipsis":0,"rparen":0}},"body":{"children":[],"start":21775,"end":22047,"code":"{\n\tif len(n.children) \u003e 0 {\n\t\tn = n.children[0]\n\t\tnpLen = len(n.path)\n\t\tpath = path[end:]\n\t\tcontinue\n\t}\n\tif fixTrailingSlash \u0026\u0026 len(path) == end+1 {\n\t\treturn ciPath\n\t}\n\treturn nil\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":21775,"list":[{"children":[],"start":21781,"end":21929,"code":"if len(n.children) \u003e 0 {\n\tn = n.children[0]\n\tnpLen = len(n.path)\n\tpath = path[end:]\n\tcontinue\n}","nodeType":"IfStatement","column":0,"line":0,"if":21781,"initialization":null,"condition":{"children":[],"start":21784,"end":21803,"code":"len(n.children) \u003e 0","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":21784,"end":21799,"code":"len(n.children)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":21784,"end":21787,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":21784,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":21788,"end":21798,"code":"n.children","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":21788,"end":21789,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":21788,"name":"n","object":null},"sel":{"children":[],"start":21790,"end":21798,"code":"children","nodeType":"Identifier","column":0,"line":0,"namePos":21790,"name":"children","object":null}}],"ellipsis":0,"rparen":0},"opPos":21800,"op":41,"rightExpression":{"children":[],"start":21802,"end":21803,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":21802,"kind":5,"value":"0"}},"body":{"children":[],"start":21804,"end":21929,"code":"{\n\tn = n.children[0]\n\tnpLen = len(n.path)\n\tpath = path[end:]\n\tcontinue\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":21804,"list":[{"children":[],"start":21844,"end":21861,"code":"n = n.children[0]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":21844,"end":21845,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":21844,"name":"n","object":null}],"tokenPos":21846,"token":42,"rhs":[{"children":[],"start":21848,"end":21861,"code":"n.children[0]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":21848,"end":21858,"code":"n.children","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":21848,"end":21849,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":21848,"name":"n","object":null},"sel":{"children":[],"start":21850,"end":21858,"code":"children","nodeType":"Identifier","column":0,"line":0,"namePos":21850,"name":"children","object":null}},"leftBracket":21858,"index":{"children":[],"start":21859,"end":21860,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":21859,"kind":5,"value":"0"},"rightBracket":21860}]},{"children":[],"start":21867,"end":21886,"code":"npLen = len(n.path)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":21867,"end":21872,"code":"npLen","nodeType":"Identifier","column":0,"line":0,"namePos":21867,"name":"npLen","object":null}],"tokenPos":21873,"token":42,"rhs":[{"children":[],"start":21875,"end":21886,"code":"len(n.path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":21875,"end":21878,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":21875,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":21879,"end":21885,"code":"n.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":21879,"end":21880,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":21879,"name":"n","object":null},"sel":{"children":[],"start":21881,"end":21885,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":21881,"name":"path","object":null}}],"ellipsis":0,"rparen":0}]},{"children":[],"start":21892,"end":21909,"code":"path = path[end:]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":21892,"end":21896,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":21892,"name":"path","object":null}],"tokenPos":21897,"token":42,"rhs":[{"children":[],"start":21899,"end":21909,"code":"path[end:]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":21899,"end":21903,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":21899,"name":"path","object":null},"leftBracket":21903,"low":{"children":[],"start":21904,"end":21907,"code":"end","nodeType":"Identifier","column":0,"line":0,"namePos":21904,"name":"end","object":null},"high":null,"max":null,"slice3":false,"rightBracket":21908}]},{"children":[],"start":21915,"end":21923,"code":"continue","nodeType":"BranchStatement","column":0,"line":0,"tokenPosition":21915,"token":65,"label":null}],"rbrace":21928},"else":null},{"children":[],"start":21959,"end":22027,"code":"if fixTrailingSlash \u0026\u0026 len(path) == end+1 {\n\treturn ciPath\n}","nodeType":"IfStatement","column":0,"line":0,"if":21959,"initialization":null,"condition":{"children":[],"start":21962,"end":22000,"code":"fixTrailingSlash \u0026\u0026 len(path) == end+1","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":21962,"end":21978,"code":"fixTrailingSlash","nodeType":"Identifier","column":0,"line":0,"namePos":21962,"name":"fixTrailingSlash","object":null},"opPos":21979,"op":34,"rightExpression":{"children":[],"start":21982,"end":22000,"code":"len(path) == end+1","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":21982,"end":21991,"code":"len(path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":21982,"end":21985,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":21982,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":21986,"end":21990,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":21986,"name":"path","object":null}],"ellipsis":0,"rparen":0},"opPos":21992,"op":39,"rightExpression":{"children":[],"start":21995,"end":22000,"code":"end + 1","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":21995,"end":21998,"code":"end","nodeType":"Identifier","column":0,"line":0,"namePos":21995,"name":"end","object":null},"opPos":21998,"op":12,"rightExpression":{"children":[],"start":21999,"end":22000,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":21999,"kind":5,"value":"1"}}}},"body":{"children":[],"start":22001,"end":22027,"code":"{\n\treturn ciPath\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":22001,"list":[{"children":[],"start":22008,"end":22021,"code":"return ciPath","nodeType":"ReturnStatement","column":0,"line":0,"return":22008,"results":[{"children":[],"start":22015,"end":22021,"code":"ciPath","nodeType":"Identifier","column":0,"line":0,"namePos":22015,"name":"ciPath","object":null}]}],"rbrace":22026},"else":null},{"children":[],"start":22032,"end":22042,"code":"return nil","nodeType":"ReturnStatement","column":0,"line":0,"return":22032,"results":[{"children":[],"start":22039,"end":22042,"code":"nil","nodeType":"Identifier","column":0,"line":0,"namePos":22039,"name":"nil","object":null}]}],"rbrace":22046},"else":null},{"children":[],"start":22052,"end":22097,"code":"if n.handlers != nil {\n\treturn ciPath\n}","nodeType":"IfStatement","column":0,"line":0,"if":22052,"initialization":null,"condition":{"children":[],"start":22055,"end":22072,"code":"n.handlers != nil","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":22055,"end":22065,"code":"n.handlers","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":22055,"end":22056,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":22055,"name":"n","object":null},"sel":{"children":[],"start":22057,"end":22065,"code":"handlers","nodeType":"Identifier","column":0,"line":0,"namePos":22057,"name":"handlers","object":null}},"opPos":22066,"op":44,"rightExpression":{"children":[],"start":22069,"end":22072,"code":"nil","nodeType":"Identifier","column":0,"line":0,"namePos":22069,"name":"nil","object":null}},"body":{"children":[],"start":22073,"end":22097,"code":"{\n\treturn ciPath\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":22073,"list":[{"children":[],"start":22079,"end":22092,"code":"return ciPath","nodeType":"ReturnStatement","column":0,"line":0,"return":22079,"results":[{"children":[],"start":22086,"end":22092,"code":"ciPath","nodeType":"Identifier","column":0,"line":0,"namePos":22086,"name":"ciPath","object":null}]}],"rbrace":22096},"else":null},{"children":[],"start":22102,"end":22345,"code":"if fixTrailingSlash \u0026\u0026 len(n.children) == 1 {\n\tn = n.children[0]\n\tif n.path == \"/\" \u0026\u0026 n.handlers != nil {\n\t\treturn append(ciPath, '/')\n\t}\n}","nodeType":"IfStatement","column":0,"line":0,"if":22102,"initialization":null,"condition":{"children":[],"start":22105,"end":22145,"code":"fixTrailingSlash \u0026\u0026 len(n.children) == 1","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":22105,"end":22121,"code":"fixTrailingSlash","nodeType":"Identifier","column":0,"line":0,"namePos":22105,"name":"fixTrailingSlash","object":null},"opPos":22122,"op":34,"rightExpression":{"children":[],"start":22125,"end":22145,"code":"len(n.children) == 1","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":22125,"end":22140,"code":"len(n.children)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":22125,"end":22128,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":22125,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":22129,"end":22139,"code":"n.children","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":22129,"end":22130,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":22129,"name":"n","object":null},"sel":{"children":[],"start":22131,"end":22139,"code":"children","nodeType":"Identifier","column":0,"line":0,"namePos":22131,"name":"children","object":null}}],"ellipsis":0,"rparen":0},"opPos":22141,"op":39,"rightExpression":{"children":[],"start":22144,"end":22145,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":22144,"kind":5,"value":"1"}}},"body":{"children":[],"start":22146,"end":22345,"code":"{\n\tn = n.children[0]\n\tif n.path == \"/\" \u0026\u0026 n.handlers != nil {\n\t\treturn append(ciPath, '/')\n\t}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":22146,"list":[{"children":[],"start":22241,"end":22258,"code":"n = n.children[0]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":22241,"end":22242,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":22241,"name":"n","object":null}],"tokenPos":22243,"token":42,"rhs":[{"children":[],"start":22245,"end":22258,"code":"n.children[0]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":22245,"end":22255,"code":"n.children","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":22245,"end":22246,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":22245,"name":"n","object":null},"sel":{"children":[],"start":22247,"end":22255,"code":"children","nodeType":"Identifier","column":0,"line":0,"namePos":22247,"name":"children","object":null}},"leftBracket":22255,"index":{"children":[],"start":22256,"end":22257,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":22256,"kind":5,"value":"0"},"rightBracket":22257}]},{"children":[],"start":22263,"end":22340,"code":"if n.path == \"/\" \u0026\u0026 n.handlers != nil {\n\treturn append(ciPath, '/')\n}","nodeType":"IfStatement","column":0,"line":0,"if":22263,"initialization":null,"condition":{"children":[],"start":22266,"end":22300,"code":"n.path == \"/\" \u0026\u0026 n.handlers != nil","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":22266,"end":22279,"code":"n.path == \"/\"","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":22266,"end":22272,"code":"n.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":22266,"end":22267,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":22266,"name":"n","object":null},"sel":{"children":[],"start":22268,"end":22272,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":22268,"name":"path","object":null}},"opPos":22273,"op":39,"rightExpression":{"children":[],"start":22276,"end":22279,"code":"\"/\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":22276,"kind":9,"value":"\"/\""}},"opPos":22280,"op":34,"rightExpression":{"children":[],"start":22283,"end":22300,"code":"n.handlers != nil","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":22283,"end":22293,"code":"n.handlers","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":22283,"end":22284,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":22283,"name":"n","object":null},"sel":{"children":[],"start":22285,"end":22293,"code":"handlers","nodeType":"Identifier","column":0,"line":0,"namePos":22285,"name":"handlers","object":null}},"opPos":22294,"op":44,"rightExpression":{"children":[],"start":22297,"end":22300,"code":"nil","nodeType":"Identifier","column":0,"line":0,"namePos":22297,"name":"nil","object":null}}},"body":{"children":[],"start":22301,"end":22340,"code":"{\n\treturn append(ciPath, '/')\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":22301,"list":[{"children":[],"start":22308,"end":22334,"code":"return append(ciPath, '/')","nodeType":"ReturnStatement","column":0,"line":0,"return":22308,"results":[{"children":[],"start":22315,"end":22334,"code":"append(ciPath, '/')","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":22315,"end":22321,"code":"append","nodeType":"Identifier","column":0,"line":0,"namePos":22315,"name":"append","object":null},"lparen":0,"args":[{"children":[],"start":22322,"end":22328,"code":"ciPath","nodeType":"Identifier","column":0,"line":0,"namePos":22322,"name":"ciPath","object":null},{"children":[],"start":22330,"end":22333,"code":"'/'","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":22330,"kind":8,"value":"'/'"}],"ellipsis":0,"rparen":0}]}],"rbrace":22339},"else":null}],"rbrace":22344},"else":null},{"children":[],"start":22350,"end":22360,"code":"return nil","nodeType":"ReturnStatement","column":0,"line":0,"return":22350,"results":[{"children":[],"start":22357,"end":22360,"code":"nil","nodeType":"Identifier","column":0,"line":0,"namePos":22357,"name":"nil","object":null}]}]},{"children":[],"start":22364,"end":22412,"code":"case catchAll:\n\treturn append(ciPath, path...)","nodeType":"CaseClause","column":0,"line":0,"case":22364,"list":[{"children":[],"start":22369,"end":22377,"code":"catchAll","nodeType":"Identifier","column":0,"line":0,"namePos":22369,"name":"catchAll","object":null}],"colon":22377,"body":[{"children":[],"start":22382,"end":22412,"code":"return append(ciPath, path...)","nodeType":"ReturnStatement","column":0,"line":0,"return":22382,"results":[{"children":[],"start":22389,"end":22412,"code":"append(ciPath, path...)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":22389,"end":22395,"code":"append","nodeType":"Identifier","column":0,"line":0,"namePos":22389,"name":"append","object":null},"lparen":0,"args":[{"children":[],"start":22396,"end":22402,"code":"ciPath","nodeType":"Identifier","column":0,"line":0,"namePos":22396,"name":"ciPath","object":null},{"children":[],"start":22404,"end":22408,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":22404,"name":"path","object":null}],"ellipsis":0,"rparen":0}]}]},{"children":[],"start":22416,"end":22454,"code":"default:\n\tpanic(\"invalid node type\")","nodeType":"CaseClause","column":0,"line":0,"case":22416,"list":[],"colon":22423,"body":[{"children":[],"start":22428,"end":22454,"code":"panic(\"invalid node type\")","nodeType":"ExpressionStatement","column":0,"line":0,"Expression":{"children":[],"start":22428,"end":22454,"code":"panic(\"invalid node type\")","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":22428,"end":22433,"code":"panic","nodeType":"Identifier","column":0,"line":0,"namePos":22428,"name":"panic","object":null},"lparen":0,"args":[{"children":[],"start":22434,"end":22453,"code":"\"invalid node type\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":22434,"kind":9,"value":"\"invalid node type\""}],"ellipsis":0,"rparen":0}}]}],"rbrace":22457}}],"rbrace":22460}},"label":{"children":[],"start":18483,"end":18487,"code":"walk","nodeType":"Identifier","column":0,"line":0,"namePos":18483,"name":"walk","object":null},"colon":18487},{"children":[],"start":22545,"end":22781,"code":"if fixTrailingSlash {\n\tif path == \"/\" {\n\t\treturn ciPath\n\t}\n\tif len(path)+1 == npLen \u0026\u0026 n.path[len(path)] == '/' \u0026\u0026 strings.EqualFold(path[1:], n.path[1:len(path)]) \u0026\u0026 n.handlers != nil {\n\t\treturn append(ciPath, n.path...)\n\t}\n}","nodeType":"IfStatement","column":0,"line":0,"if":22545,"initialization":null,"condition":{"children":[],"start":22548,"end":22564,"code":"fixTrailingSlash","nodeType":"Identifier","column":0,"line":0,"namePos":22548,"name":"fixTrailingSlash","object":null},"body":{"children":[],"start":22565,"end":22781,"code":"{\n\tif path == \"/\" {\n\t\treturn ciPath\n\t}\n\tif len(path)+1 == npLen \u0026\u0026 n.path[len(path)] == '/' \u0026\u0026 strings.EqualFold(path[1:], n.path[1:len(path)]) \u0026\u0026 n.handlers != nil {\n\t\treturn append(ciPath, n.path...)\n\t}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":22565,"list":[{"children":[],"start":22569,"end":22606,"code":"if path == \"/\" {\n\treturn ciPath\n}","nodeType":"IfStatement","column":0,"line":0,"if":22569,"initialization":null,"condition":{"children":[],"start":22572,"end":22583,"code":"path == \"/\"","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":22572,"end":22576,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":22572,"name":"path","object":null},"opPos":22577,"op":39,"rightExpression":{"children":[],"start":22580,"end":22583,"code":"\"/\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":22580,"kind":9,"value":"\"/\""}},"body":{"children":[],"start":22584,"end":22606,"code":"{\n\treturn ciPath\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":22584,"list":[{"children":[],"start":22589,"end":22602,"code":"return ciPath","nodeType":"ReturnStatement","column":0,"line":0,"return":22589,"results":[{"children":[],"start":22596,"end":22602,"code":"ciPath","nodeType":"Identifier","column":0,"line":0,"namePos":22596,"name":"ciPath","object":null}]}],"rbrace":22605},"else":null},{"children":[],"start":22609,"end":22778,"code":"if len(path)+1 == npLen \u0026\u0026 n.path[len(path)] == '/' \u0026\u0026 strings.EqualFold(path[1:], n.path[1:len(path)]) \u0026\u0026 n.handlers != nil {\n\treturn append(ciPath, n.path...)\n}","nodeType":"IfStatement","column":0,"line":0,"if":22609,"initialization":null,"condition":{"children":[],"start":22612,"end":22736,"code":"len(path)+1 == npLen \u0026\u0026 n.path[len(path)] == '/' \u0026\u0026 strings.EqualFold(path[1:], n.path[1:len(path)]) \u0026\u0026 n.handlers != nil","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":22612,"end":22715,"code":"len(path)+1 == npLen \u0026\u0026 n.path[len(path)] == '/' \u0026\u0026 strings.EqualFold(path[1:], n.path[1:len(path)])","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":22612,"end":22660,"code":"len(path)+1 == npLen \u0026\u0026 n.path[len(path)] == '/'","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":22612,"end":22632,"code":"len(path)+1 == npLen","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":22612,"end":22623,"code":"len(path) + 1","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":22612,"end":22621,"code":"len(path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":22612,"end":22615,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":22612,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":22616,"end":22620,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":22616,"name":"path","object":null}],"ellipsis":0,"rparen":0},"opPos":22621,"op":12,"rightExpression":{"children":[],"start":22622,"end":22623,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":22622,"kind":5,"value":"1"}},"opPos":22624,"op":39,"rightExpression":{"children":[],"start":22627,"end":22632,"code":"npLen","nodeType":"Identifier","column":0,"line":0,"namePos":22627,"name":"npLen","object":null}},"opPos":22633,"op":34,"rightExpression":{"children":[],"start":22636,"end":22660,"code":"n.path[len(path)] == '/'","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":22636,"end":22653,"code":"n.path[len(path)]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":22636,"end":22642,"code":"n.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":22636,"end":22637,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":22636,"name":"n","object":null},"sel":{"children":[],"start":22638,"end":22642,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":22638,"name":"path","object":null}},"leftBracket":22642,"index":{"children":[],"start":22643,"end":22652,"code":"len(path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":22643,"end":22646,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":22643,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":22647,"end":22651,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":22647,"name":"path","object":null}],"ellipsis":0,"rparen":0},"rightBracket":22652},"opPos":22654,"op":39,"rightExpression":{"children":[],"start":22657,"end":22660,"code":"'/'","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":22657,"kind":8,"value":"'/'"}}},"opPos":22661,"op":34,"rightExpression":{"children":[],"start":22667,"end":22715,"code":"strings.EqualFold(path[1:], n.path[1:len(path)])","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":22667,"end":22684,"code":"strings.EqualFold","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":22667,"end":22674,"code":"strings","nodeType":"Identifier","column":0,"line":0,"namePos":22667,"name":"strings","object":null},"sel":{"children":[],"start":22675,"end":22684,"code":"EqualFold","nodeType":"Identifier","column":0,"line":0,"namePos":22675,"name":"EqualFold","object":null}},"lparen":0,"args":[{"children":[],"start":22685,"end":22693,"code":"path[1:]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":22685,"end":22689,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":22685,"name":"path","object":null},"leftBracket":22689,"low":{"children":[],"start":22690,"end":22691,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":22690,"kind":5,"value":"1"},"high":null,"max":null,"slice3":false,"rightBracket":22692},{"children":[],"start":22695,"end":22714,"code":"n.path[1:len(path)]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":22695,"end":22701,"code":"n.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":22695,"end":22696,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":22695,"name":"n","object":null},"sel":{"children":[],"start":22697,"end":22701,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":22697,"name":"path","object":null}},"leftBracket":22701,"low":{"children":[],"start":22702,"end":22703,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":22702,"kind":5,"value":"1"},"high":{"children":[],"start":22704,"end":22713,"code":"len(path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":22704,"end":22707,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":22704,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":22708,"end":22712,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":22708,"name":"path","object":null}],"ellipsis":0,"rparen":0},"max":null,"slice3":false,"rightBracket":22713}],"ellipsis":0,"rparen":0}},"opPos":22716,"op":34,"rightExpression":{"children":[],"start":22719,"end":22736,"code":"n.handlers != nil","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":22719,"end":22729,"code":"n.handlers","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":22719,"end":22720,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":22719,"name":"n","object":null},"sel":{"children":[],"start":22721,"end":22729,"code":"handlers","nodeType":"Identifier","column":0,"line":0,"namePos":22721,"name":"handlers","object":null}},"opPos":22730,"op":44,"rightExpression":{"children":[],"start":22733,"end":22736,"code":"nil","nodeType":"Identifier","column":0,"line":0,"namePos":22733,"name":"nil","object":null}}},"body":{"children":[],"start":22737,"end":22778,"code":"{\n\treturn append(ciPath, n.path...)\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":22737,"list":[{"children":[],"start":22742,"end":22774,"code":"return append(ciPath, n.path...)","nodeType":"ReturnStatement","column":0,"line":0,"return":22742,"results":[{"children":[],"start":22749,"end":22774,"code":"append(ciPath, n.path...)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":22749,"end":22755,"code":"append","nodeType":"Identifier","column":0,"line":0,"namePos":22749,"name":"append","object":null},"lparen":0,"args":[{"children":[],"start":22756,"end":22762,"code":"ciPath","nodeType":"Identifier","column":0,"line":0,"namePos":22756,"name":"ciPath","object":null},{"children":[],"start":22764,"end":22770,"code":"n.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":22764,"end":22765,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":22764,"name":"n","object":null},"sel":{"children":[],"start":22766,"end":22770,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":22766,"name":"path","object":null}}],"ellipsis":0,"rparen":0}]}],"rbrace":22777},"else":null}],"rbrace":22780},"else":null},{"children":[],"start":22783,"end":22793,"code":"return nil","nodeType":"ReturnStatement","column":0,"line":0,"return":22783,"results":[{"children":[],"start":22790,"end":22793,"code":"nil","nodeType":"Identifier","column":0,"line":0,"namePos":22790,"name":"nil","object":null}]}],"rbrace":22794}}],"fileStart":1,"fileEnd":22796,"scope":{"outer":null,"objects":null},"imports":[],"unresolved":[],"comments":[],"goVersion":""}