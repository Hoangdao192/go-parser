{"children":[],"start":268,"end":2971,"code":"package gin\n\nimport (\n\t\"strings\"\n\t\"testing\"\n\t\"github.com/stretchr/testify/assert\"\n)\n\ntype cleanPathTest struct{ path, result string }\n\nvar cleanTests = []cleanPathTest{{\"/\", \"/\"}, {\"/abc\", \"/abc\"}, {\"/a/b/c\", \"/a/b/c\"}, {\"/abc/\", \"/abc/\"}, {\"/a/b/c/\", \"/a/b/c/\"}, {\"\", \"/\"}, {\"a/\", \"/a/\"}, {\"abc\", \"/abc\"}, {\"abc/def\", \"/abc/def\"}, {\"a/b/c\", \"/a/b/c\"}, {\"//\", \"/\"}, {\"/abc//\", \"/abc/\"}, {\"/abc/def//\", \"/abc/def/\"}, {\"/a/b/c//\", \"/a/b/c/\"}, {\"/abc//def//ghi\", \"/abc/def/ghi\"}, {\"//abc\", \"/abc\"}, {\"///abc\", \"/abc\"}, {\"//abc//\", \"/abc/\"}, {\".\", \"/\"}, {\"./\", \"/\"}, {\"/abc/./def\", \"/abc/def\"}, {\"/./abc/def\", \"/abc/def\"}, {\"/abc/.\", \"/abc/\"}, {\"..\", \"/\"}, {\"../\", \"/\"}, {\"../../\", \"/\"}, {\"../..\", \"/\"}, {\"../../abc\", \"/abc\"}, {\"/abc/def/ghi/../jkl\", \"/abc/def/jkl\"}, {\"/abc/def/../ghi/../jkl\", \"/abc/jkl\"}, {\"/abc/def/..\", \"/abc\"}, {\"/abc/def/../..\", \"/\"}, {\"/abc/def/../../..\", \"/\"}, {\"/abc/def/../../..\", \"/\"}, {\"/abc/def/../../../ghi/jkl/../../../mno\", \"/mno\"}, {\"abc/./../def\", \"/def\"}, {\"abc//./../def\", \"/def\"}, {\"abc/../../././../def\", \"/def\"}}\n\nfunc TestPathClean(t *testing.T) {\n\tfor _, test := range cleanTests {\n\t\tassert.Equal(t, test.result, cleanPath(test.path))\n\t\tassert.Equal(t, test.result, cleanPath(test.result))\n\t}\n}\nfunc TestPathCleanMallocs(t *testing.T) {\n\tif testing.Short() {\n\t\tt.Skip(\"skipping malloc count in short mode\")\n\t}\n\tfor _, test := range cleanTests {\n\t\tallocs := testing.AllocsPerRun(100, func() {\n\t\t\tcleanPath(test.result)\n\t\t})\n\t\tassert.EqualValues(t, allocs, 0)\n\t}\n}\nfunc BenchmarkPathClean(b *testing.B) {\n\tb.ReportAllocs()\n\tfor i := 0; i \u003c b.N; i++ {\n\t\tfor _, test := range cleanTests {\n\t\t\tcleanPath(test.path)\n\t\t}\n\t}\n}\nfunc genLongPaths() (testPaths []cleanPathTest) {\n\tfor i := 1; i \u003c= 1234; i++ {\n\t\tss := strings.Repeat(\"a\", i)\n\t\tcorrectPath := \"/\" + ss\n\t\ttestPaths = append(testPaths, cleanPathTest{path: correctPath, result: correctPath}, cleanPathTest{path: ss, result: correctPath}, cleanPathTest{path: \"//\" + ss, result: correctPath}, cleanPathTest{path: \"/\" + ss + \"/b/..\", result: correctPath})\n\t}\n\treturn\n}\nfunc TestPathCleanLong(t *testing.T) {\n\tcleanTests := genLongPaths()\n\tfor _, test := range cleanTests {\n\t\tassert.Equal(t, test.result, cleanPath(test.path))\n\t\tassert.Equal(t, test.result, cleanPath(test.result))\n\t}\n}\nfunc BenchmarkPathCleanLong(b *testing.B) {\n\tcleanTests := genLongPaths()\n\tb.ResetTimer()\n\tb.ReportAllocs()\n\tfor i := 0; i \u003c b.N; i++ {\n\t\tfor _, test := range cleanTests {\n\t\t\tcleanPath(test.path)\n\t\t}\n\t}\n}\n","nodeType":"File","column":0,"line":0,"doc":null,"package":268,"name":{"children":[],"start":276,"end":279,"code":"gin","nodeType":"Identifier","column":0,"line":0,"namePos":276,"name":"gin","object":null},"declarations":[{"children":[],"start":281,"end":352,"code":"import (\n\t\"strings\"\n\t\"testing\"\n\t\"github.com/stretchr/testify/assert\"\n)","nodeType":"GenericDeclaration","column":0,"line":0,"doc":null,"tokenPosition":281,"token":75,"lparen":288,"specifications":[{"children":[],"start":291,"end":300,"code":"\"strings\"","nodeType":"ImportSpecification","column":0,"line":0,"doc":null,"name":null,"path":{"children":[],"start":291,"end":300,"code":"\"strings\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":291,"kind":9,"value":"\"strings\""},"comment":null,"endPosition":0},{"children":[],"start":302,"end":311,"code":"\"testing\"","nodeType":"ImportSpecification","column":0,"line":0,"doc":null,"name":null,"path":{"children":[],"start":302,"end":311,"code":"\"testing\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":302,"kind":9,"value":"\"testing\""},"comment":null,"endPosition":0},{"children":[],"start":314,"end":350,"code":"\"github.com/stretchr/testify/assert\"","nodeType":"ImportSpecification","column":0,"line":0,"doc":null,"name":null,"path":{"children":[],"start":314,"end":350,"code":"\"github.com/stretchr/testify/assert\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":314,"kind":9,"value":"\"github.com/stretchr/testify/assert\""},"comment":null,"endPosition":0}],"rparen":351},{"children":[],"start":354,"end":404,"code":"type cleanPathTest struct{ path, result string }","nodeType":"GenericDeclaration","column":0,"line":0,"doc":null,"tokenPosition":354,"token":84,"lparen":0,"specifications":[{"children":[],"start":359,"end":404,"code":"cleanPathTest struct{ path, result string }","nodeType":"TypeSpecification","column":0,"line":0,"doc":null,"name":{"children":[],"start":359,"end":372,"code":"cleanPathTest","nodeType":"Identifier","column":0,"line":0,"namePos":359,"name":"cleanPathTest","object":null},"typeParams":null,"assign":0,"type":{"children":[],"start":373,"end":404,"code":"struct{ path, result string }","nodeType":"StructType","column":0,"line":0,"struct":373,"fields":{"children":[],"start":380,"end":404,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":380,"list":[{"children":[],"start":383,"end":402,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":383,"end":387,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":383,"name":"path","object":null},{"children":[],"start":389,"end":395,"code":"result","nodeType":"Identifier","column":0,"line":0,"namePos":389,"name":"result","object":null}],"type":{"children":[],"start":396,"end":402,"code":"string","nodeType":"Identifier","column":0,"line":0,"namePos":396,"name":"string","object":null},"tag":null,"comment":null}],"closing":403},"incomplete":false},"comment":null}],"rparen":0},{"children":[],"start":406,"end":1487,"code":"var cleanTests = []cleanPathTest{{\"/\", \"/\"}, {\"/abc\", \"/abc\"}, {\"/a/b/c\", \"/a/b/c\"}, {\"/abc/\", \"/abc/\"}, {\"/a/b/c/\", \"/a/b/c/\"}, {\"\", \"/\"}, {\"a/\", \"/a/\"}, {\"abc\", \"/abc\"}, {\"abc/def\", \"/abc/def\"}, {\"a/b/c\", \"/a/b/c\"}, {\"//\", \"/\"}, {\"/abc//\", \"/abc/\"}, {\"/abc/def//\", \"/abc/def/\"}, {\"/a/b/c//\", \"/a/b/c/\"}, {\"/abc//def//ghi\", \"/abc/def/ghi\"}, {\"//abc\", \"/abc\"}, {\"///abc\", \"/abc\"}, {\"//abc//\", \"/abc/\"}, {\".\", \"/\"}, {\"./\", \"/\"}, {\"/abc/./def\", \"/abc/def\"}, {\"/./abc/def\", \"/abc/def\"}, {\"/abc/.\", \"/abc/\"}, {\"..\", \"/\"}, {\"../\", \"/\"}, {\"../../\", \"/\"}, {\"../..\", \"/\"}, {\"../../abc\", \"/abc\"}, {\"/abc/def/ghi/../jkl\", \"/abc/def/jkl\"}, {\"/abc/def/../ghi/../jkl\", \"/abc/jkl\"}, {\"/abc/def/..\", \"/abc\"}, {\"/abc/def/../..\", \"/\"}, {\"/abc/def/../../..\", \"/\"}, {\"/abc/def/../../..\", \"/\"}, {\"/abc/def/../../../ghi/jkl/../../../mno\", \"/mno\"}, {\"abc/./../def\", \"/def\"}, {\"abc//./../def\", \"/def\"}, {\"abc/../../././../def\", \"/def\"}}","nodeType":"GenericDeclaration","column":0,"line":0,"doc":null,"tokenPosition":406,"token":85,"lparen":0,"specifications":[{"children":[],"start":410,"end":1487,"code":"cleanTests = []cleanPathTest{{\"/\", \"/\"}, {\"/abc\", \"/abc\"}, {\"/a/b/c\", \"/a/b/c\"}, {\"/abc/\", \"/abc/\"}, {\"/a/b/c/\", \"/a/b/c/\"}, {\"\", \"/\"}, {\"a/\", \"/a/\"}, {\"abc\", \"/abc\"}, {\"abc/def\", \"/abc/def\"}, {\"a/b/c\", \"/a/b/c\"}, {\"//\", \"/\"}, {\"/abc//\", \"/abc/\"}, {\"/abc/def//\", \"/abc/def/\"}, {\"/a/b/c//\", \"/a/b/c/\"}, {\"/abc//def//ghi\", \"/abc/def/ghi\"}, {\"//abc\", \"/abc\"}, {\"///abc\", \"/abc\"}, {\"//abc//\", \"/abc/\"}, {\".\", \"/\"}, {\"./\", \"/\"}, {\"/abc/./def\", \"/abc/def\"}, {\"/./abc/def\", \"/abc/def\"}, {\"/abc/.\", \"/abc/\"}, {\"..\", \"/\"}, {\"../\", \"/\"}, {\"../../\", \"/\"}, {\"../..\", \"/\"}, {\"../../abc\", \"/abc\"}, {\"/abc/def/ghi/../jkl\", \"/abc/def/jkl\"}, {\"/abc/def/../ghi/../jkl\", \"/abc/jkl\"}, {\"/abc/def/..\", \"/abc\"}, {\"/abc/def/../..\", \"/\"}, {\"/abc/def/../../..\", \"/\"}, {\"/abc/def/../../..\", \"/\"}, {\"/abc/def/../../../ghi/jkl/../../../mno\", \"/mno\"}, {\"abc/./../def\", \"/def\"}, {\"abc//./../def\", \"/def\"}, {\"abc/../../././../def\", \"/def\"}}","nodeType":"ValueSpecification","column":0,"line":0,"doc":null,"names":[{"children":[],"start":410,"end":420,"code":"cleanTests","nodeType":"Identifier","column":0,"line":0,"namePos":410,"name":"cleanTests","object":null}],"type":null,"values":[{"children":[],"start":423,"end":1487,"code":"[]cleanPathTest{{\"/\", \"/\"}, {\"/abc\", \"/abc\"}, {\"/a/b/c\", \"/a/b/c\"}, {\"/abc/\", \"/abc/\"}, {\"/a/b/c/\", \"/a/b/c/\"}, {\"\", \"/\"}, {\"a/\", \"/a/\"}, {\"abc\", \"/abc\"}, {\"abc/def\", \"/abc/def\"}, {\"a/b/c\", \"/a/b/c\"}, {\"//\", \"/\"}, {\"/abc//\", \"/abc/\"}, {\"/abc/def//\", \"/abc/def/\"}, {\"/a/b/c//\", \"/a/b/c/\"}, {\"/abc//def//ghi\", \"/abc/def/ghi\"}, {\"//abc\", \"/abc\"}, {\"///abc\", \"/abc\"}, {\"//abc//\", \"/abc/\"}, {\".\", \"/\"}, {\"./\", \"/\"}, {\"/abc/./def\", \"/abc/def\"}, {\"/./abc/def\", \"/abc/def\"}, {\"/abc/.\", \"/abc/\"}, {\"..\", \"/\"}, {\"../\", \"/\"}, {\"../../\", \"/\"}, {\"../..\", \"/\"}, {\"../../abc\", \"/abc\"}, {\"/abc/def/ghi/../jkl\", \"/abc/def/jkl\"}, {\"/abc/def/../ghi/../jkl\", \"/abc/jkl\"}, {\"/abc/def/..\", \"/abc\"}, {\"/abc/def/../..\", \"/\"}, {\"/abc/def/../../..\", \"/\"}, {\"/abc/def/../../..\", \"/\"}, {\"/abc/def/../../../ghi/jkl/../../../mno\", \"/mno\"}, {\"abc/./../def\", \"/def\"}, {\"abc//./../def\", \"/def\"}, {\"abc/../../././../def\", \"/def\"}}","nodeType":"CompositeLiteral","column":0,"line":0,"type":{"children":[],"start":423,"end":438,"code":"[]cleanPathTest","nodeType":"ArrayType","column":0,"line":0,"leftBracket":423,"length":null,"element":{"children":[],"start":425,"end":438,"code":"cleanPathTest","nodeType":"Identifier","column":0,"line":0,"namePos":425,"name":"cleanPathTest","object":null}},"lbrace":438,"elements":[{"children":[],"start":459,"end":469,"code":"{\"/\", \"/\"}","nodeType":"CompositeLiteral","column":0,"line":0,"type":null,"lbrace":459,"elements":[{"children":[],"start":460,"end":463,"code":"\"/\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":460,"kind":9,"value":"\"/\""},{"children":[],"start":465,"end":468,"code":"\"/\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":465,"kind":9,"value":"\"/\""}],"rbrace":468,"incomplete":false},{"children":[],"start":472,"end":488,"code":"{\"/abc\", \"/abc\"}","nodeType":"CompositeLiteral","column":0,"line":0,"type":null,"lbrace":472,"elements":[{"children":[],"start":473,"end":479,"code":"\"/abc\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":473,"kind":9,"value":"\"/abc\""},{"children":[],"start":481,"end":487,"code":"\"/abc\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":481,"kind":9,"value":"\"/abc\""}],"rbrace":487,"incomplete":false},{"children":[],"start":491,"end":511,"code":"{\"/a/b/c\", \"/a/b/c\"}","nodeType":"CompositeLiteral","column":0,"line":0,"type":null,"lbrace":491,"elements":[{"children":[],"start":492,"end":500,"code":"\"/a/b/c\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":492,"kind":9,"value":"\"/a/b/c\""},{"children":[],"start":502,"end":510,"code":"\"/a/b/c\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":502,"kind":9,"value":"\"/a/b/c\""}],"rbrace":510,"incomplete":false},{"children":[],"start":514,"end":532,"code":"{\"/abc/\", \"/abc/\"}","nodeType":"CompositeLiteral","column":0,"line":0,"type":null,"lbrace":514,"elements":[{"children":[],"start":515,"end":522,"code":"\"/abc/\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":515,"kind":9,"value":"\"/abc/\""},{"children":[],"start":524,"end":531,"code":"\"/abc/\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":524,"kind":9,"value":"\"/abc/\""}],"rbrace":531,"incomplete":false},{"children":[],"start":535,"end":557,"code":"{\"/a/b/c/\", \"/a/b/c/\"}","nodeType":"CompositeLiteral","column":0,"line":0,"type":null,"lbrace":535,"elements":[{"children":[],"start":536,"end":545,"code":"\"/a/b/c/\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":536,"kind":9,"value":"\"/a/b/c/\""},{"children":[],"start":547,"end":556,"code":"\"/a/b/c/\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":547,"kind":9,"value":"\"/a/b/c/\""}],"rbrace":556,"incomplete":false},{"children":[],"start":578,"end":587,"code":"{\"\", \"/\"}","nodeType":"CompositeLiteral","column":0,"line":0,"type":null,"lbrace":578,"elements":[{"children":[],"start":579,"end":581,"code":"\"\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":579,"kind":9,"value":"\"\""},{"children":[],"start":583,"end":586,"code":"\"/\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":583,"kind":9,"value":"\"/\""}],"rbrace":586,"incomplete":false},{"children":[],"start":590,"end":603,"code":"{\"a/\", \"/a/\"}","nodeType":"CompositeLiteral","column":0,"line":0,"type":null,"lbrace":590,"elements":[{"children":[],"start":591,"end":595,"code":"\"a/\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":591,"kind":9,"value":"\"a/\""},{"children":[],"start":597,"end":602,"code":"\"/a/\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":597,"kind":9,"value":"\"/a/\""}],"rbrace":602,"incomplete":false},{"children":[],"start":606,"end":621,"code":"{\"abc\", \"/abc\"}","nodeType":"CompositeLiteral","column":0,"line":0,"type":null,"lbrace":606,"elements":[{"children":[],"start":607,"end":612,"code":"\"abc\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":607,"kind":9,"value":"\"abc\""},{"children":[],"start":614,"end":620,"code":"\"/abc\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":614,"kind":9,"value":"\"/abc\""}],"rbrace":620,"incomplete":false},{"children":[],"start":624,"end":647,"code":"{\"abc/def\", \"/abc/def\"}","nodeType":"CompositeLiteral","column":0,"line":0,"type":null,"lbrace":624,"elements":[{"children":[],"start":625,"end":634,"code":"\"abc/def\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":625,"kind":9,"value":"\"abc/def\""},{"children":[],"start":636,"end":646,"code":"\"/abc/def\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":636,"kind":9,"value":"\"/abc/def\""}],"rbrace":646,"incomplete":false},{"children":[],"start":650,"end":669,"code":"{\"a/b/c\", \"/a/b/c\"}","nodeType":"CompositeLiteral","column":0,"line":0,"type":null,"lbrace":650,"elements":[{"children":[],"start":651,"end":658,"code":"\"a/b/c\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":651,"kind":9,"value":"\"a/b/c\""},{"children":[],"start":660,"end":668,"code":"\"/a/b/c\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":660,"kind":9,"value":"\"/a/b/c\""}],"rbrace":668,"incomplete":false},{"children":[],"start":698,"end":709,"code":"{\"//\", \"/\"}","nodeType":"CompositeLiteral","column":0,"line":0,"type":null,"lbrace":698,"elements":[{"children":[],"start":699,"end":703,"code":"\"//\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":699,"kind":9,"value":"\"//\""},{"children":[],"start":705,"end":708,"code":"\"/\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":705,"kind":9,"value":"\"/\""}],"rbrace":708,"incomplete":false},{"children":[],"start":712,"end":731,"code":"{\"/abc//\", \"/abc/\"}","nodeType":"CompositeLiteral","column":0,"line":0,"type":null,"lbrace":712,"elements":[{"children":[],"start":713,"end":721,"code":"\"/abc//\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":713,"kind":9,"value":"\"/abc//\""},{"children":[],"start":723,"end":730,"code":"\"/abc/\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":723,"kind":9,"value":"\"/abc/\""}],"rbrace":730,"incomplete":false},{"children":[],"start":734,"end":761,"code":"{\"/abc/def//\", \"/abc/def/\"}","nodeType":"CompositeLiteral","column":0,"line":0,"type":null,"lbrace":734,"elements":[{"children":[],"start":735,"end":747,"code":"\"/abc/def//\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":735,"kind":9,"value":"\"/abc/def//\""},{"children":[],"start":749,"end":760,"code":"\"/abc/def/\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":749,"kind":9,"value":"\"/abc/def/\""}],"rbrace":760,"incomplete":false},{"children":[],"start":764,"end":787,"code":"{\"/a/b/c//\", \"/a/b/c/\"}","nodeType":"CompositeLiteral","column":0,"line":0,"type":null,"lbrace":764,"elements":[{"children":[],"start":765,"end":775,"code":"\"/a/b/c//\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":765,"kind":9,"value":"\"/a/b/c//\""},{"children":[],"start":777,"end":786,"code":"\"/a/b/c/\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":777,"kind":9,"value":"\"/a/b/c/\""}],"rbrace":786,"incomplete":false},{"children":[],"start":790,"end":824,"code":"{\"/abc//def//ghi\", \"/abc/def/ghi\"}","nodeType":"CompositeLiteral","column":0,"line":0,"type":null,"lbrace":790,"elements":[{"children":[],"start":791,"end":807,"code":"\"/abc//def//ghi\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":791,"kind":9,"value":"\"/abc//def//ghi\""},{"children":[],"start":809,"end":823,"code":"\"/abc/def/ghi\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":809,"kind":9,"value":"\"/abc/def/ghi\""}],"rbrace":823,"incomplete":false},{"children":[],"start":827,"end":844,"code":"{\"//abc\", \"/abc\"}","nodeType":"CompositeLiteral","column":0,"line":0,"type":null,"lbrace":827,"elements":[{"children":[],"start":828,"end":835,"code":"\"//abc\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":828,"kind":9,"value":"\"//abc\""},{"children":[],"start":837,"end":843,"code":"\"/abc\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":837,"kind":9,"value":"\"/abc\""}],"rbrace":843,"incomplete":false},{"children":[],"start":847,"end":865,"code":"{\"///abc\", \"/abc\"}","nodeType":"CompositeLiteral","column":0,"line":0,"type":null,"lbrace":847,"elements":[{"children":[],"start":848,"end":856,"code":"\"///abc\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":848,"kind":9,"value":"\"///abc\""},{"children":[],"start":858,"end":864,"code":"\"/abc\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":858,"kind":9,"value":"\"/abc\""}],"rbrace":864,"incomplete":false},{"children":[],"start":868,"end":888,"code":"{\"//abc//\", \"/abc/\"}","nodeType":"CompositeLiteral","column":0,"line":0,"type":null,"lbrace":868,"elements":[{"children":[],"start":869,"end":878,"code":"\"//abc//\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":869,"kind":9,"value":"\"//abc//\""},{"children":[],"start":880,"end":887,"code":"\"/abc/\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":880,"kind":9,"value":"\"/abc/\""}],"rbrace":887,"incomplete":false},{"children":[],"start":914,"end":924,"code":"{\".\", \"/\"}","nodeType":"CompositeLiteral","column":0,"line":0,"type":null,"lbrace":914,"elements":[{"children":[],"start":915,"end":918,"code":"\".\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":915,"kind":9,"value":"\".\""},{"children":[],"start":920,"end":923,"code":"\"/\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":920,"kind":9,"value":"\"/\""}],"rbrace":923,"incomplete":false},{"children":[],"start":927,"end":938,"code":"{\"./\", \"/\"}","nodeType":"CompositeLiteral","column":0,"line":0,"type":null,"lbrace":927,"elements":[{"children":[],"start":928,"end":932,"code":"\"./\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":928,"kind":9,"value":"\"./\""},{"children":[],"start":934,"end":937,"code":"\"/\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":934,"kind":9,"value":"\"/\""}],"rbrace":937,"incomplete":false},{"children":[],"start":941,"end":967,"code":"{\"/abc/./def\", \"/abc/def\"}","nodeType":"CompositeLiteral","column":0,"line":0,"type":null,"lbrace":941,"elements":[{"children":[],"start":942,"end":954,"code":"\"/abc/./def\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":942,"kind":9,"value":"\"/abc/./def\""},{"children":[],"start":956,"end":966,"code":"\"/abc/def\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":956,"kind":9,"value":"\"/abc/def\""}],"rbrace":966,"incomplete":false},{"children":[],"start":970,"end":996,"code":"{\"/./abc/def\", \"/abc/def\"}","nodeType":"CompositeLiteral","column":0,"line":0,"type":null,"lbrace":970,"elements":[{"children":[],"start":971,"end":983,"code":"\"/./abc/def\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":971,"kind":9,"value":"\"/./abc/def\""},{"children":[],"start":985,"end":995,"code":"\"/abc/def\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":985,"kind":9,"value":"\"/abc/def\""}],"rbrace":995,"incomplete":false},{"children":[],"start":999,"end":1018,"code":"{\"/abc/.\", \"/abc/\"}","nodeType":"CompositeLiteral","column":0,"line":0,"type":null,"lbrace":999,"elements":[{"children":[],"start":1000,"end":1008,"code":"\"/abc/.\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":1000,"kind":9,"value":"\"/abc/.\""},{"children":[],"start":1010,"end":1017,"code":"\"/abc/\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":1010,"kind":9,"value":"\"/abc/\""}],"rbrace":1017,"incomplete":false},{"children":[],"start":1045,"end":1056,"code":"{\"..\", \"/\"}","nodeType":"CompositeLiteral","column":0,"line":0,"type":null,"lbrace":1045,"elements":[{"children":[],"start":1046,"end":1050,"code":"\"..\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":1046,"kind":9,"value":"\"..\""},{"children":[],"start":1052,"end":1055,"code":"\"/\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":1052,"kind":9,"value":"\"/\""}],"rbrace":1055,"incomplete":false},{"children":[],"start":1059,"end":1071,"code":"{\"../\", \"/\"}","nodeType":"CompositeLiteral","column":0,"line":0,"type":null,"lbrace":1059,"elements":[{"children":[],"start":1060,"end":1065,"code":"\"../\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":1060,"kind":9,"value":"\"../\""},{"children":[],"start":1067,"end":1070,"code":"\"/\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":1067,"kind":9,"value":"\"/\""}],"rbrace":1070,"incomplete":false},{"children":[],"start":1074,"end":1089,"code":"{\"../../\", \"/\"}","nodeType":"CompositeLiteral","column":0,"line":0,"type":null,"lbrace":1074,"elements":[{"children":[],"start":1075,"end":1083,"code":"\"../../\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":1075,"kind":9,"value":"\"../../\""},{"children":[],"start":1085,"end":1088,"code":"\"/\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":1085,"kind":9,"value":"\"/\""}],"rbrace":1088,"incomplete":false},{"children":[],"start":1092,"end":1106,"code":"{\"../..\", \"/\"}","nodeType":"CompositeLiteral","column":0,"line":0,"type":null,"lbrace":1092,"elements":[{"children":[],"start":1093,"end":1100,"code":"\"../..\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":1093,"kind":9,"value":"\"../..\""},{"children":[],"start":1102,"end":1105,"code":"\"/\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":1102,"kind":9,"value":"\"/\""}],"rbrace":1105,"incomplete":false},{"children":[],"start":1109,"end":1130,"code":"{\"../../abc\", \"/abc\"}","nodeType":"CompositeLiteral","column":0,"line":0,"type":null,"lbrace":1109,"elements":[{"children":[],"start":1110,"end":1121,"code":"\"../../abc\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":1110,"kind":9,"value":"\"../../abc\""},{"children":[],"start":1123,"end":1129,"code":"\"/abc\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":1123,"kind":9,"value":"\"/abc\""}],"rbrace":1129,"incomplete":false},{"children":[],"start":1133,"end":1172,"code":"{\"/abc/def/ghi/../jkl\", \"/abc/def/jkl\"}","nodeType":"CompositeLiteral","column":0,"line":0,"type":null,"lbrace":1133,"elements":[{"children":[],"start":1134,"end":1155,"code":"\"/abc/def/ghi/../jkl\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":1134,"kind":9,"value":"\"/abc/def/ghi/../jkl\""},{"children":[],"start":1157,"end":1171,"code":"\"/abc/def/jkl\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":1157,"kind":9,"value":"\"/abc/def/jkl\""}],"rbrace":1171,"incomplete":false},{"children":[],"start":1175,"end":1213,"code":"{\"/abc/def/../ghi/../jkl\", \"/abc/jkl\"}","nodeType":"CompositeLiteral","column":0,"line":0,"type":null,"lbrace":1175,"elements":[{"children":[],"start":1176,"end":1200,"code":"\"/abc/def/../ghi/../jkl\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":1176,"kind":9,"value":"\"/abc/def/../ghi/../jkl\""},{"children":[],"start":1202,"end":1212,"code":"\"/abc/jkl\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":1202,"kind":9,"value":"\"/abc/jkl\""}],"rbrace":1212,"incomplete":false},{"children":[],"start":1216,"end":1239,"code":"{\"/abc/def/..\", \"/abc\"}","nodeType":"CompositeLiteral","column":0,"line":0,"type":null,"lbrace":1216,"elements":[{"children":[],"start":1217,"end":1230,"code":"\"/abc/def/..\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":1217,"kind":9,"value":"\"/abc/def/..\""},{"children":[],"start":1232,"end":1238,"code":"\"/abc\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":1232,"kind":9,"value":"\"/abc\""}],"rbrace":1238,"incomplete":false},{"children":[],"start":1242,"end":1265,"code":"{\"/abc/def/../..\", \"/\"}","nodeType":"CompositeLiteral","column":0,"line":0,"type":null,"lbrace":1242,"elements":[{"children":[],"start":1243,"end":1259,"code":"\"/abc/def/../..\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":1243,"kind":9,"value":"\"/abc/def/../..\""},{"children":[],"start":1261,"end":1264,"code":"\"/\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":1261,"kind":9,"value":"\"/\""}],"rbrace":1264,"incomplete":false},{"children":[],"start":1268,"end":1294,"code":"{\"/abc/def/../../..\", \"/\"}","nodeType":"CompositeLiteral","column":0,"line":0,"type":null,"lbrace":1268,"elements":[{"children":[],"start":1269,"end":1288,"code":"\"/abc/def/../../..\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":1269,"kind":9,"value":"\"/abc/def/../../..\""},{"children":[],"start":1290,"end":1293,"code":"\"/\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":1290,"kind":9,"value":"\"/\""}],"rbrace":1293,"incomplete":false},{"children":[],"start":1297,"end":1323,"code":"{\"/abc/def/../../..\", \"/\"}","nodeType":"CompositeLiteral","column":0,"line":0,"type":null,"lbrace":1297,"elements":[{"children":[],"start":1298,"end":1317,"code":"\"/abc/def/../../..\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":1298,"kind":9,"value":"\"/abc/def/../../..\""},{"children":[],"start":1319,"end":1322,"code":"\"/\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":1319,"kind":9,"value":"\"/\""}],"rbrace":1322,"incomplete":false},{"children":[],"start":1326,"end":1376,"code":"{\"/abc/def/../../../ghi/jkl/../../../mno\", \"/mno\"}","nodeType":"CompositeLiteral","column":0,"line":0,"type":null,"lbrace":1326,"elements":[{"children":[],"start":1327,"end":1367,"code":"\"/abc/def/../../../ghi/jkl/../../../mno\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":1327,"kind":9,"value":"\"/abc/def/../../../ghi/jkl/../../../mno\""},{"children":[],"start":1369,"end":1375,"code":"\"/mno\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":1369,"kind":9,"value":"\"/mno\""}],"rbrace":1375,"incomplete":false},{"children":[],"start":1397,"end":1421,"code":"{\"abc/./../def\", \"/def\"}","nodeType":"CompositeLiteral","column":0,"line":0,"type":null,"lbrace":1397,"elements":[{"children":[],"start":1398,"end":1412,"code":"\"abc/./../def\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":1398,"kind":9,"value":"\"abc/./../def\""},{"children":[],"start":1414,"end":1420,"code":"\"/def\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":1414,"kind":9,"value":"\"/def\""}],"rbrace":1420,"incomplete":false},{"children":[],"start":1424,"end":1449,"code":"{\"abc//./../def\", \"/def\"}","nodeType":"CompositeLiteral","column":0,"line":0,"type":null,"lbrace":1424,"elements":[{"children":[],"start":1425,"end":1440,"code":"\"abc//./../def\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":1425,"kind":9,"value":"\"abc//./../def\""},{"children":[],"start":1442,"end":1448,"code":"\"/def\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":1442,"kind":9,"value":"\"/def\""}],"rbrace":1448,"incomplete":false},{"children":[],"start":1452,"end":1484,"code":"{\"abc/../../././../def\", \"/def\"}","nodeType":"CompositeLiteral","column":0,"line":0,"type":null,"lbrace":1452,"elements":[{"children":[],"start":1453,"end":1475,"code":"\"abc/../../././../def\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":1453,"kind":9,"value":"\"abc/../../././../def\""},{"children":[],"start":1477,"end":1483,"code":"\"/def\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":1477,"kind":9,"value":"\"/def\""}],"rbrace":1483,"incomplete":false}],"rbrace":1486,"incomplete":false}],"comment":null}],"rparen":0},{"children":[],"start":1489,"end":1671,"code":"func TestPathClean(t *testing.T) {\n\tfor _, test := range cleanTests {\n\t\tassert.Equal(t, test.result, cleanPath(test.path))\n\t\tassert.Equal(t, test.result, cleanPath(test.result))\n\t}\n}","nodeType":"FunctionDeclaration","column":0,"line":0,"doc":null,"receiver":null,"name":{"children":[],"start":1494,"end":1507,"code":"TestPathClean","nodeType":"Identifier","column":0,"line":0,"namePos":1494,"name":"TestPathClean","object":null},"type":{"children":[],"start":1489,"end":1521,"code":"func(t *testing.T)","nodeType":"FunctionType","column":0,"line":0,"Function":1489,"TypeParams":null,"Params":{"children":[],"start":1507,"end":1521,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":1507,"list":[{"children":[],"start":1508,"end":1520,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":1508,"end":1509,"code":"t","nodeType":"Identifier","column":0,"line":0,"namePos":1508,"name":"t","object":null}],"type":{"children":[],"start":1510,"end":1520,"code":"*testing.T","nodeType":"StarExpression","column":0,"line":0,"star":1510,"expression":{"children":[],"start":1511,"end":1520,"code":"testing.T","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":1511,"end":1518,"code":"testing","nodeType":"Identifier","column":0,"line":0,"namePos":1511,"name":"testing","object":null},"sel":{"children":[],"start":1519,"end":1520,"code":"T","nodeType":"Identifier","column":0,"line":0,"namePos":1519,"name":"T","object":null}}},"tag":null,"comment":null}],"closing":1520},"Results":null},"body":{"children":[],"start":1522,"end":1671,"code":"{\n\tfor _, test := range cleanTests {\n\t\tassert.Equal(t, test.result, cleanPath(test.path))\n\t\tassert.Equal(t, test.result, cleanPath(test.result))\n\t}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":1522,"list":[{"children":[],"start":1525,"end":1669,"code":"for _, test := range cleanTests {\n\tassert.Equal(t, test.result, cleanPath(test.path))\n\tassert.Equal(t, test.result, cleanPath(test.result))\n}","nodeType":"RangeStatement","column":0,"line":0,"for":1525,"key":{"children":[],"start":1529,"end":1530,"code":"_","nodeType":"Identifier","column":0,"line":0,"namePos":1529,"name":"_","object":null},"value":{"children":[],"start":1532,"end":1536,"code":"test","nodeType":"Identifier","column":0,"line":0,"namePos":1532,"name":"test","object":null},"tokenPos":1537,"token":47,"range":1540,"expression":{"children":[],"start":1546,"end":1556,"code":"cleanTests","nodeType":"Identifier","column":0,"line":0,"namePos":1546,"name":"cleanTests","object":null},"body":{"children":[],"start":1557,"end":1669,"code":"{\n\tassert.Equal(t, test.result, cleanPath(test.path))\n\tassert.Equal(t, test.result, cleanPath(test.result))\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":1557,"list":[{"children":[],"start":1561,"end":1611,"code":"assert.Equal(t, test.result, cleanPath(test.path))","nodeType":"ExpressionStatement","column":0,"line":0,"Expression":{"children":[],"start":1561,"end":1611,"code":"assert.Equal(t, test.result, cleanPath(test.path))","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":1561,"end":1573,"code":"assert.Equal","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":1561,"end":1567,"code":"assert","nodeType":"Identifier","column":0,"line":0,"namePos":1561,"name":"assert","object":null},"sel":{"children":[],"start":1568,"end":1573,"code":"Equal","nodeType":"Identifier","column":0,"line":0,"namePos":1568,"name":"Equal","object":null}},"lparen":0,"args":[{"children":[],"start":1574,"end":1575,"code":"t","nodeType":"Identifier","column":0,"line":0,"namePos":1574,"name":"t","object":null},{"children":[],"start":1577,"end":1588,"code":"test.result","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":1577,"end":1581,"code":"test","nodeType":"Identifier","column":0,"line":0,"namePos":1577,"name":"test","object":null},"sel":{"children":[],"start":1582,"end":1588,"code":"result","nodeType":"Identifier","column":0,"line":0,"namePos":1582,"name":"result","object":null}},{"children":[],"start":1590,"end":1610,"code":"cleanPath(test.path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":1590,"end":1599,"code":"cleanPath","nodeType":"Identifier","column":0,"line":0,"namePos":1590,"name":"cleanPath","object":null},"lparen":0,"args":[{"children":[],"start":1600,"end":1609,"code":"test.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":1600,"end":1604,"code":"test","nodeType":"Identifier","column":0,"line":0,"namePos":1600,"name":"test","object":null},"sel":{"children":[],"start":1605,"end":1609,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":1605,"name":"path","object":null}}],"ellipsis":0,"rparen":0}],"ellipsis":0,"rparen":0}},{"children":[],"start":1614,"end":1666,"code":"assert.Equal(t, test.result, cleanPath(test.result))","nodeType":"ExpressionStatement","column":0,"line":0,"Expression":{"children":[],"start":1614,"end":1666,"code":"assert.Equal(t, test.result, cleanPath(test.result))","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":1614,"end":1626,"code":"assert.Equal","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":1614,"end":1620,"code":"assert","nodeType":"Identifier","column":0,"line":0,"namePos":1614,"name":"assert","object":null},"sel":{"children":[],"start":1621,"end":1626,"code":"Equal","nodeType":"Identifier","column":0,"line":0,"namePos":1621,"name":"Equal","object":null}},"lparen":0,"args":[{"children":[],"start":1627,"end":1628,"code":"t","nodeType":"Identifier","column":0,"line":0,"namePos":1627,"name":"t","object":null},{"children":[],"start":1630,"end":1641,"code":"test.result","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":1630,"end":1634,"code":"test","nodeType":"Identifier","column":0,"line":0,"namePos":1630,"name":"test","object":null},"sel":{"children":[],"start":1635,"end":1641,"code":"result","nodeType":"Identifier","column":0,"line":0,"namePos":1635,"name":"result","object":null}},{"children":[],"start":1643,"end":1665,"code":"cleanPath(test.result)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":1643,"end":1652,"code":"cleanPath","nodeType":"Identifier","column":0,"line":0,"namePos":1643,"name":"cleanPath","object":null},"lparen":0,"args":[{"children":[],"start":1653,"end":1664,"code":"test.result","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":1653,"end":1657,"code":"test","nodeType":"Identifier","column":0,"line":0,"namePos":1653,"name":"test","object":null},"sel":{"children":[],"start":1658,"end":1664,"code":"result","nodeType":"Identifier","column":0,"line":0,"namePos":1658,"name":"result","object":null}}],"ellipsis":0,"rparen":0}],"ellipsis":0,"rparen":0}}],"rbrace":1668}}],"rbrace":1670}},{"children":[],"start":1673,"end":1936,"code":"func TestPathCleanMallocs(t *testing.T) {\n\tif testing.Short() {\n\t\tt.Skip(\"skipping malloc count in short mode\")\n\t}\n\tfor _, test := range cleanTests {\n\t\tallocs := testing.AllocsPerRun(100, func() {\n\t\t\tcleanPath(test.result)\n\t\t})\n\t\tassert.EqualValues(t, allocs, 0)\n\t}\n}","nodeType":"FunctionDeclaration","column":0,"line":0,"doc":null,"receiver":null,"name":{"children":[],"start":1678,"end":1698,"code":"TestPathCleanMallocs","nodeType":"Identifier","column":0,"line":0,"namePos":1678,"name":"TestPathCleanMallocs","object":null},"type":{"children":[],"start":1673,"end":1712,"code":"func(t *testing.T)","nodeType":"FunctionType","column":0,"line":0,"Function":1673,"TypeParams":null,"Params":{"children":[],"start":1698,"end":1712,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":1698,"list":[{"children":[],"start":1699,"end":1711,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":1699,"end":1700,"code":"t","nodeType":"Identifier","column":0,"line":0,"namePos":1699,"name":"t","object":null}],"type":{"children":[],"start":1701,"end":1711,"code":"*testing.T","nodeType":"StarExpression","column":0,"line":0,"star":1701,"expression":{"children":[],"start":1702,"end":1711,"code":"testing.T","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":1702,"end":1709,"code":"testing","nodeType":"Identifier","column":0,"line":0,"namePos":1702,"name":"testing","object":null},"sel":{"children":[],"start":1710,"end":1711,"code":"T","nodeType":"Identifier","column":0,"line":0,"namePos":1710,"name":"T","object":null}}},"tag":null,"comment":null}],"closing":1711},"Results":null},"body":{"children":[],"start":1713,"end":1936,"code":"{\n\tif testing.Short() {\n\t\tt.Skip(\"skipping malloc count in short mode\")\n\t}\n\tfor _, test := range cleanTests {\n\t\tallocs := testing.AllocsPerRun(100, func() {\n\t\t\tcleanPath(test.result)\n\t\t})\n\t\tassert.EqualValues(t, allocs, 0)\n\t}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":1713,"list":[{"children":[],"start":1716,"end":1787,"code":"if testing.Short() {\n\tt.Skip(\"skipping malloc count in short mode\")\n}","nodeType":"IfStatement","column":0,"line":0,"if":1716,"initialization":null,"condition":{"children":[],"start":1719,"end":1734,"code":"testing.Short()","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":1719,"end":1732,"code":"testing.Short","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":1719,"end":1726,"code":"testing","nodeType":"Identifier","column":0,"line":0,"namePos":1719,"name":"testing","object":null},"sel":{"children":[],"start":1727,"end":1732,"code":"Short","nodeType":"Identifier","column":0,"line":0,"namePos":1727,"name":"Short","object":null}},"lparen":0,"args":[],"ellipsis":0,"rparen":0},"body":{"children":[],"start":1735,"end":1787,"code":"{\n\tt.Skip(\"skipping malloc count in short mode\")\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":1735,"list":[{"children":[],"start":1739,"end":1784,"code":"t.Skip(\"skipping malloc count in short mode\")","nodeType":"ExpressionStatement","column":0,"line":0,"Expression":{"children":[],"start":1739,"end":1784,"code":"t.Skip(\"skipping malloc count in short mode\")","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":1739,"end":1745,"code":"t.Skip","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":1739,"end":1740,"code":"t","nodeType":"Identifier","column":0,"line":0,"namePos":1739,"name":"t","object":null},"sel":{"children":[],"start":1741,"end":1745,"code":"Skip","nodeType":"Identifier","column":0,"line":0,"namePos":1741,"name":"Skip","object":null}},"lparen":0,"args":[{"children":[],"start":1746,"end":1783,"code":"\"skipping malloc count in short mode\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":1746,"kind":9,"value":"\"skipping malloc count in short mode\""}],"ellipsis":0,"rparen":0}}],"rbrace":1786},"else":null},{"children":[],"start":1790,"end":1934,"code":"for _, test := range cleanTests {\n\tallocs := testing.AllocsPerRun(100, func() {\n\t\tcleanPath(test.result)\n\t})\n\tassert.EqualValues(t, allocs, 0)\n}","nodeType":"RangeStatement","column":0,"line":0,"for":1790,"key":{"children":[],"start":1794,"end":1795,"code":"_","nodeType":"Identifier","column":0,"line":0,"namePos":1794,"name":"_","object":null},"value":{"children":[],"start":1797,"end":1801,"code":"test","nodeType":"Identifier","column":0,"line":0,"namePos":1797,"name":"test","object":null},"tokenPos":1802,"token":47,"range":1805,"expression":{"children":[],"start":1811,"end":1821,"code":"cleanTests","nodeType":"Identifier","column":0,"line":0,"namePos":1811,"name":"cleanTests","object":null},"body":{"children":[],"start":1822,"end":1934,"code":"{\n\tallocs := testing.AllocsPerRun(100, func() {\n\t\tcleanPath(test.result)\n\t})\n\tassert.EqualValues(t, allocs, 0)\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":1822,"list":[{"children":[],"start":1826,"end":1896,"code":"allocs := testing.AllocsPerRun(100, func() {\n\tcleanPath(test.result)\n})","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":1826,"end":1832,"code":"allocs","nodeType":"Identifier","column":0,"line":0,"namePos":1826,"name":"allocs","object":null}],"tokenPos":1833,"token":47,"rhs":[{"children":[],"start":1836,"end":1896,"code":"testing.AllocsPerRun(100, func() {\n\tcleanPath(test.result)\n})","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":1836,"end":1856,"code":"testing.AllocsPerRun","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":1836,"end":1843,"code":"testing","nodeType":"Identifier","column":0,"line":0,"namePos":1836,"name":"testing","object":null},"sel":{"children":[],"start":1844,"end":1856,"code":"AllocsPerRun","nodeType":"Identifier","column":0,"line":0,"namePos":1844,"name":"AllocsPerRun","object":null}},"lparen":0,"args":[{"children":[],"start":1857,"end":1860,"code":"100","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":1857,"kind":5,"value":"100"},{"children":[],"start":1862,"end":1895,"code":"func() {\n\tcleanPath(test.result)\n}","nodeType":"FunctionLiteral","column":0,"line":0,"type":{"children":[],"start":1862,"end":1868,"code":"func()","nodeType":"FunctionType","column":0,"line":0,"Function":1862,"TypeParams":null,"Params":{"children":[],"start":1866,"end":1868,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":1866,"list":[],"closing":1867},"Results":null},"body":{"children":[],"start":1869,"end":1895,"code":"{\n\tcleanPath(test.result)\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":1869,"list":[{"children":[],"start":1871,"end":1893,"code":"cleanPath(test.result)","nodeType":"ExpressionStatement","column":0,"line":0,"Expression":{"children":[],"start":1871,"end":1893,"code":"cleanPath(test.result)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":1871,"end":1880,"code":"cleanPath","nodeType":"Identifier","column":0,"line":0,"namePos":1871,"name":"cleanPath","object":null},"lparen":0,"args":[{"children":[],"start":1881,"end":1892,"code":"test.result","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":1881,"end":1885,"code":"test","nodeType":"Identifier","column":0,"line":0,"namePos":1881,"name":"test","object":null},"sel":{"children":[],"start":1886,"end":1892,"code":"result","nodeType":"Identifier","column":0,"line":0,"namePos":1886,"name":"result","object":null}}],"ellipsis":0,"rparen":0}}],"rbrace":1894}}],"ellipsis":0,"rparen":0}]},{"children":[],"start":1899,"end":1931,"code":"assert.EqualValues(t, allocs, 0)","nodeType":"ExpressionStatement","column":0,"line":0,"Expression":{"children":[],"start":1899,"end":1931,"code":"assert.EqualValues(t, allocs, 0)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":1899,"end":1917,"code":"assert.EqualValues","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":1899,"end":1905,"code":"assert","nodeType":"Identifier","column":0,"line":0,"namePos":1899,"name":"assert","object":null},"sel":{"children":[],"start":1906,"end":1917,"code":"EqualValues","nodeType":"Identifier","column":0,"line":0,"namePos":1906,"name":"EqualValues","object":null}},"lparen":0,"args":[{"children":[],"start":1918,"end":1919,"code":"t","nodeType":"Identifier","column":0,"line":0,"namePos":1918,"name":"t","object":null},{"children":[],"start":1921,"end":1927,"code":"allocs","nodeType":"Identifier","column":0,"line":0,"namePos":1921,"name":"allocs","object":null},{"children":[],"start":1929,"end":1930,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":1929,"kind":5,"value":"0"}],"ellipsis":0,"rparen":0}}],"rbrace":1933}}],"rbrace":1935}},{"children":[],"start":1938,"end":2093,"code":"func BenchmarkPathClean(b *testing.B) {\n\tb.ReportAllocs()\n\tfor i := 0; i \u003c b.N; i++ {\n\t\tfor _, test := range cleanTests {\n\t\t\tcleanPath(test.path)\n\t\t}\n\t}\n}","nodeType":"FunctionDeclaration","column":0,"line":0,"doc":null,"receiver":null,"name":{"children":[],"start":1943,"end":1961,"code":"BenchmarkPathClean","nodeType":"Identifier","column":0,"line":0,"namePos":1943,"name":"BenchmarkPathClean","object":null},"type":{"children":[],"start":1938,"end":1975,"code":"func(b *testing.B)","nodeType":"FunctionType","column":0,"line":0,"Function":1938,"TypeParams":null,"Params":{"children":[],"start":1961,"end":1975,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":1961,"list":[{"children":[],"start":1962,"end":1974,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":1962,"end":1963,"code":"b","nodeType":"Identifier","column":0,"line":0,"namePos":1962,"name":"b","object":null}],"type":{"children":[],"start":1964,"end":1974,"code":"*testing.B","nodeType":"StarExpression","column":0,"line":0,"star":1964,"expression":{"children":[],"start":1965,"end":1974,"code":"testing.B","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":1965,"end":1972,"code":"testing","nodeType":"Identifier","column":0,"line":0,"namePos":1965,"name":"testing","object":null},"sel":{"children":[],"start":1973,"end":1974,"code":"B","nodeType":"Identifier","column":0,"line":0,"namePos":1973,"name":"B","object":null}}},"tag":null,"comment":null}],"closing":1974},"Results":null},"body":{"children":[],"start":1976,"end":2093,"code":"{\n\tb.ReportAllocs()\n\tfor i := 0; i \u003c b.N; i++ {\n\t\tfor _, test := range cleanTests {\n\t\t\tcleanPath(test.path)\n\t\t}\n\t}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":1976,"list":[{"children":[],"start":1979,"end":1995,"code":"b.ReportAllocs()","nodeType":"ExpressionStatement","column":0,"line":0,"Expression":{"children":[],"start":1979,"end":1995,"code":"b.ReportAllocs()","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":1979,"end":1993,"code":"b.ReportAllocs","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":1979,"end":1980,"code":"b","nodeType":"Identifier","column":0,"line":0,"namePos":1979,"name":"b","object":null},"sel":{"children":[],"start":1981,"end":1993,"code":"ReportAllocs","nodeType":"Identifier","column":0,"line":0,"namePos":1981,"name":"ReportAllocs","object":null}},"lparen":0,"args":[],"ellipsis":0,"rparen":0}},{"children":[],"start":1998,"end":2091,"code":"for i := 0; i \u003c b.N; i++ {\n\tfor _, test := range cleanTests {\n\t\tcleanPath(test.path)\n\t}\n}","nodeType":"ForStatement","column":0,"line":0,"for":1998,"initialization":{"children":[],"start":2002,"end":2008,"code":"i := 0","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":2002,"end":2003,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":2002,"name":"i","object":null}],"tokenPos":2004,"token":47,"rhs":[{"children":[],"start":2007,"end":2008,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":2007,"kind":5,"value":"0"}]},"condition":{"children":[],"start":2010,"end":2017,"code":"i \u003c b.N","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":2010,"end":2011,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":2010,"name":"i","object":null},"opPos":2012,"op":40,"rightExpression":{"children":[],"start":2014,"end":2017,"code":"b.N","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":2014,"end":2015,"code":"b","nodeType":"Identifier","column":0,"line":0,"namePos":2014,"name":"b","object":null},"sel":{"children":[],"start":2016,"end":2017,"code":"N","nodeType":"Identifier","column":0,"line":0,"namePos":2016,"name":"N","object":null}}},"post":{"children":[],"start":2019,"end":2022,"code":"i++","nodeType":"IncrementDecrementStatement","column":0,"line":0,"Expression":{"children":[],"start":2019,"end":2020,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":2019,"name":"i","object":null},"TokenPosition":2020,"Token":37},"body":{"children":[],"start":2023,"end":2091,"code":"{\n\tfor _, test := range cleanTests {\n\t\tcleanPath(test.path)\n\t}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":2023,"list":[{"children":[],"start":2027,"end":2088,"code":"for _, test := range cleanTests {\n\tcleanPath(test.path)\n}","nodeType":"RangeStatement","column":0,"line":0,"for":2027,"key":{"children":[],"start":2031,"end":2032,"code":"_","nodeType":"Identifier","column":0,"line":0,"namePos":2031,"name":"_","object":null},"value":{"children":[],"start":2034,"end":2038,"code":"test","nodeType":"Identifier","column":0,"line":0,"namePos":2034,"name":"test","object":null},"tokenPos":2039,"token":47,"range":2042,"expression":{"children":[],"start":2048,"end":2058,"code":"cleanTests","nodeType":"Identifier","column":0,"line":0,"namePos":2048,"name":"cleanTests","object":null},"body":{"children":[],"start":2059,"end":2088,"code":"{\n\tcleanPath(test.path)\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":2059,"list":[{"children":[],"start":2064,"end":2084,"code":"cleanPath(test.path)","nodeType":"ExpressionStatement","column":0,"line":0,"Expression":{"children":[],"start":2064,"end":2084,"code":"cleanPath(test.path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":2064,"end":2073,"code":"cleanPath","nodeType":"Identifier","column":0,"line":0,"namePos":2064,"name":"cleanPath","object":null},"lparen":0,"args":[{"children":[],"start":2074,"end":2083,"code":"test.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":2074,"end":2078,"code":"test","nodeType":"Identifier","column":0,"line":0,"namePos":2074,"name":"test","object":null},"sel":{"children":[],"start":2079,"end":2083,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":2079,"name":"path","object":null}}],"ellipsis":0,"rparen":0}}],"rbrace":2087}}],"rbrace":2090}}],"rbrace":2092}},{"children":[],"start":2095,"end":2545,"code":"func genLongPaths() (testPaths []cleanPathTest) {\n\tfor i := 1; i \u003c= 1234; i++ {\n\t\tss := strings.Repeat(\"a\", i)\n\t\tcorrectPath := \"/\" + ss\n\t\ttestPaths = append(testPaths, cleanPathTest{path: correctPath, result: correctPath}, cleanPathTest{path: ss, result: correctPath}, cleanPathTest{path: \"//\" + ss, result: correctPath}, cleanPathTest{path: \"/\" + ss + \"/b/..\", result: correctPath})\n\t}\n\treturn\n}","nodeType":"FunctionDeclaration","column":0,"line":0,"doc":null,"receiver":null,"name":{"children":[],"start":2100,"end":2112,"code":"genLongPaths","nodeType":"Identifier","column":0,"line":0,"namePos":2100,"name":"genLongPaths","object":null},"type":{"children":[],"start":2095,"end":2142,"code":"func() (testPaths []cleanPathTest)","nodeType":"FunctionType","column":0,"line":0,"Function":2095,"TypeParams":null,"Params":{"children":[],"start":2112,"end":2114,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":2112,"list":[],"closing":2113},"Results":{"children":[],"start":2115,"end":2142,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":2115,"list":[{"children":[],"start":2116,"end":2141,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":2116,"end":2125,"code":"testPaths","nodeType":"Identifier","column":0,"line":0,"namePos":2116,"name":"testPaths","object":null}],"type":{"children":[],"start":2126,"end":2141,"code":"[]cleanPathTest","nodeType":"ArrayType","column":0,"line":0,"leftBracket":2126,"length":null,"element":{"children":[],"start":2128,"end":2141,"code":"cleanPathTest","nodeType":"Identifier","column":0,"line":0,"namePos":2128,"name":"cleanPathTest","object":null}},"tag":null,"comment":null}],"closing":2141}},"body":{"children":[],"start":2143,"end":2545,"code":"{\n\tfor i := 1; i \u003c= 1234; i++ {\n\t\tss := strings.Repeat(\"a\", i)\n\t\tcorrectPath := \"/\" + ss\n\t\ttestPaths = append(testPaths, cleanPathTest{path: correctPath, result: correctPath}, cleanPathTest{path: ss, result: correctPath}, cleanPathTest{path: \"//\" + ss, result: correctPath}, cleanPathTest{path: \"/\" + ss + \"/b/..\", result: correctPath})\n\t}\n\treturn\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":2143,"list":[{"children":[],"start":2146,"end":2535,"code":"for i := 1; i \u003c= 1234; i++ {\n\tss := strings.Repeat(\"a\", i)\n\tcorrectPath := \"/\" + ss\n\ttestPaths = append(testPaths, cleanPathTest{path: correctPath, result: correctPath}, cleanPathTest{path: ss, result: correctPath}, cleanPathTest{path: \"//\" + ss, result: correctPath}, cleanPathTest{path: \"/\" + ss + \"/b/..\", result: correctPath})\n}","nodeType":"ForStatement","column":0,"line":0,"for":2146,"initialization":{"children":[],"start":2150,"end":2156,"code":"i := 1","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":2150,"end":2151,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":2150,"name":"i","object":null}],"tokenPos":2152,"token":47,"rhs":[{"children":[],"start":2155,"end":2156,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":2155,"kind":5,"value":"1"}]},"condition":{"children":[],"start":2158,"end":2167,"code":"i \u003c= 1234","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":2158,"end":2159,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":2158,"name":"i","object":null},"opPos":2160,"op":45,"rightExpression":{"children":[],"start":2163,"end":2167,"code":"1234","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":2163,"kind":5,"value":"1234"}},"post":{"children":[],"start":2169,"end":2172,"code":"i++","nodeType":"IncrementDecrementStatement","column":0,"line":0,"Expression":{"children":[],"start":2169,"end":2170,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":2169,"name":"i","object":null},"TokenPosition":2170,"Token":37},"body":{"children":[],"start":2173,"end":2535,"code":"{\n\tss := strings.Repeat(\"a\", i)\n\tcorrectPath := \"/\" + ss\n\ttestPaths = append(testPaths, cleanPathTest{path: correctPath, result: correctPath}, cleanPathTest{path: ss, result: correctPath}, cleanPathTest{path: \"//\" + ss, result: correctPath}, cleanPathTest{path: \"/\" + ss + \"/b/..\", result: correctPath})\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":2173,"list":[{"children":[],"start":2177,"end":2205,"code":"ss := strings.Repeat(\"a\", i)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":2177,"end":2179,"code":"ss","nodeType":"Identifier","column":0,"line":0,"namePos":2177,"name":"ss","object":null}],"tokenPos":2180,"token":47,"rhs":[{"children":[],"start":2183,"end":2205,"code":"strings.Repeat(\"a\", i)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":2183,"end":2197,"code":"strings.Repeat","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":2183,"end":2190,"code":"strings","nodeType":"Identifier","column":0,"line":0,"namePos":2183,"name":"strings","object":null},"sel":{"children":[],"start":2191,"end":2197,"code":"Repeat","nodeType":"Identifier","column":0,"line":0,"namePos":2191,"name":"Repeat","object":null}},"lparen":0,"args":[{"children":[],"start":2198,"end":2201,"code":"\"a\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":2198,"kind":9,"value":"\"a\""},{"children":[],"start":2203,"end":2204,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":2203,"name":"i","object":null}],"ellipsis":0,"rparen":0}]},{"children":[],"start":2209,"end":2232,"code":"correctPath := \"/\" + ss","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":2209,"end":2220,"code":"correctPath","nodeType":"Identifier","column":0,"line":0,"namePos":2209,"name":"correctPath","object":null}],"tokenPos":2221,"token":47,"rhs":[{"children":[],"start":2224,"end":2232,"code":"\"/\" + ss","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":2224,"end":2227,"code":"\"/\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":2224,"kind":9,"value":"\"/\""},"opPos":2228,"op":12,"rightExpression":{"children":[],"start":2230,"end":2232,"code":"ss","nodeType":"Identifier","column":0,"line":0,"namePos":2230,"name":"ss","object":null}}]},{"children":[],"start":2235,"end":2532,"code":"testPaths = append(testPaths, cleanPathTest{path: correctPath, result: correctPath}, cleanPathTest{path: ss, result: correctPath}, cleanPathTest{path: \"//\" + ss, result: correctPath}, cleanPathTest{path: \"/\" + ss + \"/b/..\", result: correctPath})","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":2235,"end":2244,"code":"testPaths","nodeType":"Identifier","column":0,"line":0,"namePos":2235,"name":"testPaths","object":null}],"tokenPos":2245,"token":42,"rhs":[{"children":[],"start":2247,"end":2532,"code":"append(testPaths, cleanPathTest{path: correctPath, result: correctPath}, cleanPathTest{path: ss, result: correctPath}, cleanPathTest{path: \"//\" + ss, result: correctPath}, cleanPathTest{path: \"/\" + ss + \"/b/..\", result: correctPath})","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":2247,"end":2253,"code":"append","nodeType":"Identifier","column":0,"line":0,"namePos":2247,"name":"append","object":null},"lparen":0,"args":[{"children":[],"start":2254,"end":2263,"code":"testPaths","nodeType":"Identifier","column":0,"line":0,"namePos":2254,"name":"testPaths","object":null},{"children":[],"start":2265,"end":2331,"code":"cleanPathTest{path: correctPath, result: correctPath}","nodeType":"CompositeLiteral","column":0,"line":0,"type":{"children":[],"start":2265,"end":2278,"code":"cleanPathTest","nodeType":"Identifier","column":0,"line":0,"namePos":2265,"name":"cleanPathTest","object":null},"lbrace":2278,"elements":[{"children":[],"start":2283,"end":2302,"code":"path: correctPath","nodeType":"KeyValueExpression","column":0,"line":0,"key":{"children":[],"start":2283,"end":2287,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":2283,"name":"path","object":null},"colon":0,"value":{"children":[],"start":2291,"end":2302,"code":"correctPath","nodeType":"Identifier","column":0,"line":0,"namePos":2291,"name":"correctPath","object":null}},{"children":[],"start":2307,"end":2326,"code":"result: correctPath","nodeType":"KeyValueExpression","column":0,"line":0,"key":{"children":[],"start":2307,"end":2313,"code":"result","nodeType":"Identifier","column":0,"line":0,"namePos":2307,"name":"result","object":null},"colon":0,"value":{"children":[],"start":2315,"end":2326,"code":"correctPath","nodeType":"Identifier","column":0,"line":0,"namePos":2315,"name":"correctPath","object":null}}],"rbrace":2330,"incomplete":false},{"children":[],"start":2333,"end":2390,"code":"cleanPathTest{path: ss, result: correctPath}","nodeType":"CompositeLiteral","column":0,"line":0,"type":{"children":[],"start":2333,"end":2346,"code":"cleanPathTest","nodeType":"Identifier","column":0,"line":0,"namePos":2333,"name":"cleanPathTest","object":null},"lbrace":2346,"elements":[{"children":[],"start":2351,"end":2361,"code":"path: ss","nodeType":"KeyValueExpression","column":0,"line":0,"key":{"children":[],"start":2351,"end":2355,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":2351,"name":"path","object":null},"colon":0,"value":{"children":[],"start":2359,"end":2361,"code":"ss","nodeType":"Identifier","column":0,"line":0,"namePos":2359,"name":"ss","object":null}},{"children":[],"start":2366,"end":2385,"code":"result: correctPath","nodeType":"KeyValueExpression","column":0,"line":0,"key":{"children":[],"start":2366,"end":2372,"code":"result","nodeType":"Identifier","column":0,"line":0,"namePos":2366,"name":"result","object":null},"colon":0,"value":{"children":[],"start":2374,"end":2385,"code":"correctPath","nodeType":"Identifier","column":0,"line":0,"namePos":2374,"name":"correctPath","object":null}}],"rbrace":2389,"incomplete":false},{"children":[],"start":2392,"end":2456,"code":"cleanPathTest{path: \"//\" + ss, result: correctPath}","nodeType":"CompositeLiteral","column":0,"line":0,"type":{"children":[],"start":2392,"end":2405,"code":"cleanPathTest","nodeType":"Identifier","column":0,"line":0,"namePos":2392,"name":"cleanPathTest","object":null},"lbrace":2405,"elements":[{"children":[],"start":2410,"end":2427,"code":"path: \"//\" + ss","nodeType":"KeyValueExpression","column":0,"line":0,"key":{"children":[],"start":2410,"end":2414,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":2410,"name":"path","object":null},"colon":0,"value":{"children":[],"start":2418,"end":2427,"code":"\"//\" + ss","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":2418,"end":2422,"code":"\"//\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":2418,"kind":9,"value":"\"//\""},"opPos":2423,"op":12,"rightExpression":{"children":[],"start":2425,"end":2427,"code":"ss","nodeType":"Identifier","column":0,"line":0,"namePos":2425,"name":"ss","object":null}}},{"children":[],"start":2432,"end":2451,"code":"result: correctPath","nodeType":"KeyValueExpression","column":0,"line":0,"key":{"children":[],"start":2432,"end":2438,"code":"result","nodeType":"Identifier","column":0,"line":0,"namePos":2432,"name":"result","object":null},"colon":0,"value":{"children":[],"start":2440,"end":2451,"code":"correctPath","nodeType":"Identifier","column":0,"line":0,"namePos":2440,"name":"correctPath","object":null}}],"rbrace":2455,"incomplete":false},{"children":[],"start":2458,"end":2531,"code":"cleanPathTest{path: \"/\" + ss + \"/b/..\", result: correctPath}","nodeType":"CompositeLiteral","column":0,"line":0,"type":{"children":[],"start":2458,"end":2471,"code":"cleanPathTest","nodeType":"Identifier","column":0,"line":0,"namePos":2458,"name":"cleanPathTest","object":null},"lbrace":2471,"elements":[{"children":[],"start":2476,"end":2502,"code":"path: \"/\" + ss + \"/b/..\"","nodeType":"KeyValueExpression","column":0,"line":0,"key":{"children":[],"start":2476,"end":2480,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":2476,"name":"path","object":null},"colon":0,"value":{"children":[],"start":2484,"end":2502,"code":"\"/\" + ss + \"/b/..\"","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":2484,"end":2492,"code":"\"/\" + ss","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":2484,"end":2487,"code":"\"/\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":2484,"kind":9,"value":"\"/\""},"opPos":2488,"op":12,"rightExpression":{"children":[],"start":2490,"end":2492,"code":"ss","nodeType":"Identifier","column":0,"line":0,"namePos":2490,"name":"ss","object":null}},"opPos":2493,"op":12,"rightExpression":{"children":[],"start":2495,"end":2502,"code":"\"/b/..\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":2495,"kind":9,"value":"\"/b/..\""}}},{"children":[],"start":2507,"end":2526,"code":"result: correctPath","nodeType":"KeyValueExpression","column":0,"line":0,"key":{"children":[],"start":2507,"end":2513,"code":"result","nodeType":"Identifier","column":0,"line":0,"namePos":2507,"name":"result","object":null},"colon":0,"value":{"children":[],"start":2515,"end":2526,"code":"correctPath","nodeType":"Identifier","column":0,"line":0,"namePos":2515,"name":"correctPath","object":null}}],"rbrace":2530,"incomplete":false}],"ellipsis":0,"rparen":0}]}],"rbrace":2534}},{"children":[],"start":2537,"end":2543,"code":"return","nodeType":"ReturnStatement","column":0,"line":0,"return":2537,"results":[]}],"rbrace":2544}},{"children":[],"start":2547,"end":2764,"code":"func TestPathCleanLong(t *testing.T) {\n\tcleanTests := genLongPaths()\n\tfor _, test := range cleanTests {\n\t\tassert.Equal(t, test.result, cleanPath(test.path))\n\t\tassert.Equal(t, test.result, cleanPath(test.result))\n\t}\n}","nodeType":"FunctionDeclaration","column":0,"line":0,"doc":null,"receiver":null,"name":{"children":[],"start":2552,"end":2569,"code":"TestPathCleanLong","nodeType":"Identifier","column":0,"line":0,"namePos":2552,"name":"TestPathCleanLong","object":null},"type":{"children":[],"start":2547,"end":2583,"code":"func(t *testing.T)","nodeType":"FunctionType","column":0,"line":0,"Function":2547,"TypeParams":null,"Params":{"children":[],"start":2569,"end":2583,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":2569,"list":[{"children":[],"start":2570,"end":2582,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":2570,"end":2571,"code":"t","nodeType":"Identifier","column":0,"line":0,"namePos":2570,"name":"t","object":null}],"type":{"children":[],"start":2572,"end":2582,"code":"*testing.T","nodeType":"StarExpression","column":0,"line":0,"star":2572,"expression":{"children":[],"start":2573,"end":2582,"code":"testing.T","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":2573,"end":2580,"code":"testing","nodeType":"Identifier","column":0,"line":0,"namePos":2573,"name":"testing","object":null},"sel":{"children":[],"start":2581,"end":2582,"code":"T","nodeType":"Identifier","column":0,"line":0,"namePos":2581,"name":"T","object":null}}},"tag":null,"comment":null}],"closing":2582},"Results":null},"body":{"children":[],"start":2584,"end":2764,"code":"{\n\tcleanTests := genLongPaths()\n\tfor _, test := range cleanTests {\n\t\tassert.Equal(t, test.result, cleanPath(test.path))\n\t\tassert.Equal(t, test.result, cleanPath(test.result))\n\t}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":2584,"list":[{"children":[],"start":2587,"end":2615,"code":"cleanTests := genLongPaths()","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":2587,"end":2597,"code":"cleanTests","nodeType":"Identifier","column":0,"line":0,"namePos":2587,"name":"cleanTests","object":null}],"tokenPos":2598,"token":47,"rhs":[{"children":[],"start":2601,"end":2615,"code":"genLongPaths()","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":2601,"end":2613,"code":"genLongPaths","nodeType":"Identifier","column":0,"line":0,"namePos":2601,"name":"genLongPaths","object":null},"lparen":0,"args":[],"ellipsis":0,"rparen":0}]},{"children":[],"start":2618,"end":2762,"code":"for _, test := range cleanTests {\n\tassert.Equal(t, test.result, cleanPath(test.path))\n\tassert.Equal(t, test.result, cleanPath(test.result))\n}","nodeType":"RangeStatement","column":0,"line":0,"for":2618,"key":{"children":[],"start":2622,"end":2623,"code":"_","nodeType":"Identifier","column":0,"line":0,"namePos":2622,"name":"_","object":null},"value":{"children":[],"start":2625,"end":2629,"code":"test","nodeType":"Identifier","column":0,"line":0,"namePos":2625,"name":"test","object":null},"tokenPos":2630,"token":47,"range":2633,"expression":{"children":[],"start":2639,"end":2649,"code":"cleanTests","nodeType":"Identifier","column":0,"line":0,"namePos":2639,"name":"cleanTests","object":null},"body":{"children":[],"start":2650,"end":2762,"code":"{\n\tassert.Equal(t, test.result, cleanPath(test.path))\n\tassert.Equal(t, test.result, cleanPath(test.result))\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":2650,"list":[{"children":[],"start":2654,"end":2704,"code":"assert.Equal(t, test.result, cleanPath(test.path))","nodeType":"ExpressionStatement","column":0,"line":0,"Expression":{"children":[],"start":2654,"end":2704,"code":"assert.Equal(t, test.result, cleanPath(test.path))","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":2654,"end":2666,"code":"assert.Equal","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":2654,"end":2660,"code":"assert","nodeType":"Identifier","column":0,"line":0,"namePos":2654,"name":"assert","object":null},"sel":{"children":[],"start":2661,"end":2666,"code":"Equal","nodeType":"Identifier","column":0,"line":0,"namePos":2661,"name":"Equal","object":null}},"lparen":0,"args":[{"children":[],"start":2667,"end":2668,"code":"t","nodeType":"Identifier","column":0,"line":0,"namePos":2667,"name":"t","object":null},{"children":[],"start":2670,"end":2681,"code":"test.result","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":2670,"end":2674,"code":"test","nodeType":"Identifier","column":0,"line":0,"namePos":2670,"name":"test","object":null},"sel":{"children":[],"start":2675,"end":2681,"code":"result","nodeType":"Identifier","column":0,"line":0,"namePos":2675,"name":"result","object":null}},{"children":[],"start":2683,"end":2703,"code":"cleanPath(test.path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":2683,"end":2692,"code":"cleanPath","nodeType":"Identifier","column":0,"line":0,"namePos":2683,"name":"cleanPath","object":null},"lparen":0,"args":[{"children":[],"start":2693,"end":2702,"code":"test.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":2693,"end":2697,"code":"test","nodeType":"Identifier","column":0,"line":0,"namePos":2693,"name":"test","object":null},"sel":{"children":[],"start":2698,"end":2702,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":2698,"name":"path","object":null}}],"ellipsis":0,"rparen":0}],"ellipsis":0,"rparen":0}},{"children":[],"start":2707,"end":2759,"code":"assert.Equal(t, test.result, cleanPath(test.result))","nodeType":"ExpressionStatement","column":0,"line":0,"Expression":{"children":[],"start":2707,"end":2759,"code":"assert.Equal(t, test.result, cleanPath(test.result))","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":2707,"end":2719,"code":"assert.Equal","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":2707,"end":2713,"code":"assert","nodeType":"Identifier","column":0,"line":0,"namePos":2707,"name":"assert","object":null},"sel":{"children":[],"start":2714,"end":2719,"code":"Equal","nodeType":"Identifier","column":0,"line":0,"namePos":2714,"name":"Equal","object":null}},"lparen":0,"args":[{"children":[],"start":2720,"end":2721,"code":"t","nodeType":"Identifier","column":0,"line":0,"namePos":2720,"name":"t","object":null},{"children":[],"start":2723,"end":2734,"code":"test.result","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":2723,"end":2727,"code":"test","nodeType":"Identifier","column":0,"line":0,"namePos":2723,"name":"test","object":null},"sel":{"children":[],"start":2728,"end":2734,"code":"result","nodeType":"Identifier","column":0,"line":0,"namePos":2728,"name":"result","object":null}},{"children":[],"start":2736,"end":2758,"code":"cleanPath(test.result)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":2736,"end":2745,"code":"cleanPath","nodeType":"Identifier","column":0,"line":0,"namePos":2736,"name":"cleanPath","object":null},"lparen":0,"args":[{"children":[],"start":2746,"end":2757,"code":"test.result","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":2746,"end":2750,"code":"test","nodeType":"Identifier","column":0,"line":0,"namePos":2746,"name":"test","object":null},"sel":{"children":[],"start":2751,"end":2757,"code":"result","nodeType":"Identifier","column":0,"line":0,"namePos":2751,"name":"result","object":null}}],"ellipsis":0,"rparen":0}],"ellipsis":0,"rparen":0}}],"rbrace":2761}}],"rbrace":2763}},{"children":[],"start":2766,"end":2971,"code":"func BenchmarkPathCleanLong(b *testing.B) {\n\tcleanTests := genLongPaths()\n\tb.ResetTimer()\n\tb.ReportAllocs()\n\tfor i := 0; i \u003c b.N; i++ {\n\t\tfor _, test := range cleanTests {\n\t\t\tcleanPath(test.path)\n\t\t}\n\t}\n}","nodeType":"FunctionDeclaration","column":0,"line":0,"doc":null,"receiver":null,"name":{"children":[],"start":2771,"end":2793,"code":"BenchmarkPathCleanLong","nodeType":"Identifier","column":0,"line":0,"namePos":2771,"name":"BenchmarkPathCleanLong","object":null},"type":{"children":[],"start":2766,"end":2807,"code":"func(b *testing.B)","nodeType":"FunctionType","column":0,"line":0,"Function":2766,"TypeParams":null,"Params":{"children":[],"start":2793,"end":2807,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":2793,"list":[{"children":[],"start":2794,"end":2806,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":2794,"end":2795,"code":"b","nodeType":"Identifier","column":0,"line":0,"namePos":2794,"name":"b","object":null}],"type":{"children":[],"start":2796,"end":2806,"code":"*testing.B","nodeType":"StarExpression","column":0,"line":0,"star":2796,"expression":{"children":[],"start":2797,"end":2806,"code":"testing.B","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":2797,"end":2804,"code":"testing","nodeType":"Identifier","column":0,"line":0,"namePos":2797,"name":"testing","object":null},"sel":{"children":[],"start":2805,"end":2806,"code":"B","nodeType":"Identifier","column":0,"line":0,"namePos":2805,"name":"B","object":null}}},"tag":null,"comment":null}],"closing":2806},"Results":null},"body":{"children":[],"start":2808,"end":2971,"code":"{\n\tcleanTests := genLongPaths()\n\tb.ResetTimer()\n\tb.ReportAllocs()\n\tfor i := 0; i \u003c b.N; i++ {\n\t\tfor _, test := range cleanTests {\n\t\t\tcleanPath(test.path)\n\t\t}\n\t}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":2808,"list":[{"children":[],"start":2811,"end":2839,"code":"cleanTests := genLongPaths()","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":2811,"end":2821,"code":"cleanTests","nodeType":"Identifier","column":0,"line":0,"namePos":2811,"name":"cleanTests","object":null}],"tokenPos":2822,"token":47,"rhs":[{"children":[],"start":2825,"end":2839,"code":"genLongPaths()","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":2825,"end":2837,"code":"genLongPaths","nodeType":"Identifier","column":0,"line":0,"namePos":2825,"name":"genLongPaths","object":null},"lparen":0,"args":[],"ellipsis":0,"rparen":0}]},{"children":[],"start":2841,"end":2855,"code":"b.ResetTimer()","nodeType":"ExpressionStatement","column":0,"line":0,"Expression":{"children":[],"start":2841,"end":2855,"code":"b.ResetTimer()","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":2841,"end":2853,"code":"b.ResetTimer","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":2841,"end":2842,"code":"b","nodeType":"Identifier","column":0,"line":0,"namePos":2841,"name":"b","object":null},"sel":{"children":[],"start":2843,"end":2853,"code":"ResetTimer","nodeType":"Identifier","column":0,"line":0,"namePos":2843,"name":"ResetTimer","object":null}},"lparen":0,"args":[],"ellipsis":0,"rparen":0}},{"children":[],"start":2857,"end":2873,"code":"b.ReportAllocs()","nodeType":"ExpressionStatement","column":0,"line":0,"Expression":{"children":[],"start":2857,"end":2873,"code":"b.ReportAllocs()","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":2857,"end":2871,"code":"b.ReportAllocs","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":2857,"end":2858,"code":"b","nodeType":"Identifier","column":0,"line":0,"namePos":2857,"name":"b","object":null},"sel":{"children":[],"start":2859,"end":2871,"code":"ReportAllocs","nodeType":"Identifier","column":0,"line":0,"namePos":2859,"name":"ReportAllocs","object":null}},"lparen":0,"args":[],"ellipsis":0,"rparen":0}},{"children":[],"start":2876,"end":2969,"code":"for i := 0; i \u003c b.N; i++ {\n\tfor _, test := range cleanTests {\n\t\tcleanPath(test.path)\n\t}\n}","nodeType":"ForStatement","column":0,"line":0,"for":2876,"initialization":{"children":[],"start":2880,"end":2886,"code":"i := 0","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":2880,"end":2881,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":2880,"name":"i","object":null}],"tokenPos":2882,"token":47,"rhs":[{"children":[],"start":2885,"end":2886,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":2885,"kind":5,"value":"0"}]},"condition":{"children":[],"start":2888,"end":2895,"code":"i \u003c b.N","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":2888,"end":2889,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":2888,"name":"i","object":null},"opPos":2890,"op":40,"rightExpression":{"children":[],"start":2892,"end":2895,"code":"b.N","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":2892,"end":2893,"code":"b","nodeType":"Identifier","column":0,"line":0,"namePos":2892,"name":"b","object":null},"sel":{"children":[],"start":2894,"end":2895,"code":"N","nodeType":"Identifier","column":0,"line":0,"namePos":2894,"name":"N","object":null}}},"post":{"children":[],"start":2897,"end":2900,"code":"i++","nodeType":"IncrementDecrementStatement","column":0,"line":0,"Expression":{"children":[],"start":2897,"end":2898,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":2897,"name":"i","object":null},"TokenPosition":2898,"Token":37},"body":{"children":[],"start":2901,"end":2969,"code":"{\n\tfor _, test := range cleanTests {\n\t\tcleanPath(test.path)\n\t}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":2901,"list":[{"children":[],"start":2905,"end":2966,"code":"for _, test := range cleanTests {\n\tcleanPath(test.path)\n}","nodeType":"RangeStatement","column":0,"line":0,"for":2905,"key":{"children":[],"start":2909,"end":2910,"code":"_","nodeType":"Identifier","column":0,"line":0,"namePos":2909,"name":"_","object":null},"value":{"children":[],"start":2912,"end":2916,"code":"test","nodeType":"Identifier","column":0,"line":0,"namePos":2912,"name":"test","object":null},"tokenPos":2917,"token":47,"range":2920,"expression":{"children":[],"start":2926,"end":2936,"code":"cleanTests","nodeType":"Identifier","column":0,"line":0,"namePos":2926,"name":"cleanTests","object":null},"body":{"children":[],"start":2937,"end":2966,"code":"{\n\tcleanPath(test.path)\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":2937,"list":[{"children":[],"start":2942,"end":2962,"code":"cleanPath(test.path)","nodeType":"ExpressionStatement","column":0,"line":0,"Expression":{"children":[],"start":2942,"end":2962,"code":"cleanPath(test.path)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":2942,"end":2951,"code":"cleanPath","nodeType":"Identifier","column":0,"line":0,"namePos":2942,"name":"cleanPath","object":null},"lparen":0,"args":[{"children":[],"start":2952,"end":2961,"code":"test.path","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":2952,"end":2956,"code":"test","nodeType":"Identifier","column":0,"line":0,"namePos":2952,"name":"test","object":null},"sel":{"children":[],"start":2957,"end":2961,"code":"path","nodeType":"Identifier","column":0,"line":0,"namePos":2957,"name":"path","object":null}}],"ellipsis":0,"rparen":0}}],"rbrace":2965}}],"rbrace":2968}}],"rbrace":2970}}],"fileStart":1,"fileEnd":2972,"scope":{"outer":null,"objects":null},"imports":[],"unresolved":[],"comments":[],"goVersion":""}