{"children":[],"start":168,"end":5207,"code":"package gin\n\nimport (\n\t\"bytes\"\n\t\"errors\"\n\t\"fmt\"\n\t\"io\"\n\t\"log\"\n\t\"net\"\n\t\"net/http\"\n\t\"net/http/httputil\"\n\t\"os\"\n\t\"runtime\"\n\t\"strings\"\n\t\"time\"\n)\n\nvar (\n\tdunno\t\t= []byte(\"???\")\n\tcenterDot\t= []byte(\"路\")\n\tdot\t\t= []byte(\".\")\n\tslash\t\t= []byte(\"/\")\n)\n\ntype RecoveryFunc func(c *Context, err any)\n\nfunc Recovery() HandlerFunc {\n\treturn RecoveryWithWriter(DefaultErrorWriter)\n}\nfunc CustomRecovery(handle RecoveryFunc) HandlerFunc {\n\treturn RecoveryWithWriter(DefaultErrorWriter, handle)\n}\nfunc RecoveryWithWriter(out io.Writer, recovery ...RecoveryFunc) HandlerFunc {\n\tif len(recovery) \u003e 0 {\n\t\treturn CustomRecoveryWithWriter(out, recovery[0])\n\t}\n\treturn CustomRecoveryWithWriter(out, defaultHandleRecovery)\n}\nfunc CustomRecoveryWithWriter(out io.Writer, handle RecoveryFunc) HandlerFunc {\n\tvar logger *log.Logger\n\tif out != nil {\n\t\tlogger = log.New(out, \"\\n\\n\\x1b[31m\", log.LstdFlags)\n\t}\n\treturn func(c *Context) {\n\t\tdefer func() {\n\t\t\tif err := recover(); err != nil {\n\t\t\t\tvar brokenPipe bool\n\t\t\t\tif ne, ok := err.(*net.OpError); ok {\n\t\t\t\t\tvar se *os.SyscallError\n\t\t\t\t\tif errors.As(ne, \u0026se) {\n\t\t\t\t\t\tseStr := strings.ToLower(se.Error())\n\t\t\t\t\t\tif strings.Contains(seStr, \"broken pipe\") || strings.Contains(seStr, \"connection reset by peer\") {\n\t\t\t\t\t\t\tbrokenPipe = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif logger != nil {\n\t\t\t\t\tstack := stack(3)\n\t\t\t\t\thttpRequest, _ := httputil.DumpRequest(c.Request, false)\n\t\t\t\t\theaders := strings.Split(string(httpRequest), \"\\r\\n\")\n\t\t\t\t\tfor idx, header := range headers {\n\t\t\t\t\t\tcurrent := strings.Split(header, \":\")\n\t\t\t\t\t\tif current[0] == \"Authorization\" {\n\t\t\t\t\t\t\theaders[idx] = current[0] + \": *\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\theadersToStr := strings.Join(headers, \"\\r\\n\")\n\t\t\t\t\tif brokenPipe {\n\t\t\t\t\t\tlogger.Printf(\"%s\\n%s%s\", err, headersToStr, reset)\n\t\t\t\t\t} else if IsDebugging() {\n\t\t\t\t\t\tlogger.Printf(\"[Recovery] %s panic recovered:\\n%s\\n%s\\n%s%s\", timeFormat(time.Now()), headersToStr, err, stack, reset)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlogger.Printf(\"[Recovery] %s panic recovered:\\n%s\\n%s%s\", timeFormat(time.Now()), err, stack, reset)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif brokenPipe {\n\t\t\t\t\tc.Error(err.(error))\n\t\t\t\t\tc.Abort()\n\t\t\t\t} else {\n\t\t\t\t\thandle(c, err)\n\t\t\t\t}\n\t\t\t}\n\t\t}()\n\t\tc.Next()\n\t}\n}\nfunc defaultHandleRecovery(c *Context, _ any) {\n\tc.AbortWithStatus(http.StatusInternalServerError)\n}\nfunc stack(skip int) []byte {\n\tbuf := new(bytes.Buffer)\n\tvar lines [][]byte\n\tvar lastFile string\n\tfor i := skip; ; i++ {\n\t\tpc, file, line, ok := runtime.Caller(i)\n\t\tif !ok {\n\t\t\tbreak\n\t\t}\n\t\tfmt.Fprintf(buf, \"%s:%d (0x%x)\\n\", file, line, pc)\n\t\tif file != lastFile {\n\t\t\tdata, err := os.ReadFile(file)\n\t\t\tif err != nil {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tlines = bytes.Split(data, []byte{'\\n'})\n\t\t\tlastFile = file\n\t\t}\n\t\tfmt.Fprintf(buf, \"\\t%s: %s\\n\", function(pc), source(lines, line))\n\t}\n\treturn buf.Bytes()\n}\nfunc source(lines [][]byte, n int) []byte {\n\tn--\n\tif n \u003c 0 || n \u003e= len(lines) {\n\t\treturn dunno\n\t}\n\treturn bytes.TrimSpace(lines[n])\n}\nfunc function(pc uintptr) []byte {\n\tfn := runtime.FuncForPC(pc)\n\tif fn == nil {\n\t\treturn dunno\n\t}\n\tname := []byte(fn.Name())\n\tif lastSlash := bytes.LastIndex(name, slash); lastSlash \u003e= 0 {\n\t\tname = name[lastSlash+1:]\n\t}\n\tif period := bytes.Index(name, dot); period \u003e= 0 {\n\t\tname = name[period+1:]\n\t}\n\tname = bytes.ReplaceAll(name, centerDot, dot)\n\treturn name\n}\nfunc timeFormat(t time.Time) string {\n\treturn t.Format(\"2006/01/02 - 15:04:05\")\n}\n","nodeType":"File","column":0,"line":0,"doc":null,"package":168,"name":{"children":[],"start":176,"end":179,"code":"gin","nodeType":"Identifier","column":0,"line":0,"namePos":176,"name":"gin","object":null},"declarations":[{"children":[],"start":181,"end":306,"code":"import (\n\t\"bytes\"\n\t\"errors\"\n\t\"fmt\"\n\t\"io\"\n\t\"log\"\n\t\"net\"\n\t\"net/http\"\n\t\"net/http/httputil\"\n\t\"os\"\n\t\"runtime\"\n\t\"strings\"\n\t\"time\"\n)","nodeType":"GenericDeclaration","column":0,"line":0,"doc":null,"tokenPosition":181,"token":75,"lparen":188,"specifications":[{"children":[],"start":191,"end":198,"code":"\"bytes\"","nodeType":"ImportSpecification","column":0,"line":0,"doc":null,"name":null,"path":{"children":[],"start":191,"end":198,"code":"\"bytes\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":191,"kind":9,"value":"\"bytes\""},"comment":null,"endPosition":0},{"children":[],"start":200,"end":208,"code":"\"errors\"","nodeType":"ImportSpecification","column":0,"line":0,"doc":null,"name":null,"path":{"children":[],"start":200,"end":208,"code":"\"errors\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":200,"kind":9,"value":"\"errors\""},"comment":null,"endPosition":0},{"children":[],"start":210,"end":215,"code":"\"fmt\"","nodeType":"ImportSpecification","column":0,"line":0,"doc":null,"name":null,"path":{"children":[],"start":210,"end":215,"code":"\"fmt\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":210,"kind":9,"value":"\"fmt\""},"comment":null,"endPosition":0},{"children":[],"start":217,"end":221,"code":"\"io\"","nodeType":"ImportSpecification","column":0,"line":0,"doc":null,"name":null,"path":{"children":[],"start":217,"end":221,"code":"\"io\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":217,"kind":9,"value":"\"io\""},"comment":null,"endPosition":0},{"children":[],"start":223,"end":228,"code":"\"log\"","nodeType":"ImportSpecification","column":0,"line":0,"doc":null,"name":null,"path":{"children":[],"start":223,"end":228,"code":"\"log\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":223,"kind":9,"value":"\"log\""},"comment":null,"endPosition":0},{"children":[],"start":230,"end":235,"code":"\"net\"","nodeType":"ImportSpecification","column":0,"line":0,"doc":null,"name":null,"path":{"children":[],"start":230,"end":235,"code":"\"net\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":230,"kind":9,"value":"\"net\""},"comment":null,"endPosition":0},{"children":[],"start":237,"end":247,"code":"\"net/http\"","nodeType":"ImportSpecification","column":0,"line":0,"doc":null,"name":null,"path":{"children":[],"start":237,"end":247,"code":"\"net/http\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":237,"kind":9,"value":"\"net/http\""},"comment":null,"endPosition":0},{"children":[],"start":249,"end":268,"code":"\"net/http/httputil\"","nodeType":"ImportSpecification","column":0,"line":0,"doc":null,"name":null,"path":{"children":[],"start":249,"end":268,"code":"\"net/http/httputil\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":249,"kind":9,"value":"\"net/http/httputil\""},"comment":null,"endPosition":0},{"children":[],"start":270,"end":274,"code":"\"os\"","nodeType":"ImportSpecification","column":0,"line":0,"doc":null,"name":null,"path":{"children":[],"start":270,"end":274,"code":"\"os\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":270,"kind":9,"value":"\"os\""},"comment":null,"endPosition":0},{"children":[],"start":276,"end":285,"code":"\"runtime\"","nodeType":"ImportSpecification","column":0,"line":0,"doc":null,"name":null,"path":{"children":[],"start":276,"end":285,"code":"\"runtime\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":276,"kind":9,"value":"\"runtime\""},"comment":null,"endPosition":0},{"children":[],"start":287,"end":296,"code":"\"strings\"","nodeType":"ImportSpecification","column":0,"line":0,"doc":null,"name":null,"path":{"children":[],"start":287,"end":296,"code":"\"strings\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":287,"kind":9,"value":"\"strings\""},"comment":null,"endPosition":0},{"children":[],"start":298,"end":304,"code":"\"time\"","nodeType":"ImportSpecification","column":0,"line":0,"doc":null,"name":null,"path":{"children":[],"start":298,"end":304,"code":"\"time\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":298,"kind":9,"value":"\"time\""},"comment":null,"endPosition":0}],"rparen":305},{"children":[],"start":308,"end":418,"code":"var (\n\tdunno\t\t= []byte(\"???\")\n\tcenterDot\t= []byte(\"路\")\n\tdot\t\t= []byte(\".\")\n\tslash\t\t= []byte(\"/\")\n)","nodeType":"GenericDeclaration","column":0,"line":0,"doc":null,"tokenPosition":308,"token":85,"lparen":312,"specifications":[{"children":[],"start":315,"end":340,"code":"dunno = []byte(\"???\")","nodeType":"ValueSpecification","column":0,"line":0,"doc":null,"names":[{"children":[],"start":315,"end":320,"code":"dunno","nodeType":"Identifier","column":0,"line":0,"namePos":315,"name":"dunno","object":null}],"type":null,"values":[{"children":[],"start":327,"end":340,"code":"[]byte(\"???\")","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":327,"end":333,"code":"[]byte","nodeType":"ArrayType","column":0,"line":0,"leftBracket":327,"length":null,"element":{"children":[],"start":329,"end":333,"code":"byte","nodeType":"Identifier","column":0,"line":0,"namePos":329,"name":"byte","object":null}},"lparen":0,"args":[{"children":[],"start":334,"end":339,"code":"\"???\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":334,"kind":9,"value":"\"???\""}],"ellipsis":0,"rparen":0}],"comment":null},{"children":[],"start":342,"end":366,"code":"centerDot = []byte(\"路\")","nodeType":"ValueSpecification","column":0,"line":0,"doc":null,"names":[{"children":[],"start":342,"end":351,"code":"centerDot","nodeType":"Identifier","column":0,"line":0,"namePos":342,"name":"centerDot","object":null}],"type":null,"values":[{"children":[],"start":354,"end":366,"code":"[]byte(\"路\")","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":354,"end":360,"code":"[]byte","nodeType":"ArrayType","column":0,"line":0,"leftBracket":354,"length":null,"element":{"children":[],"start":356,"end":360,"code":"byte","nodeType":"Identifier","column":0,"line":0,"namePos":356,"name":"byte","object":null}},"lparen":0,"args":[{"children":[],"start":361,"end":365,"code":"\"路\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":361,"kind":9,"value":"\"路\""}],"ellipsis":0,"rparen":0}],"comment":null},{"children":[],"start":368,"end":391,"code":"dot = []byte(\".\")","nodeType":"ValueSpecification","column":0,"line":0,"doc":null,"names":[{"children":[],"start":368,"end":371,"code":"dot","nodeType":"Identifier","column":0,"line":0,"namePos":368,"name":"dot","object":null}],"type":null,"values":[{"children":[],"start":380,"end":391,"code":"[]byte(\".\")","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":380,"end":386,"code":"[]byte","nodeType":"ArrayType","column":0,"line":0,"leftBracket":380,"length":null,"element":{"children":[],"start":382,"end":386,"code":"byte","nodeType":"Identifier","column":0,"line":0,"namePos":382,"name":"byte","object":null}},"lparen":0,"args":[{"children":[],"start":387,"end":390,"code":"\".\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":387,"kind":9,"value":"\".\""}],"ellipsis":0,"rparen":0}],"comment":null},{"children":[],"start":393,"end":416,"code":"slash = []byte(\"/\")","nodeType":"ValueSpecification","column":0,"line":0,"doc":null,"names":[{"children":[],"start":393,"end":398,"code":"slash","nodeType":"Identifier","column":0,"line":0,"namePos":393,"name":"slash","object":null}],"type":null,"values":[{"children":[],"start":405,"end":416,"code":"[]byte(\"/\")","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":405,"end":411,"code":"[]byte","nodeType":"ArrayType","column":0,"line":0,"leftBracket":405,"length":null,"element":{"children":[],"start":407,"end":411,"code":"byte","nodeType":"Identifier","column":0,"line":0,"namePos":407,"name":"byte","object":null}},"lparen":0,"args":[{"children":[],"start":412,"end":415,"code":"\"/\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":412,"kind":9,"value":"\"/\""}],"ellipsis":0,"rparen":0}],"comment":null}],"rparen":417},{"children":[],"start":485,"end":528,"code":"type RecoveryFunc func(c *Context, err any)","nodeType":"GenericDeclaration","column":0,"line":0,"doc":null,"tokenPosition":485,"token":84,"lparen":0,"specifications":[{"children":[],"start":490,"end":528,"code":"RecoveryFunc func(c *Context, err any)","nodeType":"TypeSpecification","column":0,"line":0,"doc":null,"name":{"children":[],"start":490,"end":502,"code":"RecoveryFunc","nodeType":"Identifier","column":0,"line":0,"namePos":490,"name":"RecoveryFunc","object":null},"typeParams":null,"assign":0,"type":{"children":[],"start":503,"end":528,"code":"func(c *Context, err any)","nodeType":"FunctionType","column":0,"line":0,"Function":503,"TypeParams":null,"Params":{"children":[],"start":507,"end":528,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":507,"list":[{"children":[],"start":508,"end":518,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":508,"end":509,"code":"c","nodeType":"Identifier","column":0,"line":0,"namePos":508,"name":"c","object":null}],"type":{"children":[],"start":510,"end":518,"code":"*Context","nodeType":"StarExpression","column":0,"line":0,"star":510,"expression":{"children":[],"start":511,"end":518,"code":"Context","nodeType":"Identifier","column":0,"line":0,"namePos":511,"name":"Context","object":null}},"tag":null,"comment":null},{"children":[],"start":520,"end":527,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":520,"end":523,"code":"err","nodeType":"Identifier","column":0,"line":0,"namePos":520,"name":"err","object":null}],"type":{"children":[],"start":524,"end":527,"code":"any","nodeType":"Identifier","column":0,"line":0,"namePos":524,"name":"any","object":null},"tag":null,"comment":null}],"closing":527},"Results":null},"comment":null}],"rparen":0},{"children":[],"start":628,"end":706,"code":"func Recovery() HandlerFunc {\n\treturn RecoveryWithWriter(DefaultErrorWriter)\n}","nodeType":"FunctionDeclaration","column":0,"line":0,"doc":null,"receiver":null,"name":{"children":[],"start":633,"end":641,"code":"Recovery","nodeType":"Identifier","column":0,"line":0,"namePos":633,"name":"Recovery","object":null},"type":{"children":[],"start":628,"end":655,"code":"func() HandlerFunc","nodeType":"FunctionType","column":0,"line":0,"Function":628,"TypeParams":null,"Params":{"children":[],"start":641,"end":643,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":641,"list":[],"closing":642},"Results":{"children":[],"start":644,"end":655,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":0,"list":[{"children":[],"start":644,"end":655,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":null,"type":{"children":[],"start":644,"end":655,"code":"HandlerFunc","nodeType":"Identifier","column":0,"line":0,"namePos":644,"name":"HandlerFunc","object":null},"tag":null,"comment":null}],"closing":0}},"body":{"children":[],"start":656,"end":706,"code":"{\n\treturn RecoveryWithWriter(DefaultErrorWriter)\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":656,"list":[{"children":[],"start":659,"end":704,"code":"return RecoveryWithWriter(DefaultErrorWriter)","nodeType":"ReturnStatement","column":0,"line":0,"return":659,"results":[{"children":[],"start":666,"end":704,"code":"RecoveryWithWriter(DefaultErrorWriter)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":666,"end":684,"code":"RecoveryWithWriter","nodeType":"Identifier","column":0,"line":0,"namePos":666,"name":"RecoveryWithWriter","object":null},"lparen":0,"args":[{"children":[],"start":685,"end":703,"code":"DefaultErrorWriter","nodeType":"Identifier","column":0,"line":0,"namePos":685,"name":"DefaultErrorWriter","object":null}],"ellipsis":0,"rparen":0}]}],"rbrace":705}},{"children":[],"start":826,"end":937,"code":"func CustomRecovery(handle RecoveryFunc) HandlerFunc {\n\treturn RecoveryWithWriter(DefaultErrorWriter, handle)\n}","nodeType":"FunctionDeclaration","column":0,"line":0,"doc":null,"receiver":null,"name":{"children":[],"start":831,"end":845,"code":"CustomRecovery","nodeType":"Identifier","column":0,"line":0,"namePos":831,"name":"CustomRecovery","object":null},"type":{"children":[],"start":826,"end":878,"code":"func(handle RecoveryFunc) HandlerFunc","nodeType":"FunctionType","column":0,"line":0,"Function":826,"TypeParams":null,"Params":{"children":[],"start":845,"end":866,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":845,"list":[{"children":[],"start":846,"end":865,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":846,"end":852,"code":"handle","nodeType":"Identifier","column":0,"line":0,"namePos":846,"name":"handle","object":null}],"type":{"children":[],"start":853,"end":865,"code":"RecoveryFunc","nodeType":"Identifier","column":0,"line":0,"namePos":853,"name":"RecoveryFunc","object":null},"tag":null,"comment":null}],"closing":865},"Results":{"children":[],"start":867,"end":878,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":0,"list":[{"children":[],"start":867,"end":878,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":null,"type":{"children":[],"start":867,"end":878,"code":"HandlerFunc","nodeType":"Identifier","column":0,"line":0,"namePos":867,"name":"HandlerFunc","object":null},"tag":null,"comment":null}],"closing":0}},"body":{"children":[],"start":879,"end":937,"code":"{\n\treturn RecoveryWithWriter(DefaultErrorWriter, handle)\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":879,"list":[{"children":[],"start":882,"end":935,"code":"return RecoveryWithWriter(DefaultErrorWriter, handle)","nodeType":"ReturnStatement","column":0,"line":0,"return":882,"results":[{"children":[],"start":889,"end":935,"code":"RecoveryWithWriter(DefaultErrorWriter, handle)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":889,"end":907,"code":"RecoveryWithWriter","nodeType":"Identifier","column":0,"line":0,"namePos":889,"name":"RecoveryWithWriter","object":null},"lparen":0,"args":[{"children":[],"start":908,"end":926,"code":"DefaultErrorWriter","nodeType":"Identifier","column":0,"line":0,"namePos":908,"name":"DefaultErrorWriter","object":null},{"children":[],"start":928,"end":934,"code":"handle","nodeType":"Identifier","column":0,"line":0,"namePos":928,"name":"handle","object":null}],"ellipsis":0,"rparen":0}]}],"rbrace":936}},{"children":[],"start":1066,"end":1286,"code":"func RecoveryWithWriter(out io.Writer, recovery ...RecoveryFunc) HandlerFunc {\n\tif len(recovery) \u003e 0 {\n\t\treturn CustomRecoveryWithWriter(out, recovery[0])\n\t}\n\treturn CustomRecoveryWithWriter(out, defaultHandleRecovery)\n}","nodeType":"FunctionDeclaration","column":0,"line":0,"doc":null,"receiver":null,"name":{"children":[],"start":1071,"end":1089,"code":"RecoveryWithWriter","nodeType":"Identifier","column":0,"line":0,"namePos":1071,"name":"RecoveryWithWriter","object":null},"type":{"children":[],"start":1066,"end":1142,"code":"func(out io.Writer, recovery ...RecoveryFunc) HandlerFunc","nodeType":"FunctionType","column":0,"line":0,"Function":1066,"TypeParams":null,"Params":{"children":[],"start":1089,"end":1130,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":1089,"list":[{"children":[],"start":1090,"end":1103,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":1090,"end":1093,"code":"out","nodeType":"Identifier","column":0,"line":0,"namePos":1090,"name":"out","object":null}],"type":{"children":[],"start":1094,"end":1103,"code":"io.Writer","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":1094,"end":1096,"code":"io","nodeType":"Identifier","column":0,"line":0,"namePos":1094,"name":"io","object":null},"sel":{"children":[],"start":1097,"end":1103,"code":"Writer","nodeType":"Identifier","column":0,"line":0,"namePos":1097,"name":"Writer","object":null}},"tag":null,"comment":null},{"children":[],"start":1105,"end":1129,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":1105,"end":1113,"code":"recovery","nodeType":"Identifier","column":0,"line":0,"namePos":1105,"name":"recovery","object":null}],"type":{"children":[],"start":1114,"end":1129,"code":"...RecoveryFunc","nodeType":"Ellipsis","column":0,"line":0,"ellipsis":1114,"element":{"children":[],"start":1117,"end":1129,"code":"RecoveryFunc","nodeType":"Identifier","column":0,"line":0,"namePos":1117,"name":"RecoveryFunc","object":null}},"tag":null,"comment":null}],"closing":1129},"Results":{"children":[],"start":1131,"end":1142,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":0,"list":[{"children":[],"start":1131,"end":1142,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":null,"type":{"children":[],"start":1131,"end":1142,"code":"HandlerFunc","nodeType":"Identifier","column":0,"line":0,"namePos":1131,"name":"HandlerFunc","object":null},"tag":null,"comment":null}],"closing":0}},"body":{"children":[],"start":1143,"end":1286,"code":"{\n\tif len(recovery) \u003e 0 {\n\t\treturn CustomRecoveryWithWriter(out, recovery[0])\n\t}\n\treturn CustomRecoveryWithWriter(out, defaultHandleRecovery)\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":1143,"list":[{"children":[],"start":1146,"end":1223,"code":"if len(recovery) \u003e 0 {\n\treturn CustomRecoveryWithWriter(out, recovery[0])\n}","nodeType":"IfStatement","column":0,"line":0,"if":1146,"initialization":null,"condition":{"children":[],"start":1149,"end":1166,"code":"len(recovery) \u003e 0","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":1149,"end":1162,"code":"len(recovery)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":1149,"end":1152,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":1149,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":1153,"end":1161,"code":"recovery","nodeType":"Identifier","column":0,"line":0,"namePos":1153,"name":"recovery","object":null}],"ellipsis":0,"rparen":0},"opPos":1163,"op":41,"rightExpression":{"children":[],"start":1165,"end":1166,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":1165,"kind":5,"value":"0"}},"body":{"children":[],"start":1167,"end":1223,"code":"{\n\treturn CustomRecoveryWithWriter(out, recovery[0])\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":1167,"list":[{"children":[],"start":1171,"end":1220,"code":"return CustomRecoveryWithWriter(out, recovery[0])","nodeType":"ReturnStatement","column":0,"line":0,"return":1171,"results":[{"children":[],"start":1178,"end":1220,"code":"CustomRecoveryWithWriter(out, recovery[0])","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":1178,"end":1202,"code":"CustomRecoveryWithWriter","nodeType":"Identifier","column":0,"line":0,"namePos":1178,"name":"CustomRecoveryWithWriter","object":null},"lparen":0,"args":[{"children":[],"start":1203,"end":1206,"code":"out","nodeType":"Identifier","column":0,"line":0,"namePos":1203,"name":"out","object":null},{"children":[],"start":1208,"end":1219,"code":"recovery[0]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":1208,"end":1216,"code":"recovery","nodeType":"Identifier","column":0,"line":0,"namePos":1208,"name":"recovery","object":null},"leftBracket":1216,"index":{"children":[],"start":1217,"end":1218,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":1217,"kind":5,"value":"0"},"rightBracket":1218}],"ellipsis":0,"rparen":0}]}],"rbrace":1222},"else":null},{"children":[],"start":1225,"end":1284,"code":"return CustomRecoveryWithWriter(out, defaultHandleRecovery)","nodeType":"ReturnStatement","column":0,"line":0,"return":1225,"results":[{"children":[],"start":1232,"end":1284,"code":"CustomRecoveryWithWriter(out, defaultHandleRecovery)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":1232,"end":1256,"code":"CustomRecoveryWithWriter","nodeType":"Identifier","column":0,"line":0,"namePos":1232,"name":"CustomRecoveryWithWriter","object":null},"lparen":0,"args":[{"children":[],"start":1257,"end":1260,"code":"out","nodeType":"Identifier","column":0,"line":0,"namePos":1257,"name":"out","object":null},{"children":[],"start":1262,"end":1283,"code":"defaultHandleRecovery","nodeType":"Identifier","column":0,"line":0,"namePos":1262,"name":"defaultHandleRecovery","object":null}],"ellipsis":0,"rparen":0}]}],"rbrace":1285}},{"children":[],"start":1435,"end":3125,"code":"func CustomRecoveryWithWriter(out io.Writer, handle RecoveryFunc) HandlerFunc {\n\tvar logger *log.Logger\n\tif out != nil {\n\t\tlogger = log.New(out, \"\\n\\n\\x1b[31m\", log.LstdFlags)\n\t}\n\treturn func(c *Context) {\n\t\tdefer func() {\n\t\t\tif err := recover(); err != nil {\n\t\t\t\tvar brokenPipe bool\n\t\t\t\tif ne, ok := err.(*net.OpError); ok {\n\t\t\t\t\tvar se *os.SyscallError\n\t\t\t\t\tif errors.As(ne, \u0026se) {\n\t\t\t\t\t\tseStr := strings.ToLower(se.Error())\n\t\t\t\t\t\tif strings.Contains(seStr, \"broken pipe\") || strings.Contains(seStr, \"connection reset by peer\") {\n\t\t\t\t\t\t\tbrokenPipe = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif logger != nil {\n\t\t\t\t\tstack := stack(3)\n\t\t\t\t\thttpRequest, _ := httputil.DumpRequest(c.Request, false)\n\t\t\t\t\theaders := strings.Split(string(httpRequest), \"\\r\\n\")\n\t\t\t\t\tfor idx, header := range headers {\n\t\t\t\t\t\tcurrent := strings.Split(header, \":\")\n\t\t\t\t\t\tif current[0] == \"Authorization\" {\n\t\t\t\t\t\t\theaders[idx] = current[0] + \": *\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\theadersToStr := strings.Join(headers, \"\\r\\n\")\n\t\t\t\t\tif brokenPipe {\n\t\t\t\t\t\tlogger.Printf(\"%s\\n%s%s\", err, headersToStr, reset)\n\t\t\t\t\t} else if IsDebugging() {\n\t\t\t\t\t\tlogger.Printf(\"[Recovery] %s panic recovered:\\n%s\\n%s\\n%s%s\", timeFormat(time.Now()), headersToStr, err, stack, reset)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlogger.Printf(\"[Recovery] %s panic recovered:\\n%s\\n%s%s\", timeFormat(time.Now()), err, stack, reset)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif brokenPipe {\n\t\t\t\t\tc.Error(err.(error))\n\t\t\t\t\tc.Abort()\n\t\t\t\t} else {\n\t\t\t\t\thandle(c, err)\n\t\t\t\t}\n\t\t\t}\n\t\t}()\n\t\tc.Next()\n\t}\n}","nodeType":"FunctionDeclaration","column":0,"line":0,"doc":null,"receiver":null,"name":{"children":[],"start":1440,"end":1464,"code":"CustomRecoveryWithWriter","nodeType":"Identifier","column":0,"line":0,"namePos":1440,"name":"CustomRecoveryWithWriter","object":null},"type":{"children":[],"start":1435,"end":1512,"code":"func(out io.Writer, handle RecoveryFunc) HandlerFunc","nodeType":"FunctionType","column":0,"line":0,"Function":1435,"TypeParams":null,"Params":{"children":[],"start":1464,"end":1500,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":1464,"list":[{"children":[],"start":1465,"end":1478,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":1465,"end":1468,"code":"out","nodeType":"Identifier","column":0,"line":0,"namePos":1465,"name":"out","object":null}],"type":{"children":[],"start":1469,"end":1478,"code":"io.Writer","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":1469,"end":1471,"code":"io","nodeType":"Identifier","column":0,"line":0,"namePos":1469,"name":"io","object":null},"sel":{"children":[],"start":1472,"end":1478,"code":"Writer","nodeType":"Identifier","column":0,"line":0,"namePos":1472,"name":"Writer","object":null}},"tag":null,"comment":null},{"children":[],"start":1480,"end":1499,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":1480,"end":1486,"code":"handle","nodeType":"Identifier","column":0,"line":0,"namePos":1480,"name":"handle","object":null}],"type":{"children":[],"start":1487,"end":1499,"code":"RecoveryFunc","nodeType":"Identifier","column":0,"line":0,"namePos":1487,"name":"RecoveryFunc","object":null},"tag":null,"comment":null}],"closing":1499},"Results":{"children":[],"start":1501,"end":1512,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":0,"list":[{"children":[],"start":1501,"end":1512,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":null,"type":{"children":[],"start":1501,"end":1512,"code":"HandlerFunc","nodeType":"Identifier","column":0,"line":0,"namePos":1501,"name":"HandlerFunc","object":null},"tag":null,"comment":null}],"closing":0}},"body":{"children":[],"start":1513,"end":3125,"code":"{\n\tvar logger *log.Logger\n\tif out != nil {\n\t\tlogger = log.New(out, \"\\n\\n\\x1b[31m\", log.LstdFlags)\n\t}\n\treturn func(c *Context) {\n\t\tdefer func() {\n\t\t\tif err := recover(); err != nil {\n\t\t\t\tvar brokenPipe bool\n\t\t\t\tif ne, ok := err.(*net.OpError); ok {\n\t\t\t\t\tvar se *os.SyscallError\n\t\t\t\t\tif errors.As(ne, \u0026se) {\n\t\t\t\t\t\tseStr := strings.ToLower(se.Error())\n\t\t\t\t\t\tif strings.Contains(seStr, \"broken pipe\") || strings.Contains(seStr, \"connection reset by peer\") {\n\t\t\t\t\t\t\tbrokenPipe = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif logger != nil {\n\t\t\t\t\tstack := stack(3)\n\t\t\t\t\thttpRequest, _ := httputil.DumpRequest(c.Request, false)\n\t\t\t\t\theaders := strings.Split(string(httpRequest), \"\\r\\n\")\n\t\t\t\t\tfor idx, header := range headers {\n\t\t\t\t\t\tcurrent := strings.Split(header, \":\")\n\t\t\t\t\t\tif current[0] == \"Authorization\" {\n\t\t\t\t\t\t\theaders[idx] = current[0] + \": *\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\theadersToStr := strings.Join(headers, \"\\r\\n\")\n\t\t\t\t\tif brokenPipe {\n\t\t\t\t\t\tlogger.Printf(\"%s\\n%s%s\", err, headersToStr, reset)\n\t\t\t\t\t} else if IsDebugging() {\n\t\t\t\t\t\tlogger.Printf(\"[Recovery] %s panic recovered:\\n%s\\n%s\\n%s%s\", timeFormat(time.Now()), headersToStr, err, stack, reset)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlogger.Printf(\"[Recovery] %s panic recovered:\\n%s\\n%s%s\", timeFormat(time.Now()), err, stack, reset)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif brokenPipe {\n\t\t\t\t\tc.Error(err.(error))\n\t\t\t\t\tc.Abort()\n\t\t\t\t} else {\n\t\t\t\t\thandle(c, err)\n\t\t\t\t}\n\t\t\t}\n\t\t}()\n\t\tc.Next()\n\t}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":1513,"list":[{"children":[],"start":1516,"end":1538,"code":"var logger *log.Logger","nodeType":"DeclarationStatement","column":0,"line":0,"declaration":{"children":[],"start":1516,"end":1538,"code":"var logger *log.Logger","nodeType":"GenericDeclaration","column":0,"line":0,"doc":null,"tokenPosition":1516,"token":85,"lparen":0,"specifications":[{"children":[],"start":1520,"end":1538,"code":"logger *log.Logger","nodeType":"ValueSpecification","column":0,"line":0,"doc":null,"names":[{"children":[],"start":1520,"end":1526,"code":"logger","nodeType":"Identifier","column":0,"line":0,"namePos":1520,"name":"logger","object":null}],"type":{"children":[],"start":1527,"end":1538,"code":"*log.Logger","nodeType":"StarExpression","column":0,"line":0,"star":1527,"expression":{"children":[],"start":1528,"end":1538,"code":"log.Logger","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":1528,"end":1531,"code":"log","nodeType":"Identifier","column":0,"line":0,"namePos":1528,"name":"log","object":null},"sel":{"children":[],"start":1532,"end":1538,"code":"Logger","nodeType":"Identifier","column":0,"line":0,"namePos":1532,"name":"Logger","object":null}}},"values":[],"comment":null}],"rparen":0}},{"children":[],"start":1540,"end":1613,"code":"if out != nil {\n\tlogger = log.New(out, \"\\n\\n\\x1b[31m\", log.LstdFlags)\n}","nodeType":"IfStatement","column":0,"line":0,"if":1540,"initialization":null,"condition":{"children":[],"start":1543,"end":1553,"code":"out != nil","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":1543,"end":1546,"code":"out","nodeType":"Identifier","column":0,"line":0,"namePos":1543,"name":"out","object":null},"opPos":1547,"op":44,"rightExpression":{"children":[],"start":1550,"end":1553,"code":"nil","nodeType":"Identifier","column":0,"line":0,"namePos":1550,"name":"nil","object":null}},"body":{"children":[],"start":1554,"end":1613,"code":"{\n\tlogger = log.New(out, \"\\n\\n\\x1b[31m\", log.LstdFlags)\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":1554,"list":[{"children":[],"start":1558,"end":1610,"code":"logger = log.New(out, \"\\n\\n\\x1b[31m\", log.LstdFlags)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":1558,"end":1564,"code":"logger","nodeType":"Identifier","column":0,"line":0,"namePos":1558,"name":"logger","object":null}],"tokenPos":1565,"token":42,"rhs":[{"children":[],"start":1567,"end":1610,"code":"log.New(out, \"\\n\\n\\x1b[31m\", log.LstdFlags)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":1567,"end":1574,"code":"log.New","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":1567,"end":1570,"code":"log","nodeType":"Identifier","column":0,"line":0,"namePos":1567,"name":"log","object":null},"sel":{"children":[],"start":1571,"end":1574,"code":"New","nodeType":"Identifier","column":0,"line":0,"namePos":1571,"name":"New","object":null}},"lparen":0,"args":[{"children":[],"start":1575,"end":1578,"code":"out","nodeType":"Identifier","column":0,"line":0,"namePos":1575,"name":"out","object":null},{"children":[],"start":1580,"end":1594,"code":"\"\\n\\n\\x1b[31m\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":1580,"kind":9,"value":"\"\\n\\n\\x1b[31m\""},{"children":[],"start":1596,"end":1609,"code":"log.LstdFlags","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":1596,"end":1599,"code":"log","nodeType":"Identifier","column":0,"line":0,"namePos":1596,"name":"log","object":null},"sel":{"children":[],"start":1600,"end":1609,"code":"LstdFlags","nodeType":"Identifier","column":0,"line":0,"namePos":1600,"name":"LstdFlags","object":null}}],"ellipsis":0,"rparen":0}]}],"rbrace":1612},"else":null},{"children":[],"start":1615,"end":3123,"code":"return func(c *Context) {\n\tdefer func() {\n\t\tif err := recover(); err != nil {\n\t\t\tvar brokenPipe bool\n\t\t\tif ne, ok := err.(*net.OpError); ok {\n\t\t\t\tvar se *os.SyscallError\n\t\t\t\tif errors.As(ne, \u0026se) {\n\t\t\t\t\tseStr := strings.ToLower(se.Error())\n\t\t\t\t\tif strings.Contains(seStr, \"broken pipe\") || strings.Contains(seStr, \"connection reset by peer\") {\n\t\t\t\t\t\tbrokenPipe = true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif logger != nil {\n\t\t\t\tstack := stack(3)\n\t\t\t\thttpRequest, _ := httputil.DumpRequest(c.Request, false)\n\t\t\t\theaders := strings.Split(string(httpRequest), \"\\r\\n\")\n\t\t\t\tfor idx, header := range headers {\n\t\t\t\t\tcurrent := strings.Split(header, \":\")\n\t\t\t\t\tif current[0] == \"Authorization\" {\n\t\t\t\t\t\theaders[idx] = current[0] + \": *\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\theadersToStr := strings.Join(headers, \"\\r\\n\")\n\t\t\t\tif brokenPipe {\n\t\t\t\t\tlogger.Printf(\"%s\\n%s%s\", err, headersToStr, reset)\n\t\t\t\t} else if IsDebugging() {\n\t\t\t\t\tlogger.Printf(\"[Recovery] %s panic recovered:\\n%s\\n%s\\n%s%s\", timeFormat(time.Now()), headersToStr, err, stack, reset)\n\t\t\t\t} else {\n\t\t\t\t\tlogger.Printf(\"[Recovery] %s panic recovered:\\n%s\\n%s%s\", timeFormat(time.Now()), err, stack, reset)\n\t\t\t\t}\n\t\t\t}\n\t\t\tif brokenPipe {\n\t\t\t\tc.Error(err.(error))\n\t\t\t\tc.Abort()\n\t\t\t} else {\n\t\t\t\thandle(c, err)\n\t\t\t}\n\t\t}\n\t}()\n\tc.Next()\n}","nodeType":"ReturnStatement","column":0,"line":0,"return":1615,"results":[{"children":[],"start":1622,"end":3123,"code":"func(c *Context) {\n\tdefer func() {\n\t\tif err := recover(); err != nil {\n\t\t\tvar brokenPipe bool\n\t\t\tif ne, ok := err.(*net.OpError); ok {\n\t\t\t\tvar se *os.SyscallError\n\t\t\t\tif errors.As(ne, \u0026se) {\n\t\t\t\t\tseStr := strings.ToLower(se.Error())\n\t\t\t\t\tif strings.Contains(seStr, \"broken pipe\") || strings.Contains(seStr, \"connection reset by peer\") {\n\t\t\t\t\t\tbrokenPipe = true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif logger != nil {\n\t\t\t\tstack := stack(3)\n\t\t\t\thttpRequest, _ := httputil.DumpRequest(c.Request, false)\n\t\t\t\theaders := strings.Split(string(httpRequest), \"\\r\\n\")\n\t\t\t\tfor idx, header := range headers {\n\t\t\t\t\tcurrent := strings.Split(header, \":\")\n\t\t\t\t\tif current[0] == \"Authorization\" {\n\t\t\t\t\t\theaders[idx] = current[0] + \": *\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\theadersToStr := strings.Join(headers, \"\\r\\n\")\n\t\t\t\tif brokenPipe {\n\t\t\t\t\tlogger.Printf(\"%s\\n%s%s\", err, headersToStr, reset)\n\t\t\t\t} else if IsDebugging() {\n\t\t\t\t\tlogger.Printf(\"[Recovery] %s panic recovered:\\n%s\\n%s\\n%s%s\", timeFormat(time.Now()), headersToStr, err, stack, reset)\n\t\t\t\t} else {\n\t\t\t\t\tlogger.Printf(\"[Recovery] %s panic recovered:\\n%s\\n%s%s\", timeFormat(time.Now()), err, stack, reset)\n\t\t\t\t}\n\t\t\t}\n\t\t\tif brokenPipe {\n\t\t\t\tc.Error(err.(error))\n\t\t\t\tc.Abort()\n\t\t\t} else {\n\t\t\t\thandle(c, err)\n\t\t\t}\n\t\t}\n\t}()\n\tc.Next()\n}","nodeType":"FunctionLiteral","column":0,"line":0,"type":{"children":[],"start":1622,"end":1638,"code":"func(c *Context)","nodeType":"FunctionType","column":0,"line":0,"Function":1622,"TypeParams":null,"Params":{"children":[],"start":1626,"end":1638,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":1626,"list":[{"children":[],"start":1627,"end":1637,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":1627,"end":1628,"code":"c","nodeType":"Identifier","column":0,"line":0,"namePos":1627,"name":"c","object":null}],"type":{"children":[],"start":1629,"end":1637,"code":"*Context","nodeType":"StarExpression","column":0,"line":0,"star":1629,"expression":{"children":[],"start":1630,"end":1637,"code":"Context","nodeType":"Identifier","column":0,"line":0,"namePos":1630,"name":"Context","object":null}},"tag":null,"comment":null}],"closing":1637},"Results":null},"body":{"children":[],"start":1639,"end":3123,"code":"{\n\tdefer func() {\n\t\tif err := recover(); err != nil {\n\t\t\tvar brokenPipe bool\n\t\t\tif ne, ok := err.(*net.OpError); ok {\n\t\t\t\tvar se *os.SyscallError\n\t\t\t\tif errors.As(ne, \u0026se) {\n\t\t\t\t\tseStr := strings.ToLower(se.Error())\n\t\t\t\t\tif strings.Contains(seStr, \"broken pipe\") || strings.Contains(seStr, \"connection reset by peer\") {\n\t\t\t\t\t\tbrokenPipe = true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif logger != nil {\n\t\t\t\tstack := stack(3)\n\t\t\t\thttpRequest, _ := httputil.DumpRequest(c.Request, false)\n\t\t\t\theaders := strings.Split(string(httpRequest), \"\\r\\n\")\n\t\t\t\tfor idx, header := range headers {\n\t\t\t\t\tcurrent := strings.Split(header, \":\")\n\t\t\t\t\tif current[0] == \"Authorization\" {\n\t\t\t\t\t\theaders[idx] = current[0] + \": *\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\theadersToStr := strings.Join(headers, \"\\r\\n\")\n\t\t\t\tif brokenPipe {\n\t\t\t\t\tlogger.Printf(\"%s\\n%s%s\", err, headersToStr, reset)\n\t\t\t\t} else if IsDebugging() {\n\t\t\t\t\tlogger.Printf(\"[Recovery] %s panic recovered:\\n%s\\n%s\\n%s%s\", timeFormat(time.Now()), headersToStr, err, stack, reset)\n\t\t\t\t} else {\n\t\t\t\t\tlogger.Printf(\"[Recovery] %s panic recovered:\\n%s\\n%s%s\", timeFormat(time.Now()), err, stack, reset)\n\t\t\t\t}\n\t\t\t}\n\t\t\tif brokenPipe {\n\t\t\t\tc.Error(err.(error))\n\t\t\t\tc.Abort()\n\t\t\t} else {\n\t\t\t\thandle(c, err)\n\t\t\t}\n\t\t}\n\t}()\n\tc.Next()\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":1639,"list":[{"children":[],"start":1643,"end":3109,"code":"defer func() {\n\tif err := recover(); err != nil {\n\t\tvar brokenPipe bool\n\t\tif ne, ok := err.(*net.OpError); ok {\n\t\t\tvar se *os.SyscallError\n\t\t\tif errors.As(ne, \u0026se) {\n\t\t\t\tseStr := strings.ToLower(se.Error())\n\t\t\t\tif strings.Contains(seStr, \"broken pipe\") || strings.Contains(seStr, \"connection reset by peer\") {\n\t\t\t\t\tbrokenPipe = true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif logger != nil {\n\t\t\tstack := stack(3)\n\t\t\thttpRequest, _ := httputil.DumpRequest(c.Request, false)\n\t\t\theaders := strings.Split(string(httpRequest), \"\\r\\n\")\n\t\t\tfor idx, header := range headers {\n\t\t\t\tcurrent := strings.Split(header, \":\")\n\t\t\t\tif current[0] == \"Authorization\" {\n\t\t\t\t\theaders[idx] = current[0] + \": *\"\n\t\t\t\t}\n\t\t\t}\n\t\t\theadersToStr := strings.Join(headers, \"\\r\\n\")\n\t\t\tif brokenPipe {\n\t\t\t\tlogger.Printf(\"%s\\n%s%s\", err, headersToStr, reset)\n\t\t\t} else if IsDebugging() {\n\t\t\t\tlogger.Printf(\"[Recovery] %s panic recovered:\\n%s\\n%s\\n%s%s\", timeFormat(time.Now()), headersToStr, err, stack, reset)\n\t\t\t} else {\n\t\t\t\tlogger.Printf(\"[Recovery] %s panic recovered:\\n%s\\n%s%s\", timeFormat(time.Now()), err, stack, reset)\n\t\t\t}\n\t\t}\n\t\tif brokenPipe {\n\t\t\tc.Error(err.(error))\n\t\t\tc.Abort()\n\t\t} else {\n\t\t\thandle(c, err)\n\t\t}\n\t}\n}()","nodeType":"DeferStatement","column":0,"line":0,"defer":1643,"call":{"children":[],"start":1649,"end":3109,"code":"func() {\n\tif err := recover(); err != nil {\n\t\tvar brokenPipe bool\n\t\tif ne, ok := err.(*net.OpError); ok {\n\t\t\tvar se *os.SyscallError\n\t\t\tif errors.As(ne, \u0026se) {\n\t\t\t\tseStr := strings.ToLower(se.Error())\n\t\t\t\tif strings.Contains(seStr, \"broken pipe\") || strings.Contains(seStr, \"connection reset by peer\") {\n\t\t\t\t\tbrokenPipe = true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif logger != nil {\n\t\t\tstack := stack(3)\n\t\t\thttpRequest, _ := httputil.DumpRequest(c.Request, false)\n\t\t\theaders := strings.Split(string(httpRequest), \"\\r\\n\")\n\t\t\tfor idx, header := range headers {\n\t\t\t\tcurrent := strings.Split(header, \":\")\n\t\t\t\tif current[0] == \"Authorization\" {\n\t\t\t\t\theaders[idx] = current[0] + \": *\"\n\t\t\t\t}\n\t\t\t}\n\t\t\theadersToStr := strings.Join(headers, \"\\r\\n\")\n\t\t\tif brokenPipe {\n\t\t\t\tlogger.Printf(\"%s\\n%s%s\", err, headersToStr, reset)\n\t\t\t} else if IsDebugging() {\n\t\t\t\tlogger.Printf(\"[Recovery] %s panic recovered:\\n%s\\n%s\\n%s%s\", timeFormat(time.Now()), headersToStr, err, stack, reset)\n\t\t\t} else {\n\t\t\t\tlogger.Printf(\"[Recovery] %s panic recovered:\\n%s\\n%s%s\", timeFormat(time.Now()), err, stack, reset)\n\t\t\t}\n\t\t}\n\t\tif brokenPipe {\n\t\t\tc.Error(err.(error))\n\t\t\tc.Abort()\n\t\t} else {\n\t\t\thandle(c, err)\n\t\t}\n\t}\n}()","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":1649,"end":3107,"code":"func() {\n\tif err := recover(); err != nil {\n\t\tvar brokenPipe bool\n\t\tif ne, ok := err.(*net.OpError); ok {\n\t\t\tvar se *os.SyscallError\n\t\t\tif errors.As(ne, \u0026se) {\n\t\t\t\tseStr := strings.ToLower(se.Error())\n\t\t\t\tif strings.Contains(seStr, \"broken pipe\") || strings.Contains(seStr, \"connection reset by peer\") {\n\t\t\t\t\tbrokenPipe = true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif logger != nil {\n\t\t\tstack := stack(3)\n\t\t\thttpRequest, _ := httputil.DumpRequest(c.Request, false)\n\t\t\theaders := strings.Split(string(httpRequest), \"\\r\\n\")\n\t\t\tfor idx, header := range headers {\n\t\t\t\tcurrent := strings.Split(header, \":\")\n\t\t\t\tif current[0] == \"Authorization\" {\n\t\t\t\t\theaders[idx] = current[0] + \": *\"\n\t\t\t\t}\n\t\t\t}\n\t\t\theadersToStr := strings.Join(headers, \"\\r\\n\")\n\t\t\tif brokenPipe {\n\t\t\t\tlogger.Printf(\"%s\\n%s%s\", err, headersToStr, reset)\n\t\t\t} else if IsDebugging() {\n\t\t\t\tlogger.Printf(\"[Recovery] %s panic recovered:\\n%s\\n%s\\n%s%s\", timeFormat(time.Now()), headersToStr, err, stack, reset)\n\t\t\t} else {\n\t\t\t\tlogger.Printf(\"[Recovery] %s panic recovered:\\n%s\\n%s%s\", timeFormat(time.Now()), err, stack, reset)\n\t\t\t}\n\t\t}\n\t\tif brokenPipe {\n\t\t\tc.Error(err.(error))\n\t\t\tc.Abort()\n\t\t} else {\n\t\t\thandle(c, err)\n\t\t}\n\t}\n}","nodeType":"FunctionLiteral","column":0,"line":0,"type":{"children":[],"start":1649,"end":1655,"code":"func()","nodeType":"FunctionType","column":0,"line":0,"Function":1649,"TypeParams":null,"Params":{"children":[],"start":1653,"end":1655,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":1653,"list":[],"closing":1654},"Results":null},"body":{"children":[],"start":1656,"end":3107,"code":"{\n\tif err := recover(); err != nil {\n\t\tvar brokenPipe bool\n\t\tif ne, ok := err.(*net.OpError); ok {\n\t\t\tvar se *os.SyscallError\n\t\t\tif errors.As(ne, \u0026se) {\n\t\t\t\tseStr := strings.ToLower(se.Error())\n\t\t\t\tif strings.Contains(seStr, \"broken pipe\") || strings.Contains(seStr, \"connection reset by peer\") {\n\t\t\t\t\tbrokenPipe = true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif logger != nil {\n\t\t\tstack := stack(3)\n\t\t\thttpRequest, _ := httputil.DumpRequest(c.Request, false)\n\t\t\theaders := strings.Split(string(httpRequest), \"\\r\\n\")\n\t\t\tfor idx, header := range headers {\n\t\t\t\tcurrent := strings.Split(header, \":\")\n\t\t\t\tif current[0] == \"Authorization\" {\n\t\t\t\t\theaders[idx] = current[0] + \": *\"\n\t\t\t\t}\n\t\t\t}\n\t\t\theadersToStr := strings.Join(headers, \"\\r\\n\")\n\t\t\tif brokenPipe {\n\t\t\t\tlogger.Printf(\"%s\\n%s%s\", err, headersToStr, reset)\n\t\t\t} else if IsDebugging() {\n\t\t\t\tlogger.Printf(\"[Recovery] %s panic recovered:\\n%s\\n%s\\n%s%s\", timeFormat(time.Now()), headersToStr, err, stack, reset)\n\t\t\t} else {\n\t\t\t\tlogger.Printf(\"[Recovery] %s panic recovered:\\n%s\\n%s%s\", timeFormat(time.Now()), err, stack, reset)\n\t\t\t}\n\t\t}\n\t\tif brokenPipe {\n\t\t\tc.Error(err.(error))\n\t\t\tc.Abort()\n\t\t} else {\n\t\t\thandle(c, err)\n\t\t}\n\t}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":1656,"list":[{"children":[],"start":1661,"end":3103,"code":"if err := recover(); err != nil {\n\tvar brokenPipe bool\n\tif ne, ok := err.(*net.OpError); ok {\n\t\tvar se *os.SyscallError\n\t\tif errors.As(ne, \u0026se) {\n\t\t\tseStr := strings.ToLower(se.Error())\n\t\t\tif strings.Contains(seStr, \"broken pipe\") || strings.Contains(seStr, \"connection reset by peer\") {\n\t\t\t\tbrokenPipe = true\n\t\t\t}\n\t\t}\n\t}\n\tif logger != nil {\n\t\tstack := stack(3)\n\t\thttpRequest, _ := httputil.DumpRequest(c.Request, false)\n\t\theaders := strings.Split(string(httpRequest), \"\\r\\n\")\n\t\tfor idx, header := range headers {\n\t\t\tcurrent := strings.Split(header, \":\")\n\t\t\tif current[0] == \"Authorization\" {\n\t\t\t\theaders[idx] = current[0] + \": *\"\n\t\t\t}\n\t\t}\n\t\theadersToStr := strings.Join(headers, \"\\r\\n\")\n\t\tif brokenPipe {\n\t\t\tlogger.Printf(\"%s\\n%s%s\", err, headersToStr, reset)\n\t\t} else if IsDebugging() {\n\t\t\tlogger.Printf(\"[Recovery] %s panic recovered:\\n%s\\n%s\\n%s%s\", timeFormat(time.Now()), headersToStr, err, stack, reset)\n\t\t} else {\n\t\t\tlogger.Printf(\"[Recovery] %s panic recovered:\\n%s\\n%s%s\", timeFormat(time.Now()), err, stack, reset)\n\t\t}\n\t}\n\tif brokenPipe {\n\t\tc.Error(err.(error))\n\t\tc.Abort()\n\t} else {\n\t\thandle(c, err)\n\t}\n}","nodeType":"IfStatement","column":0,"line":0,"if":1661,"initialization":{"children":[],"start":1664,"end":1680,"code":"err := recover()","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":1664,"end":1667,"code":"err","nodeType":"Identifier","column":0,"line":0,"namePos":1664,"name":"err","object":null}],"tokenPos":1668,"token":47,"rhs":[{"children":[],"start":1671,"end":1680,"code":"recover()","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":1671,"end":1678,"code":"recover","nodeType":"Identifier","column":0,"line":0,"namePos":1671,"name":"recover","object":null},"lparen":0,"args":[],"ellipsis":0,"rparen":0}]},"condition":{"children":[],"start":1682,"end":1692,"code":"err != nil","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":1682,"end":1685,"code":"err","nodeType":"Identifier","column":0,"line":0,"namePos":1682,"name":"err","object":null},"opPos":1686,"op":44,"rightExpression":{"children":[],"start":1689,"end":1692,"code":"nil","nodeType":"Identifier","column":0,"line":0,"namePos":1689,"name":"nil","object":null}},"body":{"children":[],"start":1693,"end":3103,"code":"{\n\tvar brokenPipe bool\n\tif ne, ok := err.(*net.OpError); ok {\n\t\tvar se *os.SyscallError\n\t\tif errors.As(ne, \u0026se) {\n\t\t\tseStr := strings.ToLower(se.Error())\n\t\t\tif strings.Contains(seStr, \"broken pipe\") || strings.Contains(seStr, \"connection reset by peer\") {\n\t\t\t\tbrokenPipe = true\n\t\t\t}\n\t\t}\n\t}\n\tif logger != nil {\n\t\tstack := stack(3)\n\t\thttpRequest, _ := httputil.DumpRequest(c.Request, false)\n\t\theaders := strings.Split(string(httpRequest), \"\\r\\n\")\n\t\tfor idx, header := range headers {\n\t\t\tcurrent := strings.Split(header, \":\")\n\t\t\tif current[0] == \"Authorization\" {\n\t\t\t\theaders[idx] = current[0] + \": *\"\n\t\t\t}\n\t\t}\n\t\theadersToStr := strings.Join(headers, \"\\r\\n\")\n\t\tif brokenPipe {\n\t\t\tlogger.Printf(\"%s\\n%s%s\", err, headersToStr, reset)\n\t\t} else if IsDebugging() {\n\t\t\tlogger.Printf(\"[Recovery] %s panic recovered:\\n%s\\n%s\\n%s%s\", timeFormat(time.Now()), headersToStr, err, stack, reset)\n\t\t} else {\n\t\t\tlogger.Printf(\"[Recovery] %s panic recovered:\\n%s\\n%s%s\", timeFormat(time.Now()), err, stack, reset)\n\t\t}\n\t}\n\tif brokenPipe {\n\t\tc.Error(err.(error))\n\t\tc.Abort()\n\t} else {\n\t\thandle(c, err)\n\t}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":1693,"list":[{"children":[],"start":1811,"end":1830,"code":"var brokenPipe bool","nodeType":"DeclarationStatement","column":0,"line":0,"declaration":{"children":[],"start":1811,"end":1830,"code":"var brokenPipe bool","nodeType":"GenericDeclaration","column":0,"line":0,"doc":null,"tokenPosition":1811,"token":85,"lparen":0,"specifications":[{"children":[],"start":1815,"end":1830,"code":"brokenPipe bool","nodeType":"ValueSpecification","column":0,"line":0,"doc":null,"names":[{"children":[],"start":1815,"end":1825,"code":"brokenPipe","nodeType":"Identifier","column":0,"line":0,"namePos":1815,"name":"brokenPipe","object":null}],"type":{"children":[],"start":1826,"end":1830,"code":"bool","nodeType":"Identifier","column":0,"line":0,"namePos":1826,"name":"bool","object":null},"values":[],"comment":null}],"rparen":0}},{"children":[],"start":1835,"end":2131,"code":"if ne, ok := err.(*net.OpError); ok {\n\tvar se *os.SyscallError\n\tif errors.As(ne, \u0026se) {\n\t\tseStr := strings.ToLower(se.Error())\n\t\tif strings.Contains(seStr, \"broken pipe\") || strings.Contains(seStr, \"connection reset by peer\") {\n\t\t\tbrokenPipe = true\n\t\t}\n\t}\n}","nodeType":"IfStatement","column":0,"line":0,"if":1835,"initialization":{"children":[],"start":1838,"end":1866,"code":"ne, ok := err.(*net.OpError)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":1838,"end":1840,"code":"ne","nodeType":"Identifier","column":0,"line":0,"namePos":1838,"name":"ne","object":null},{"children":[],"start":1842,"end":1844,"code":"ok","nodeType":"Identifier","column":0,"line":0,"namePos":1842,"name":"ok","object":null}],"tokenPos":1845,"token":47,"rhs":[{"children":[],"start":1848,"end":1866,"code":"err.(*net.OpError)","nodeType":"TypeAssertExpression","column":0,"line":0,"expression":{"children":[],"start":1848,"end":1851,"code":"err","nodeType":"Identifier","column":0,"line":0,"namePos":1848,"name":"err","object":null},"lparen":1852,"type":{"children":[],"start":1853,"end":1865,"code":"*net.OpError","nodeType":"StarExpression","column":0,"line":0,"star":1853,"expression":{"children":[],"start":1854,"end":1865,"code":"net.OpError","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":1854,"end":1857,"code":"net","nodeType":"Identifier","column":0,"line":0,"namePos":1854,"name":"net","object":null},"sel":{"children":[],"start":1858,"end":1865,"code":"OpError","nodeType":"Identifier","column":0,"line":0,"namePos":1858,"name":"OpError","object":null}}},"rparen":1865}]},"condition":{"children":[],"start":1868,"end":1870,"code":"ok","nodeType":"Identifier","column":0,"line":0,"namePos":1868,"name":"ok","object":null},"body":{"children":[],"start":1871,"end":2131,"code":"{\n\tvar se *os.SyscallError\n\tif errors.As(ne, \u0026se) {\n\t\tseStr := strings.ToLower(se.Error())\n\t\tif strings.Contains(seStr, \"broken pipe\") || strings.Contains(seStr, \"connection reset by peer\") {\n\t\t\tbrokenPipe = true\n\t\t}\n\t}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":1871,"list":[{"children":[],"start":1878,"end":1901,"code":"var se *os.SyscallError","nodeType":"DeclarationStatement","column":0,"line":0,"declaration":{"children":[],"start":1878,"end":1901,"code":"var se *os.SyscallError","nodeType":"GenericDeclaration","column":0,"line":0,"doc":null,"tokenPosition":1878,"token":85,"lparen":0,"specifications":[{"children":[],"start":1882,"end":1901,"code":"se *os.SyscallError","nodeType":"ValueSpecification","column":0,"line":0,"doc":null,"names":[{"children":[],"start":1882,"end":1884,"code":"se","nodeType":"Identifier","column":0,"line":0,"namePos":1882,"name":"se","object":null}],"type":{"children":[],"start":1885,"end":1901,"code":"*os.SyscallError","nodeType":"StarExpression","column":0,"line":0,"star":1885,"expression":{"children":[],"start":1886,"end":1901,"code":"os.SyscallError","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":1886,"end":1888,"code":"os","nodeType":"Identifier","column":0,"line":0,"namePos":1886,"name":"os","object":null},"sel":{"children":[],"start":1889,"end":1901,"code":"SyscallError","nodeType":"Identifier","column":0,"line":0,"namePos":1889,"name":"SyscallError","object":null}}},"values":[],"comment":null}],"rparen":0}},{"children":[],"start":1907,"end":2125,"code":"if errors.As(ne, \u0026se) {\n\tseStr := strings.ToLower(se.Error())\n\tif strings.Contains(seStr, \"broken pipe\") || strings.Contains(seStr, \"connection reset by peer\") {\n\t\tbrokenPipe = true\n\t}\n}","nodeType":"IfStatement","column":0,"line":0,"if":1907,"initialization":null,"condition":{"children":[],"start":1910,"end":1928,"code":"errors.As(ne, \u0026se)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":1910,"end":1919,"code":"errors.As","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":1910,"end":1916,"code":"errors","nodeType":"Identifier","column":0,"line":0,"namePos":1910,"name":"errors","object":null},"sel":{"children":[],"start":1917,"end":1919,"code":"As","nodeType":"Identifier","column":0,"line":0,"namePos":1917,"name":"As","object":null}},"lparen":0,"args":[{"children":[],"start":1920,"end":1922,"code":"ne","nodeType":"Identifier","column":0,"line":0,"namePos":1920,"name":"ne","object":null},{"children":[],"start":1924,"end":1927,"code":"\u0026se","nodeType":"UnaryExpression","column":0,"line":0,"opPos":1924,"op":17,"expression":{"children":[],"start":1925,"end":1927,"code":"se","nodeType":"Identifier","column":0,"line":0,"namePos":1925,"name":"se","object":null}}],"ellipsis":0,"rparen":0},"body":{"children":[],"start":1929,"end":2125,"code":"{\n\tseStr := strings.ToLower(se.Error())\n\tif strings.Contains(seStr, \"broken pipe\") || strings.Contains(seStr, \"connection reset by peer\") {\n\t\tbrokenPipe = true\n\t}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":1929,"list":[{"children":[],"start":1937,"end":1973,"code":"seStr := strings.ToLower(se.Error())","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":1937,"end":1942,"code":"seStr","nodeType":"Identifier","column":0,"line":0,"namePos":1937,"name":"seStr","object":null}],"tokenPos":1943,"token":47,"rhs":[{"children":[],"start":1946,"end":1973,"code":"strings.ToLower(se.Error())","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":1946,"end":1961,"code":"strings.ToLower","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":1946,"end":1953,"code":"strings","nodeType":"Identifier","column":0,"line":0,"namePos":1946,"name":"strings","object":null},"sel":{"children":[],"start":1954,"end":1961,"code":"ToLower","nodeType":"Identifier","column":0,"line":0,"namePos":1954,"name":"ToLower","object":null}},"lparen":0,"args":[{"children":[],"start":1962,"end":1972,"code":"se.Error()","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":1962,"end":1970,"code":"se.Error","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":1962,"end":1964,"code":"se","nodeType":"Identifier","column":0,"line":0,"namePos":1962,"name":"se","object":null},"sel":{"children":[],"start":1965,"end":1970,"code":"Error","nodeType":"Identifier","column":0,"line":0,"namePos":1965,"name":"Error","object":null}},"lparen":0,"args":[],"ellipsis":0,"rparen":0}],"ellipsis":0,"rparen":0}]},{"children":[],"start":1980,"end":2118,"code":"if strings.Contains(seStr, \"broken pipe\") || strings.Contains(seStr, \"connection reset by peer\") {\n\tbrokenPipe = true\n}","nodeType":"IfStatement","column":0,"line":0,"if":1980,"initialization":null,"condition":{"children":[],"start":1983,"end":2083,"code":"strings.Contains(seStr, \"broken pipe\") || strings.Contains(seStr, \"connection reset by peer\")","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":1983,"end":2021,"code":"strings.Contains(seStr, \"broken pipe\")","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":1983,"end":1999,"code":"strings.Contains","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":1983,"end":1990,"code":"strings","nodeType":"Identifier","column":0,"line":0,"namePos":1983,"name":"strings","object":null},"sel":{"children":[],"start":1991,"end":1999,"code":"Contains","nodeType":"Identifier","column":0,"line":0,"namePos":1991,"name":"Contains","object":null}},"lparen":0,"args":[{"children":[],"start":2000,"end":2005,"code":"seStr","nodeType":"Identifier","column":0,"line":0,"namePos":2000,"name":"seStr","object":null},{"children":[],"start":2007,"end":2020,"code":"\"broken pipe\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":2007,"kind":9,"value":"\"broken pipe\""}],"ellipsis":0,"rparen":0},"opPos":2022,"op":35,"rightExpression":{"children":[],"start":2032,"end":2083,"code":"strings.Contains(seStr, \"connection reset by peer\")","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":2032,"end":2048,"code":"strings.Contains","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":2032,"end":2039,"code":"strings","nodeType":"Identifier","column":0,"line":0,"namePos":2032,"name":"strings","object":null},"sel":{"children":[],"start":2040,"end":2048,"code":"Contains","nodeType":"Identifier","column":0,"line":0,"namePos":2040,"name":"Contains","object":null}},"lparen":0,"args":[{"children":[],"start":2049,"end":2054,"code":"seStr","nodeType":"Identifier","column":0,"line":0,"namePos":2049,"name":"seStr","object":null},{"children":[],"start":2056,"end":2082,"code":"\"connection reset by peer\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":2056,"kind":9,"value":"\"connection reset by peer\""}],"ellipsis":0,"rparen":0}},"body":{"children":[],"start":2084,"end":2118,"code":"{\n\tbrokenPipe = true\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":2084,"list":[{"children":[],"start":2093,"end":2110,"code":"brokenPipe = true","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":2093,"end":2103,"code":"brokenPipe","nodeType":"Identifier","column":0,"line":0,"namePos":2093,"name":"brokenPipe","object":null}],"tokenPos":2104,"token":42,"rhs":[{"children":[],"start":2106,"end":2110,"code":"true","nodeType":"Identifier","column":0,"line":0,"namePos":2106,"name":"true","object":null}]}],"rbrace":2117},"else":null}],"rbrace":2124},"else":null}],"rbrace":2130},"else":null},{"children":[],"start":2136,"end":2913,"code":"if logger != nil {\n\tstack := stack(3)\n\thttpRequest, _ := httputil.DumpRequest(c.Request, false)\n\theaders := strings.Split(string(httpRequest), \"\\r\\n\")\n\tfor idx, header := range headers {\n\t\tcurrent := strings.Split(header, \":\")\n\t\tif current[0] == \"Authorization\" {\n\t\t\theaders[idx] = current[0] + \": *\"\n\t\t}\n\t}\n\theadersToStr := strings.Join(headers, \"\\r\\n\")\n\tif brokenPipe {\n\t\tlogger.Printf(\"%s\\n%s%s\", err, headersToStr, reset)\n\t} else if IsDebugging() {\n\t\tlogger.Printf(\"[Recovery] %s panic recovered:\\n%s\\n%s\\n%s%s\", timeFormat(time.Now()), headersToStr, err, stack, reset)\n\t} else {\n\t\tlogger.Printf(\"[Recovery] %s panic recovered:\\n%s\\n%s%s\", timeFormat(time.Now()), err, stack, reset)\n\t}\n}","nodeType":"IfStatement","column":0,"line":0,"if":2136,"initialization":null,"condition":{"children":[],"start":2139,"end":2152,"code":"logger != nil","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":2139,"end":2145,"code":"logger","nodeType":"Identifier","column":0,"line":0,"namePos":2139,"name":"logger","object":null},"opPos":2146,"op":44,"rightExpression":{"children":[],"start":2149,"end":2152,"code":"nil","nodeType":"Identifier","column":0,"line":0,"namePos":2149,"name":"nil","object":null}},"body":{"children":[],"start":2153,"end":2913,"code":"{\n\tstack := stack(3)\n\thttpRequest, _ := httputil.DumpRequest(c.Request, false)\n\theaders := strings.Split(string(httpRequest), \"\\r\\n\")\n\tfor idx, header := range headers {\n\t\tcurrent := strings.Split(header, \":\")\n\t\tif current[0] == \"Authorization\" {\n\t\t\theaders[idx] = current[0] + \": *\"\n\t\t}\n\t}\n\theadersToStr := strings.Join(headers, \"\\r\\n\")\n\tif brokenPipe {\n\t\tlogger.Printf(\"%s\\n%s%s\", err, headersToStr, reset)\n\t} else if IsDebugging() {\n\t\tlogger.Printf(\"[Recovery] %s panic recovered:\\n%s\\n%s\\n%s%s\", timeFormat(time.Now()), headersToStr, err, stack, reset)\n\t} else {\n\t\tlogger.Printf(\"[Recovery] %s panic recovered:\\n%s\\n%s%s\", timeFormat(time.Now()), err, stack, reset)\n\t}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":2153,"list":[{"children":[],"start":2160,"end":2177,"code":"stack := stack(3)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":2160,"end":2165,"code":"stack","nodeType":"Identifier","column":0,"line":0,"namePos":2160,"name":"stack","object":null}],"tokenPos":2166,"token":47,"rhs":[{"children":[],"start":2169,"end":2177,"code":"stack(3)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":2169,"end":2174,"code":"stack","nodeType":"Identifier","column":0,"line":0,"namePos":2169,"name":"stack","object":null},"lparen":0,"args":[{"children":[],"start":2175,"end":2176,"code":"3","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":2175,"kind":5,"value":"3"}],"ellipsis":0,"rparen":0}]},{"children":[],"start":2183,"end":2239,"code":"httpRequest, _ := httputil.DumpRequest(c.Request, false)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":2183,"end":2194,"code":"httpRequest","nodeType":"Identifier","column":0,"line":0,"namePos":2183,"name":"httpRequest","object":null},{"children":[],"start":2196,"end":2197,"code":"_","nodeType":"Identifier","column":0,"line":0,"namePos":2196,"name":"_","object":null}],"tokenPos":2198,"token":47,"rhs":[{"children":[],"start":2201,"end":2239,"code":"httputil.DumpRequest(c.Request, false)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":2201,"end":2221,"code":"httputil.DumpRequest","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":2201,"end":2209,"code":"httputil","nodeType":"Identifier","column":0,"line":0,"namePos":2201,"name":"httputil","object":null},"sel":{"children":[],"start":2210,"end":2221,"code":"DumpRequest","nodeType":"Identifier","column":0,"line":0,"namePos":2210,"name":"DumpRequest","object":null}},"lparen":0,"args":[{"children":[],"start":2222,"end":2231,"code":"c.Request","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":2222,"end":2223,"code":"c","nodeType":"Identifier","column":0,"line":0,"namePos":2222,"name":"c","object":null},"sel":{"children":[],"start":2224,"end":2231,"code":"Request","nodeType":"Identifier","column":0,"line":0,"namePos":2224,"name":"Request","object":null}},{"children":[],"start":2233,"end":2238,"code":"false","nodeType":"Identifier","column":0,"line":0,"namePos":2233,"name":"false","object":null}],"ellipsis":0,"rparen":0}]},{"children":[],"start":2245,"end":2298,"code":"headers := strings.Split(string(httpRequest), \"\\r\\n\")","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":2245,"end":2252,"code":"headers","nodeType":"Identifier","column":0,"line":0,"namePos":2245,"name":"headers","object":null}],"tokenPos":2253,"token":47,"rhs":[{"children":[],"start":2256,"end":2298,"code":"strings.Split(string(httpRequest), \"\\r\\n\")","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":2256,"end":2269,"code":"strings.Split","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":2256,"end":2263,"code":"strings","nodeType":"Identifier","column":0,"line":0,"namePos":2256,"name":"strings","object":null},"sel":{"children":[],"start":2264,"end":2269,"code":"Split","nodeType":"Identifier","column":0,"line":0,"namePos":2264,"name":"Split","object":null}},"lparen":0,"args":[{"children":[],"start":2270,"end":2289,"code":"string(httpRequest)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":2270,"end":2276,"code":"string","nodeType":"Identifier","column":0,"line":0,"namePos":2270,"name":"string","object":null},"lparen":0,"args":[{"children":[],"start":2277,"end":2288,"code":"httpRequest","nodeType":"Identifier","column":0,"line":0,"namePos":2277,"name":"httpRequest","object":null}],"ellipsis":0,"rparen":0},{"children":[],"start":2291,"end":2297,"code":"\"\\r\\n\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":2291,"kind":9,"value":"\"\\r\\n\""}],"ellipsis":0,"rparen":0}]},{"children":[],"start":2304,"end":2479,"code":"for idx, header := range headers {\n\tcurrent := strings.Split(header, \":\")\n\tif current[0] == \"Authorization\" {\n\t\theaders[idx] = current[0] + \": *\"\n\t}\n}","nodeType":"RangeStatement","column":0,"line":0,"for":2304,"key":{"children":[],"start":2308,"end":2311,"code":"idx","nodeType":"Identifier","column":0,"line":0,"namePos":2308,"name":"idx","object":null},"value":{"children":[],"start":2313,"end":2319,"code":"header","nodeType":"Identifier","column":0,"line":0,"namePos":2313,"name":"header","object":null},"tokenPos":2320,"token":47,"range":2323,"expression":{"children":[],"start":2329,"end":2336,"code":"headers","nodeType":"Identifier","column":0,"line":0,"namePos":2329,"name":"headers","object":null},"body":{"children":[],"start":2337,"end":2479,"code":"{\n\tcurrent := strings.Split(header, \":\")\n\tif current[0] == \"Authorization\" {\n\t\theaders[idx] = current[0] + \": *\"\n\t}\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":2337,"list":[{"children":[],"start":2345,"end":2382,"code":"current := strings.Split(header, \":\")","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":2345,"end":2352,"code":"current","nodeType":"Identifier","column":0,"line":0,"namePos":2345,"name":"current","object":null}],"tokenPos":2353,"token":47,"rhs":[{"children":[],"start":2356,"end":2382,"code":"strings.Split(header, \":\")","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":2356,"end":2369,"code":"strings.Split","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":2356,"end":2363,"code":"strings","nodeType":"Identifier","column":0,"line":0,"namePos":2356,"name":"strings","object":null},"sel":{"children":[],"start":2364,"end":2369,"code":"Split","nodeType":"Identifier","column":0,"line":0,"namePos":2364,"name":"Split","object":null}},"lparen":0,"args":[{"children":[],"start":2370,"end":2376,"code":"header","nodeType":"Identifier","column":0,"line":0,"namePos":2370,"name":"header","object":null},{"children":[],"start":2378,"end":2381,"code":"\":\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":2378,"kind":9,"value":"\":\""}],"ellipsis":0,"rparen":0}]},{"children":[],"start":2389,"end":2472,"code":"if current[0] == \"Authorization\" {\n\theaders[idx] = current[0] + \": *\"\n}","nodeType":"IfStatement","column":0,"line":0,"if":2389,"initialization":null,"condition":{"children":[],"start":2392,"end":2421,"code":"current[0] == \"Authorization\"","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":2392,"end":2402,"code":"current[0]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":2392,"end":2399,"code":"current","nodeType":"Identifier","column":0,"line":0,"namePos":2392,"name":"current","object":null},"leftBracket":2399,"index":{"children":[],"start":2400,"end":2401,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":2400,"kind":5,"value":"0"},"rightBracket":2401},"opPos":2403,"op":39,"rightExpression":{"children":[],"start":2406,"end":2421,"code":"\"Authorization\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":2406,"kind":9,"value":"\"Authorization\""}},"body":{"children":[],"start":2422,"end":2472,"code":"{\n\theaders[idx] = current[0] + \": *\"\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":2422,"list":[{"children":[],"start":2431,"end":2464,"code":"headers[idx] = current[0] + \": *\"","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":2431,"end":2443,"code":"headers[idx]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":2431,"end":2438,"code":"headers","nodeType":"Identifier","column":0,"line":0,"namePos":2431,"name":"headers","object":null},"leftBracket":2438,"index":{"children":[],"start":2439,"end":2442,"code":"idx","nodeType":"Identifier","column":0,"line":0,"namePos":2439,"name":"idx","object":null},"rightBracket":2442}],"tokenPos":2444,"token":42,"rhs":[{"children":[],"start":2446,"end":2464,"code":"current[0] + \": *\"","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":2446,"end":2456,"code":"current[0]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":2446,"end":2453,"code":"current","nodeType":"Identifier","column":0,"line":0,"namePos":2446,"name":"current","object":null},"leftBracket":2453,"index":{"children":[],"start":2454,"end":2455,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":2454,"kind":5,"value":"0"},"rightBracket":2455},"opPos":2457,"op":12,"rightExpression":{"children":[],"start":2459,"end":2464,"code":"\": *\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":2459,"kind":9,"value":"\": *\""}}]}],"rbrace":2471},"else":null}],"rbrace":2478}},{"children":[],"start":2485,"end":2530,"code":"headersToStr := strings.Join(headers, \"\\r\\n\")","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":2485,"end":2497,"code":"headersToStr","nodeType":"Identifier","column":0,"line":0,"namePos":2485,"name":"headersToStr","object":null}],"tokenPos":2498,"token":47,"rhs":[{"children":[],"start":2501,"end":2530,"code":"strings.Join(headers, \"\\r\\n\")","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":2501,"end":2513,"code":"strings.Join","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":2501,"end":2508,"code":"strings","nodeType":"Identifier","column":0,"line":0,"namePos":2501,"name":"strings","object":null},"sel":{"children":[],"start":2509,"end":2513,"code":"Join","nodeType":"Identifier","column":0,"line":0,"namePos":2509,"name":"Join","object":null}},"lparen":0,"args":[{"children":[],"start":2514,"end":2521,"code":"headers","nodeType":"Identifier","column":0,"line":0,"namePos":2514,"name":"headers","object":null},{"children":[],"start":2523,"end":2529,"code":"\"\\r\\n\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":2523,"kind":9,"value":"\"\\r\\n\""}],"ellipsis":0,"rparen":0}]},{"children":[],"start":2536,"end":2907,"code":"if brokenPipe {\n\tlogger.Printf(\"%s\\n%s%s\", err, headersToStr, reset)\n} else if IsDebugging() {\n\tlogger.Printf(\"[Recovery] %s panic recovered:\\n%s\\n%s\\n%s%s\", timeFormat(time.Now()), headersToStr, err, stack, reset)\n} else {\n\tlogger.Printf(\"[Recovery] %s panic recovered:\\n%s\\n%s%s\", timeFormat(time.Now()), err, stack, reset)\n}","nodeType":"IfStatement","column":0,"line":0,"if":2536,"initialization":null,"condition":{"children":[],"start":2539,"end":2549,"code":"brokenPipe","nodeType":"Identifier","column":0,"line":0,"namePos":2539,"name":"brokenPipe","object":null},"body":{"children":[],"start":2550,"end":2616,"code":"{\n\tlogger.Printf(\"%s\\n%s%s\", err, headersToStr, reset)\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":2550,"list":[{"children":[],"start":2558,"end":2609,"code":"logger.Printf(\"%s\\n%s%s\", err, headersToStr, reset)","nodeType":"ExpressionStatement","column":0,"line":0,"Expression":{"children":[],"start":2558,"end":2609,"code":"logger.Printf(\"%s\\n%s%s\", err, headersToStr, reset)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":2558,"end":2571,"code":"logger.Printf","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":2558,"end":2564,"code":"logger","nodeType":"Identifier","column":0,"line":0,"namePos":2558,"name":"logger","object":null},"sel":{"children":[],"start":2565,"end":2571,"code":"Printf","nodeType":"Identifier","column":0,"line":0,"namePos":2565,"name":"Printf","object":null}},"lparen":0,"args":[{"children":[],"start":2572,"end":2582,"code":"\"%s\\n%s%s\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":2572,"kind":9,"value":"\"%s\\n%s%s\""},{"children":[],"start":2584,"end":2587,"code":"err","nodeType":"Identifier","column":0,"line":0,"namePos":2584,"name":"err","object":null},{"children":[],"start":2589,"end":2601,"code":"headersToStr","nodeType":"Identifier","column":0,"line":0,"namePos":2589,"name":"headersToStr","object":null},{"children":[],"start":2603,"end":2608,"code":"reset","nodeType":"Identifier","column":0,"line":0,"namePos":2603,"name":"reset","object":null}],"ellipsis":0,"rparen":0}}],"rbrace":2615},"else":{"children":[],"start":2622,"end":2907,"code":"if IsDebugging() {\n\tlogger.Printf(\"[Recovery] %s panic recovered:\\n%s\\n%s\\n%s%s\", timeFormat(time.Now()), headersToStr, err, stack, reset)\n} else {\n\tlogger.Printf(\"[Recovery] %s panic recovered:\\n%s\\n%s%s\", timeFormat(time.Now()), err, stack, reset)\n}","nodeType":"IfStatement","column":0,"line":0,"if":2622,"initialization":null,"condition":{"children":[],"start":2625,"end":2638,"code":"IsDebugging()","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":2625,"end":2636,"code":"IsDebugging","nodeType":"Identifier","column":0,"line":0,"namePos":2625,"name":"IsDebugging","object":null},"lparen":0,"args":[],"ellipsis":0,"rparen":0},"body":{"children":[],"start":2639,"end":2779,"code":"{\n\tlogger.Printf(\"[Recovery] %s panic recovered:\\n%s\\n%s\\n%s%s\", timeFormat(time.Now()), headersToStr, err, stack, reset)\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":2639,"list":[{"children":[],"start":2647,"end":2772,"code":"logger.Printf(\"[Recovery] %s panic recovered:\\n%s\\n%s\\n%s%s\", timeFormat(time.Now()), headersToStr, err, stack, reset)","nodeType":"ExpressionStatement","column":0,"line":0,"Expression":{"children":[],"start":2647,"end":2772,"code":"logger.Printf(\"[Recovery] %s panic recovered:\\n%s\\n%s\\n%s%s\", timeFormat(time.Now()), headersToStr, err, stack, reset)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":2647,"end":2660,"code":"logger.Printf","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":2647,"end":2653,"code":"logger","nodeType":"Identifier","column":0,"line":0,"namePos":2647,"name":"logger","object":null},"sel":{"children":[],"start":2654,"end":2660,"code":"Printf","nodeType":"Identifier","column":0,"line":0,"namePos":2654,"name":"Printf","object":null}},"lparen":0,"args":[{"children":[],"start":2661,"end":2707,"code":"\"[Recovery] %s panic recovered:\\n%s\\n%s\\n%s%s\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":2661,"kind":9,"value":"\"[Recovery] %s panic recovered:\\n%s\\n%s\\n%s%s\""},{"children":[],"start":2716,"end":2738,"code":"timeFormat(time.Now())","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":2716,"end":2726,"code":"timeFormat","nodeType":"Identifier","column":0,"line":0,"namePos":2716,"name":"timeFormat","object":null},"lparen":0,"args":[{"children":[],"start":2727,"end":2737,"code":"time.Now()","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":2727,"end":2735,"code":"time.Now","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":2727,"end":2731,"code":"time","nodeType":"Identifier","column":0,"line":0,"namePos":2727,"name":"time","object":null},"sel":{"children":[],"start":2732,"end":2735,"code":"Now","nodeType":"Identifier","column":0,"line":0,"namePos":2732,"name":"Now","object":null}},"lparen":0,"args":[],"ellipsis":0,"rparen":0}],"ellipsis":0,"rparen":0},{"children":[],"start":2740,"end":2752,"code":"headersToStr","nodeType":"Identifier","column":0,"line":0,"namePos":2740,"name":"headersToStr","object":null},{"children":[],"start":2754,"end":2757,"code":"err","nodeType":"Identifier","column":0,"line":0,"namePos":2754,"name":"err","object":null},{"children":[],"start":2759,"end":2764,"code":"stack","nodeType":"Identifier","column":0,"line":0,"namePos":2759,"name":"stack","object":null},{"children":[],"start":2766,"end":2771,"code":"reset","nodeType":"Identifier","column":0,"line":0,"namePos":2766,"name":"reset","object":null}],"ellipsis":0,"rparen":0}}],"rbrace":2778},"else":{"children":[],"start":2785,"end":2907,"code":"{\n\tlogger.Printf(\"[Recovery] %s panic recovered:\\n%s\\n%s%s\", timeFormat(time.Now()), err, stack, reset)\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":2785,"list":[{"children":[],"start":2793,"end":2900,"code":"logger.Printf(\"[Recovery] %s panic recovered:\\n%s\\n%s%s\", timeFormat(time.Now()), err, stack, reset)","nodeType":"ExpressionStatement","column":0,"line":0,"Expression":{"children":[],"start":2793,"end":2900,"code":"logger.Printf(\"[Recovery] %s panic recovered:\\n%s\\n%s%s\", timeFormat(time.Now()), err, stack, reset)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":2793,"end":2806,"code":"logger.Printf","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":2793,"end":2799,"code":"logger","nodeType":"Identifier","column":0,"line":0,"namePos":2793,"name":"logger","object":null},"sel":{"children":[],"start":2800,"end":2806,"code":"Printf","nodeType":"Identifier","column":0,"line":0,"namePos":2800,"name":"Printf","object":null}},"lparen":0,"args":[{"children":[],"start":2807,"end":2849,"code":"\"[Recovery] %s panic recovered:\\n%s\\n%s%s\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":2807,"kind":9,"value":"\"[Recovery] %s panic recovered:\\n%s\\n%s%s\""},{"children":[],"start":2858,"end":2880,"code":"timeFormat(time.Now())","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":2858,"end":2868,"code":"timeFormat","nodeType":"Identifier","column":0,"line":0,"namePos":2858,"name":"timeFormat","object":null},"lparen":0,"args":[{"children":[],"start":2869,"end":2879,"code":"time.Now()","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":2869,"end":2877,"code":"time.Now","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":2869,"end":2873,"code":"time","nodeType":"Identifier","column":0,"line":0,"namePos":2869,"name":"time","object":null},"sel":{"children":[],"start":2874,"end":2877,"code":"Now","nodeType":"Identifier","column":0,"line":0,"namePos":2874,"name":"Now","object":null}},"lparen":0,"args":[],"ellipsis":0,"rparen":0}],"ellipsis":0,"rparen":0},{"children":[],"start":2882,"end":2885,"code":"err","nodeType":"Identifier","column":0,"line":0,"namePos":2882,"name":"err","object":null},{"children":[],"start":2887,"end":2892,"code":"stack","nodeType":"Identifier","column":0,"line":0,"namePos":2887,"name":"stack","object":null},{"children":[],"start":2894,"end":2899,"code":"reset","nodeType":"Identifier","column":0,"line":0,"namePos":2894,"name":"reset","object":null}],"ellipsis":0,"rparen":0}}],"rbrace":2906}}}],"rbrace":2912},"else":null},{"children":[],"start":2918,"end":3098,"code":"if brokenPipe {\n\tc.Error(err.(error))\n\tc.Abort()\n} else {\n\thandle(c, err)\n}","nodeType":"IfStatement","column":0,"line":0,"if":2918,"initialization":null,"condition":{"children":[],"start":2921,"end":2931,"code":"brokenPipe","nodeType":"Identifier","column":0,"line":0,"namePos":2921,"name":"brokenPipe","object":null},"body":{"children":[],"start":2932,"end":3065,"code":"{\n\tc.Error(err.(error))\n\tc.Abort()\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":2932,"list":[{"children":[],"start":3005,"end":3025,"code":"c.Error(err.(error))","nodeType":"ExpressionStatement","column":0,"line":0,"Expression":{"children":[],"start":3005,"end":3025,"code":"c.Error(err.(error))","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":3005,"end":3012,"code":"c.Error","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":3005,"end":3006,"code":"c","nodeType":"Identifier","column":0,"line":0,"namePos":3005,"name":"c","object":null},"sel":{"children":[],"start":3007,"end":3012,"code":"Error","nodeType":"Identifier","column":0,"line":0,"namePos":3007,"name":"Error","object":null}},"lparen":0,"args":[{"children":[],"start":3013,"end":3024,"code":"err.(error)","nodeType":"TypeAssertExpression","column":0,"line":0,"expression":{"children":[],"start":3013,"end":3016,"code":"err","nodeType":"Identifier","column":0,"line":0,"namePos":3013,"name":"err","object":null},"lparen":3017,"type":{"children":[],"start":3018,"end":3023,"code":"error","nodeType":"Identifier","column":0,"line":0,"namePos":3018,"name":"error","object":null},"rparen":3023}],"ellipsis":0,"rparen":0}},{"children":[],"start":3050,"end":3059,"code":"c.Abort()","nodeType":"ExpressionStatement","column":0,"line":0,"Expression":{"children":[],"start":3050,"end":3059,"code":"c.Abort()","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":3050,"end":3057,"code":"c.Abort","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":3050,"end":3051,"code":"c","nodeType":"Identifier","column":0,"line":0,"namePos":3050,"name":"c","object":null},"sel":{"children":[],"start":3052,"end":3057,"code":"Abort","nodeType":"Identifier","column":0,"line":0,"namePos":3052,"name":"Abort","object":null}},"lparen":0,"args":[],"ellipsis":0,"rparen":0}}],"rbrace":3064},"else":{"children":[],"start":3071,"end":3098,"code":"{\n\thandle(c, err)\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":3071,"list":[{"children":[],"start":3078,"end":3092,"code":"handle(c, err)","nodeType":"ExpressionStatement","column":0,"line":0,"Expression":{"children":[],"start":3078,"end":3092,"code":"handle(c, err)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":3078,"end":3084,"code":"handle","nodeType":"Identifier","column":0,"line":0,"namePos":3078,"name":"handle","object":null},"lparen":0,"args":[{"children":[],"start":3085,"end":3086,"code":"c","nodeType":"Identifier","column":0,"line":0,"namePos":3085,"name":"c","object":null},{"children":[],"start":3088,"end":3091,"code":"err","nodeType":"Identifier","column":0,"line":0,"namePos":3088,"name":"err","object":null}],"ellipsis":0,"rparen":0}}],"rbrace":3097}}],"rbrace":3102},"else":null}],"rbrace":3106}},"lparen":0,"args":[],"ellipsis":0,"rparen":0}},{"children":[],"start":3112,"end":3120,"code":"c.Next()","nodeType":"ExpressionStatement","column":0,"line":0,"Expression":{"children":[],"start":3112,"end":3120,"code":"c.Next()","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":3112,"end":3118,"code":"c.Next","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":3112,"end":3113,"code":"c","nodeType":"Identifier","column":0,"line":0,"namePos":3112,"name":"c","object":null},"sel":{"children":[],"start":3114,"end":3118,"code":"Next","nodeType":"Identifier","column":0,"line":0,"namePos":3114,"name":"Next","object":null}},"lparen":0,"args":[],"ellipsis":0,"rparen":0}}],"rbrace":3122}}]}],"rbrace":3124}},{"children":[],"start":3127,"end":3227,"code":"func defaultHandleRecovery(c *Context, _ any) {\n\tc.AbortWithStatus(http.StatusInternalServerError)\n}","nodeType":"FunctionDeclaration","column":0,"line":0,"doc":null,"receiver":null,"name":{"children":[],"start":3132,"end":3153,"code":"defaultHandleRecovery","nodeType":"Identifier","column":0,"line":0,"namePos":3132,"name":"defaultHandleRecovery","object":null},"type":{"children":[],"start":3127,"end":3172,"code":"func(c *Context, _ any)","nodeType":"FunctionType","column":0,"line":0,"Function":3127,"TypeParams":null,"Params":{"children":[],"start":3153,"end":3172,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":3153,"list":[{"children":[],"start":3154,"end":3164,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":3154,"end":3155,"code":"c","nodeType":"Identifier","column":0,"line":0,"namePos":3154,"name":"c","object":null}],"type":{"children":[],"start":3156,"end":3164,"code":"*Context","nodeType":"StarExpression","column":0,"line":0,"star":3156,"expression":{"children":[],"start":3157,"end":3164,"code":"Context","nodeType":"Identifier","column":0,"line":0,"namePos":3157,"name":"Context","object":null}},"tag":null,"comment":null},{"children":[],"start":3166,"end":3171,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":3166,"end":3167,"code":"_","nodeType":"Identifier","column":0,"line":0,"namePos":3166,"name":"_","object":null}],"type":{"children":[],"start":3168,"end":3171,"code":"any","nodeType":"Identifier","column":0,"line":0,"namePos":3168,"name":"any","object":null},"tag":null,"comment":null}],"closing":3171},"Results":null},"body":{"children":[],"start":3173,"end":3227,"code":"{\n\tc.AbortWithStatus(http.StatusInternalServerError)\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":3173,"list":[{"children":[],"start":3176,"end":3225,"code":"c.AbortWithStatus(http.StatusInternalServerError)","nodeType":"ExpressionStatement","column":0,"line":0,"Expression":{"children":[],"start":3176,"end":3225,"code":"c.AbortWithStatus(http.StatusInternalServerError)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":3176,"end":3193,"code":"c.AbortWithStatus","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":3176,"end":3177,"code":"c","nodeType":"Identifier","column":0,"line":0,"namePos":3176,"name":"c","object":null},"sel":{"children":[],"start":3178,"end":3193,"code":"AbortWithStatus","nodeType":"Identifier","column":0,"line":0,"namePos":3178,"name":"AbortWithStatus","object":null}},"lparen":0,"args":[{"children":[],"start":3194,"end":3224,"code":"http.StatusInternalServerError","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":3194,"end":3198,"code":"http","nodeType":"Identifier","column":0,"line":0,"namePos":3194,"name":"http","object":null},"sel":{"children":[],"start":3199,"end":3224,"code":"StatusInternalServerError","nodeType":"Identifier","column":0,"line":0,"namePos":3199,"name":"StatusInternalServerError","object":null}}],"ellipsis":0,"rparen":0}}],"rbrace":3226}},{"children":[],"start":3300,"end":4027,"code":"func stack(skip int) []byte {\n\tbuf := new(bytes.Buffer)\n\tvar lines [][]byte\n\tvar lastFile string\n\tfor i := skip; ; i++ {\n\t\tpc, file, line, ok := runtime.Caller(i)\n\t\tif !ok {\n\t\t\tbreak\n\t\t}\n\t\tfmt.Fprintf(buf, \"%s:%d (0x%x)\\n\", file, line, pc)\n\t\tif file != lastFile {\n\t\t\tdata, err := os.ReadFile(file)\n\t\t\tif err != nil {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tlines = bytes.Split(data, []byte{'\\n'})\n\t\t\tlastFile = file\n\t\t}\n\t\tfmt.Fprintf(buf, \"\\t%s: %s\\n\", function(pc), source(lines, line))\n\t}\n\treturn buf.Bytes()\n}","nodeType":"FunctionDeclaration","column":0,"line":0,"doc":null,"receiver":null,"name":{"children":[],"start":3305,"end":3310,"code":"stack","nodeType":"Identifier","column":0,"line":0,"namePos":3305,"name":"stack","object":null},"type":{"children":[],"start":3300,"end":3327,"code":"func(skip int) []byte","nodeType":"FunctionType","column":0,"line":0,"Function":3300,"TypeParams":null,"Params":{"children":[],"start":3310,"end":3320,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":3310,"list":[{"children":[],"start":3311,"end":3319,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":3311,"end":3315,"code":"skip","nodeType":"Identifier","column":0,"line":0,"namePos":3311,"name":"skip","object":null}],"type":{"children":[],"start":3316,"end":3319,"code":"int","nodeType":"Identifier","column":0,"line":0,"namePos":3316,"name":"int","object":null},"tag":null,"comment":null}],"closing":3319},"Results":{"children":[],"start":3321,"end":3327,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":0,"list":[{"children":[],"start":3321,"end":3327,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":null,"type":{"children":[],"start":3321,"end":3327,"code":"[]byte","nodeType":"ArrayType","column":0,"line":0,"leftBracket":3321,"length":null,"element":{"children":[],"start":3323,"end":3327,"code":"byte","nodeType":"Identifier","column":0,"line":0,"namePos":3323,"name":"byte","object":null}},"tag":null,"comment":null}],"closing":0}},"body":{"children":[],"start":3328,"end":4027,"code":"{\n\tbuf := new(bytes.Buffer)\n\tvar lines [][]byte\n\tvar lastFile string\n\tfor i := skip; ; i++ {\n\t\tpc, file, line, ok := runtime.Caller(i)\n\t\tif !ok {\n\t\t\tbreak\n\t\t}\n\t\tfmt.Fprintf(buf, \"%s:%d (0x%x)\\n\", file, line, pc)\n\t\tif file != lastFile {\n\t\t\tdata, err := os.ReadFile(file)\n\t\t\tif err != nil {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tlines = bytes.Split(data, []byte{'\\n'})\n\t\t\tlastFile = file\n\t\t}\n\t\tfmt.Fprintf(buf, \"\\t%s: %s\\n\", function(pc), source(lines, line))\n\t}\n\treturn buf.Bytes()\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":3328,"list":[{"children":[],"start":3331,"end":3355,"code":"buf := new(bytes.Buffer)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":3331,"end":3334,"code":"buf","nodeType":"Identifier","column":0,"line":0,"namePos":3331,"name":"buf","object":null}],"tokenPos":3335,"token":47,"rhs":[{"children":[],"start":3338,"end":3355,"code":"new(bytes.Buffer)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":3338,"end":3341,"code":"new","nodeType":"Identifier","column":0,"line":0,"namePos":3338,"name":"new","object":null},"lparen":0,"args":[{"children":[],"start":3342,"end":3354,"code":"bytes.Buffer","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":3342,"end":3347,"code":"bytes","nodeType":"Identifier","column":0,"line":0,"namePos":3342,"name":"bytes","object":null},"sel":{"children":[],"start":3348,"end":3354,"code":"Buffer","nodeType":"Identifier","column":0,"line":0,"namePos":3348,"name":"Buffer","object":null}}],"ellipsis":0,"rparen":0}]},{"children":[],"start":3477,"end":3495,"code":"var lines [][]byte","nodeType":"DeclarationStatement","column":0,"line":0,"declaration":{"children":[],"start":3477,"end":3495,"code":"var lines [][]byte","nodeType":"GenericDeclaration","column":0,"line":0,"doc":null,"tokenPosition":3477,"token":85,"lparen":0,"specifications":[{"children":[],"start":3481,"end":3495,"code":"lines [][]byte","nodeType":"ValueSpecification","column":0,"line":0,"doc":null,"names":[{"children":[],"start":3481,"end":3486,"code":"lines","nodeType":"Identifier","column":0,"line":0,"namePos":3481,"name":"lines","object":null}],"type":{"children":[],"start":3487,"end":3495,"code":"[][]byte","nodeType":"ArrayType","column":0,"line":0,"leftBracket":3487,"length":null,"element":{"children":[],"start":3489,"end":3495,"code":"[]byte","nodeType":"ArrayType","column":0,"line":0,"leftBracket":3489,"length":null,"element":{"children":[],"start":3491,"end":3495,"code":"byte","nodeType":"Identifier","column":0,"line":0,"namePos":3491,"name":"byte","object":null}}},"values":[],"comment":null}],"rparen":0}},{"children":[],"start":3497,"end":3516,"code":"var lastFile string","nodeType":"DeclarationStatement","column":0,"line":0,"declaration":{"children":[],"start":3497,"end":3516,"code":"var lastFile string","nodeType":"GenericDeclaration","column":0,"line":0,"doc":null,"tokenPosition":3497,"token":85,"lparen":0,"specifications":[{"children":[],"start":3501,"end":3516,"code":"lastFile string","nodeType":"ValueSpecification","column":0,"line":0,"doc":null,"names":[{"children":[],"start":3501,"end":3509,"code":"lastFile","nodeType":"Identifier","column":0,"line":0,"namePos":3501,"name":"lastFile","object":null}],"type":{"children":[],"start":3510,"end":3516,"code":"string","nodeType":"Identifier","column":0,"line":0,"namePos":3510,"name":"string","object":null},"values":[],"comment":null}],"rparen":0}},{"children":[],"start":3518,"end":4005,"code":"for i := skip; ; i++ {\n\tpc, file, line, ok := runtime.Caller(i)\n\tif !ok {\n\t\tbreak\n\t}\n\tfmt.Fprintf(buf, \"%s:%d (0x%x)\\n\", file, line, pc)\n\tif file != lastFile {\n\t\tdata, err := os.ReadFile(file)\n\t\tif err != nil {\n\t\t\tcontinue\n\t\t}\n\t\tlines = bytes.Split(data, []byte{'\\n'})\n\t\tlastFile = file\n\t}\n\tfmt.Fprintf(buf, \"\\t%s: %s\\n\", function(pc), source(lines, line))\n}","nodeType":"ForStatement","column":0,"line":0,"for":3518,"initialization":{"children":[],"start":3522,"end":3531,"code":"i := skip","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":3522,"end":3523,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":3522,"name":"i","object":null}],"tokenPos":3524,"token":47,"rhs":[{"children":[],"start":3527,"end":3531,"code":"skip","nodeType":"Identifier","column":0,"line":0,"namePos":3527,"name":"skip","object":null}]},"condition":null,"post":{"children":[],"start":3535,"end":3538,"code":"i++","nodeType":"IncrementDecrementStatement","column":0,"line":0,"Expression":{"children":[],"start":3535,"end":3536,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":3535,"name":"i","object":null},"TokenPosition":3536,"Token":37},"body":{"children":[],"start":3539,"end":4005,"code":"{\n\tpc, file, line, ok := runtime.Caller(i)\n\tif !ok {\n\t\tbreak\n\t}\n\tfmt.Fprintf(buf, \"%s:%d (0x%x)\\n\", file, line, pc)\n\tif file != lastFile {\n\t\tdata, err := os.ReadFile(file)\n\t\tif err != nil {\n\t\t\tcontinue\n\t\t}\n\t\tlines = bytes.Split(data, []byte{'\\n'})\n\t\tlastFile = file\n\t}\n\tfmt.Fprintf(buf, \"\\t%s: %s\\n\", function(pc), source(lines, line))\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":3539,"list":[{"children":[],"start":3581,"end":3620,"code":"pc, file, line, ok := runtime.Caller(i)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":3581,"end":3583,"code":"pc","nodeType":"Identifier","column":0,"line":0,"namePos":3581,"name":"pc","object":null},{"children":[],"start":3585,"end":3589,"code":"file","nodeType":"Identifier","column":0,"line":0,"namePos":3585,"name":"file","object":null},{"children":[],"start":3591,"end":3595,"code":"line","nodeType":"Identifier","column":0,"line":0,"namePos":3591,"name":"line","object":null},{"children":[],"start":3597,"end":3599,"code":"ok","nodeType":"Identifier","column":0,"line":0,"namePos":3597,"name":"ok","object":null}],"tokenPos":3600,"token":47,"rhs":[{"children":[],"start":3603,"end":3620,"code":"runtime.Caller(i)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":3603,"end":3617,"code":"runtime.Caller","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":3603,"end":3610,"code":"runtime","nodeType":"Identifier","column":0,"line":0,"namePos":3603,"name":"runtime","object":null},"sel":{"children":[],"start":3611,"end":3617,"code":"Caller","nodeType":"Identifier","column":0,"line":0,"namePos":3611,"name":"Caller","object":null}},"lparen":0,"args":[{"children":[],"start":3618,"end":3619,"code":"i","nodeType":"Identifier","column":0,"line":0,"namePos":3618,"name":"i","object":null}],"ellipsis":0,"rparen":0}]},{"children":[],"start":3623,"end":3644,"code":"if !ok {\n\tbreak\n}","nodeType":"IfStatement","column":0,"line":0,"if":3623,"initialization":null,"condition":{"children":[],"start":3626,"end":3629,"code":"!ok","nodeType":"UnaryExpression","column":0,"line":0,"opPos":3626,"op":43,"expression":{"children":[],"start":3627,"end":3629,"code":"ok","nodeType":"Identifier","column":0,"line":0,"namePos":3627,"name":"ok","object":null}},"body":{"children":[],"start":3630,"end":3644,"code":"{\n\tbreak\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":3630,"list":[{"children":[],"start":3635,"end":3640,"code":"break","nodeType":"BranchStatement","column":0,"line":0,"tokenPosition":3635,"token":61,"label":null}],"rbrace":3643},"else":null},{"children":[],"start":3723,"end":3773,"code":"fmt.Fprintf(buf, \"%s:%d (0x%x)\\n\", file, line, pc)","nodeType":"ExpressionStatement","column":0,"line":0,"Expression":{"children":[],"start":3723,"end":3773,"code":"fmt.Fprintf(buf, \"%s:%d (0x%x)\\n\", file, line, pc)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":3723,"end":3734,"code":"fmt.Fprintf","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":3723,"end":3726,"code":"fmt","nodeType":"Identifier","column":0,"line":0,"namePos":3723,"name":"fmt","object":null},"sel":{"children":[],"start":3727,"end":3734,"code":"Fprintf","nodeType":"Identifier","column":0,"line":0,"namePos":3727,"name":"Fprintf","object":null}},"lparen":0,"args":[{"children":[],"start":3735,"end":3738,"code":"buf","nodeType":"Identifier","column":0,"line":0,"namePos":3735,"name":"buf","object":null},{"children":[],"start":3740,"end":3756,"code":"\"%s:%d (0x%x)\\n\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":3740,"kind":9,"value":"\"%s:%d (0x%x)\\n\""},{"children":[],"start":3758,"end":3762,"code":"file","nodeType":"Identifier","column":0,"line":0,"namePos":3758,"name":"file","object":null},{"children":[],"start":3764,"end":3768,"code":"line","nodeType":"Identifier","column":0,"line":0,"namePos":3764,"name":"line","object":null},{"children":[],"start":3770,"end":3772,"code":"pc","nodeType":"Identifier","column":0,"line":0,"namePos":3770,"name":"pc","object":null}],"ellipsis":0,"rparen":0}},{"children":[],"start":3776,"end":3934,"code":"if file != lastFile {\n\tdata, err := os.ReadFile(file)\n\tif err != nil {\n\t\tcontinue\n\t}\n\tlines = bytes.Split(data, []byte{'\\n'})\n\tlastFile = file\n}","nodeType":"IfStatement","column":0,"line":0,"if":3776,"initialization":null,"condition":{"children":[],"start":3779,"end":3795,"code":"file != lastFile","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":3779,"end":3783,"code":"file","nodeType":"Identifier","column":0,"line":0,"namePos":3779,"name":"file","object":null},"opPos":3784,"op":44,"rightExpression":{"children":[],"start":3787,"end":3795,"code":"lastFile","nodeType":"Identifier","column":0,"line":0,"namePos":3787,"name":"lastFile","object":null}},"body":{"children":[],"start":3796,"end":3934,"code":"{\n\tdata, err := os.ReadFile(file)\n\tif err != nil {\n\t\tcontinue\n\t}\n\tlines = bytes.Split(data, []byte{'\\n'})\n\tlastFile = file\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":3796,"list":[{"children":[],"start":3801,"end":3831,"code":"data, err := os.ReadFile(file)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":3801,"end":3805,"code":"data","nodeType":"Identifier","column":0,"line":0,"namePos":3801,"name":"data","object":null},{"children":[],"start":3807,"end":3810,"code":"err","nodeType":"Identifier","column":0,"line":0,"namePos":3807,"name":"err","object":null}],"tokenPos":3811,"token":47,"rhs":[{"children":[],"start":3814,"end":3831,"code":"os.ReadFile(file)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":3814,"end":3825,"code":"os.ReadFile","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":3814,"end":3816,"code":"os","nodeType":"Identifier","column":0,"line":0,"namePos":3814,"name":"os","object":null},"sel":{"children":[],"start":3817,"end":3825,"code":"ReadFile","nodeType":"Identifier","column":0,"line":0,"namePos":3817,"name":"ReadFile","object":null}},"lparen":0,"args":[{"children":[],"start":3826,"end":3830,"code":"file","nodeType":"Identifier","column":0,"line":0,"namePos":3826,"name":"file","object":null}],"ellipsis":0,"rparen":0}]},{"children":[],"start":3835,"end":3868,"code":"if err != nil {\n\tcontinue\n}","nodeType":"IfStatement","column":0,"line":0,"if":3835,"initialization":null,"condition":{"children":[],"start":3838,"end":3848,"code":"err != nil","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":3838,"end":3841,"code":"err","nodeType":"Identifier","column":0,"line":0,"namePos":3838,"name":"err","object":null},"opPos":3842,"op":44,"rightExpression":{"children":[],"start":3845,"end":3848,"code":"nil","nodeType":"Identifier","column":0,"line":0,"namePos":3845,"name":"nil","object":null}},"body":{"children":[],"start":3849,"end":3868,"code":"{\n\tcontinue\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":3849,"list":[{"children":[],"start":3855,"end":3863,"code":"continue","nodeType":"BranchStatement","column":0,"line":0,"tokenPosition":3855,"token":65,"label":null}],"rbrace":3867},"else":null},{"children":[],"start":3872,"end":3911,"code":"lines = bytes.Split(data, []byte{'\\n'})","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":3872,"end":3877,"code":"lines","nodeType":"Identifier","column":0,"line":0,"namePos":3872,"name":"lines","object":null}],"tokenPos":3878,"token":42,"rhs":[{"children":[],"start":3880,"end":3911,"code":"bytes.Split(data, []byte{'\\n'})","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":3880,"end":3891,"code":"bytes.Split","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":3880,"end":3885,"code":"bytes","nodeType":"Identifier","column":0,"line":0,"namePos":3880,"name":"bytes","object":null},"sel":{"children":[],"start":3886,"end":3891,"code":"Split","nodeType":"Identifier","column":0,"line":0,"namePos":3886,"name":"Split","object":null}},"lparen":0,"args":[{"children":[],"start":3892,"end":3896,"code":"data","nodeType":"Identifier","column":0,"line":0,"namePos":3892,"name":"data","object":null},{"children":[],"start":3898,"end":3910,"code":"[]byte{'\\n'}","nodeType":"CompositeLiteral","column":0,"line":0,"type":{"children":[],"start":3898,"end":3904,"code":"[]byte","nodeType":"ArrayType","column":0,"line":0,"leftBracket":3898,"length":null,"element":{"children":[],"start":3900,"end":3904,"code":"byte","nodeType":"Identifier","column":0,"line":0,"namePos":3900,"name":"byte","object":null}},"lbrace":3904,"elements":[{"children":[],"start":3905,"end":3909,"code":"'\\n'","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":3905,"kind":8,"value":"'\\n'"}],"rbrace":3909,"incomplete":false}],"ellipsis":0,"rparen":0}]},{"children":[],"start":3915,"end":3930,"code":"lastFile = file","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":3915,"end":3923,"code":"lastFile","nodeType":"Identifier","column":0,"line":0,"namePos":3915,"name":"lastFile","object":null}],"tokenPos":3924,"token":42,"rhs":[{"children":[],"start":3926,"end":3930,"code":"file","nodeType":"Identifier","column":0,"line":0,"namePos":3926,"name":"file","object":null}]}],"rbrace":3933},"else":null},{"children":[],"start":3937,"end":4002,"code":"fmt.Fprintf(buf, \"\\t%s: %s\\n\", function(pc), source(lines, line))","nodeType":"ExpressionStatement","column":0,"line":0,"Expression":{"children":[],"start":3937,"end":4002,"code":"fmt.Fprintf(buf, \"\\t%s: %s\\n\", function(pc), source(lines, line))","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":3937,"end":3948,"code":"fmt.Fprintf","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":3937,"end":3940,"code":"fmt","nodeType":"Identifier","column":0,"line":0,"namePos":3937,"name":"fmt","object":null},"sel":{"children":[],"start":3941,"end":3948,"code":"Fprintf","nodeType":"Identifier","column":0,"line":0,"namePos":3941,"name":"Fprintf","object":null}},"lparen":0,"args":[{"children":[],"start":3949,"end":3952,"code":"buf","nodeType":"Identifier","column":0,"line":0,"namePos":3949,"name":"buf","object":null},{"children":[],"start":3954,"end":3966,"code":"\"\\t%s: %s\\n\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":3954,"kind":9,"value":"\"\\t%s: %s\\n\""},{"children":[],"start":3968,"end":3980,"code":"function(pc)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":3968,"end":3976,"code":"function","nodeType":"Identifier","column":0,"line":0,"namePos":3968,"name":"function","object":null},"lparen":0,"args":[{"children":[],"start":3977,"end":3979,"code":"pc","nodeType":"Identifier","column":0,"line":0,"namePos":3977,"name":"pc","object":null}],"ellipsis":0,"rparen":0},{"children":[],"start":3982,"end":4001,"code":"source(lines, line)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":3982,"end":3988,"code":"source","nodeType":"Identifier","column":0,"line":0,"namePos":3982,"name":"source","object":null},"lparen":0,"args":[{"children":[],"start":3989,"end":3994,"code":"lines","nodeType":"Identifier","column":0,"line":0,"namePos":3989,"name":"lines","object":null},{"children":[],"start":3996,"end":4000,"code":"line","nodeType":"Identifier","column":0,"line":0,"namePos":3996,"name":"line","object":null}],"ellipsis":0,"rparen":0}],"ellipsis":0,"rparen":0}}],"rbrace":4004}},{"children":[],"start":4007,"end":4025,"code":"return buf.Bytes()","nodeType":"ReturnStatement","column":0,"line":0,"return":4007,"results":[{"children":[],"start":4014,"end":4025,"code":"buf.Bytes()","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":4014,"end":4023,"code":"buf.Bytes","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":4014,"end":4017,"code":"buf","nodeType":"Identifier","column":0,"line":0,"namePos":4014,"name":"buf","object":null},"sel":{"children":[],"start":4018,"end":4023,"code":"Bytes","nodeType":"Identifier","column":0,"line":0,"namePos":4018,"name":"Bytes","object":null}},"lparen":0,"args":[],"ellipsis":0,"rparen":0}]}],"rbrace":4026}},{"children":[],"start":4087,"end":4286,"code":"func source(lines [][]byte, n int) []byte {\n\tn--\n\tif n \u003c 0 || n \u003e= len(lines) {\n\t\treturn dunno\n\t}\n\treturn bytes.TrimSpace(lines[n])\n}","nodeType":"FunctionDeclaration","column":0,"line":0,"doc":null,"receiver":null,"name":{"children":[],"start":4092,"end":4098,"code":"source","nodeType":"Identifier","column":0,"line":0,"namePos":4092,"name":"source","object":null},"type":{"children":[],"start":4087,"end":4128,"code":"func(lines [][]byte, n int) []byte","nodeType":"FunctionType","column":0,"line":0,"Function":4087,"TypeParams":null,"Params":{"children":[],"start":4098,"end":4121,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":4098,"list":[{"children":[],"start":4099,"end":4113,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":4099,"end":4104,"code":"lines","nodeType":"Identifier","column":0,"line":0,"namePos":4099,"name":"lines","object":null}],"type":{"children":[],"start":4105,"end":4113,"code":"[][]byte","nodeType":"ArrayType","column":0,"line":0,"leftBracket":4105,"length":null,"element":{"children":[],"start":4107,"end":4113,"code":"[]byte","nodeType":"ArrayType","column":0,"line":0,"leftBracket":4107,"length":null,"element":{"children":[],"start":4109,"end":4113,"code":"byte","nodeType":"Identifier","column":0,"line":0,"namePos":4109,"name":"byte","object":null}}},"tag":null,"comment":null},{"children":[],"start":4115,"end":4120,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":4115,"end":4116,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":4115,"name":"n","object":null}],"type":{"children":[],"start":4117,"end":4120,"code":"int","nodeType":"Identifier","column":0,"line":0,"namePos":4117,"name":"int","object":null},"tag":null,"comment":null}],"closing":4120},"Results":{"children":[],"start":4122,"end":4128,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":0,"list":[{"children":[],"start":4122,"end":4128,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":null,"type":{"children":[],"start":4122,"end":4128,"code":"[]byte","nodeType":"ArrayType","column":0,"line":0,"leftBracket":4122,"length":null,"element":{"children":[],"start":4124,"end":4128,"code":"byte","nodeType":"Identifier","column":0,"line":0,"namePos":4124,"name":"byte","object":null}},"tag":null,"comment":null}],"closing":0}},"body":{"children":[],"start":4129,"end":4286,"code":"{\n\tn--\n\tif n \u003c 0 || n \u003e= len(lines) {\n\t\treturn dunno\n\t}\n\treturn bytes.TrimSpace(lines[n])\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":4129,"list":[{"children":[],"start":4132,"end":4135,"code":"n--","nodeType":"IncrementDecrementStatement","column":0,"line":0,"Expression":{"children":[],"start":4132,"end":4133,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":4132,"name":"n","object":null},"TokenPosition":4133,"Token":38},{"children":[],"start":4203,"end":4250,"code":"if n \u003c 0 || n \u003e= len(lines) {\n\treturn dunno\n}","nodeType":"IfStatement","column":0,"line":0,"if":4203,"initialization":null,"condition":{"children":[],"start":4206,"end":4230,"code":"n \u003c 0 || n \u003e= len(lines)","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":4206,"end":4211,"code":"n \u003c 0","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":4206,"end":4207,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":4206,"name":"n","object":null},"opPos":4208,"op":40,"rightExpression":{"children":[],"start":4210,"end":4211,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":4210,"kind":5,"value":"0"}},"opPos":4212,"op":35,"rightExpression":{"children":[],"start":4215,"end":4230,"code":"n \u003e= len(lines)","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":4215,"end":4216,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":4215,"name":"n","object":null},"opPos":4217,"op":46,"rightExpression":{"children":[],"start":4220,"end":4230,"code":"len(lines)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":4220,"end":4223,"code":"len","nodeType":"Identifier","column":0,"line":0,"namePos":4220,"name":"len","object":null},"lparen":0,"args":[{"children":[],"start":4224,"end":4229,"code":"lines","nodeType":"Identifier","column":0,"line":0,"namePos":4224,"name":"lines","object":null}],"ellipsis":0,"rparen":0}}},"body":{"children":[],"start":4231,"end":4250,"code":"{\n\treturn dunno\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":4231,"list":[{"children":[],"start":4235,"end":4247,"code":"return dunno","nodeType":"ReturnStatement","column":0,"line":0,"return":4235,"results":[{"children":[],"start":4242,"end":4247,"code":"dunno","nodeType":"Identifier","column":0,"line":0,"namePos":4242,"name":"dunno","object":null}]}],"rbrace":4249},"else":null},{"children":[],"start":4252,"end":4284,"code":"return bytes.TrimSpace(lines[n])","nodeType":"ReturnStatement","column":0,"line":0,"return":4252,"results":[{"children":[],"start":4259,"end":4284,"code":"bytes.TrimSpace(lines[n])","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":4259,"end":4274,"code":"bytes.TrimSpace","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":4259,"end":4264,"code":"bytes","nodeType":"Identifier","column":0,"line":0,"namePos":4259,"name":"bytes","object":null},"sel":{"children":[],"start":4265,"end":4274,"code":"TrimSpace","nodeType":"Identifier","column":0,"line":0,"namePos":4265,"name":"TrimSpace","object":null}},"lparen":0,"args":[{"children":[],"start":4275,"end":4283,"code":"lines[n]","nodeType":"IndexExpression","column":0,"line":0,"expression":{"children":[],"start":4275,"end":4280,"code":"lines","nodeType":"Identifier","column":0,"line":0,"namePos":4275,"name":"lines","object":null},"leftBracket":4280,"index":{"children":[],"start":4281,"end":4282,"code":"n","nodeType":"Identifier","column":0,"line":0,"namePos":4281,"name":"n","object":null},"rightBracket":4282}],"ellipsis":0,"rparen":0}]}],"rbrace":4285}},{"children":[],"start":4366,"end":5065,"code":"func function(pc uintptr) []byte {\n\tfn := runtime.FuncForPC(pc)\n\tif fn == nil {\n\t\treturn dunno\n\t}\n\tname := []byte(fn.Name())\n\tif lastSlash := bytes.LastIndex(name, slash); lastSlash \u003e= 0 {\n\t\tname = name[lastSlash+1:]\n\t}\n\tif period := bytes.Index(name, dot); period \u003e= 0 {\n\t\tname = name[period+1:]\n\t}\n\tname = bytes.ReplaceAll(name, centerDot, dot)\n\treturn name\n}","nodeType":"FunctionDeclaration","column":0,"line":0,"doc":null,"receiver":null,"name":{"children":[],"start":4371,"end":4379,"code":"function","nodeType":"Identifier","column":0,"line":0,"namePos":4371,"name":"function","object":null},"type":{"children":[],"start":4366,"end":4398,"code":"func(pc uintptr) []byte","nodeType":"FunctionType","column":0,"line":0,"Function":4366,"TypeParams":null,"Params":{"children":[],"start":4379,"end":4391,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":4379,"list":[{"children":[],"start":4380,"end":4390,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":4380,"end":4382,"code":"pc","nodeType":"Identifier","column":0,"line":0,"namePos":4380,"name":"pc","object":null}],"type":{"children":[],"start":4383,"end":4390,"code":"uintptr","nodeType":"Identifier","column":0,"line":0,"namePos":4383,"name":"uintptr","object":null},"tag":null,"comment":null}],"closing":4390},"Results":{"children":[],"start":4392,"end":4398,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":0,"list":[{"children":[],"start":4392,"end":4398,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":null,"type":{"children":[],"start":4392,"end":4398,"code":"[]byte","nodeType":"ArrayType","column":0,"line":0,"leftBracket":4392,"length":null,"element":{"children":[],"start":4394,"end":4398,"code":"byte","nodeType":"Identifier","column":0,"line":0,"namePos":4394,"name":"byte","object":null}},"tag":null,"comment":null}],"closing":0}},"body":{"children":[],"start":4399,"end":5065,"code":"{\n\tfn := runtime.FuncForPC(pc)\n\tif fn == nil {\n\t\treturn dunno\n\t}\n\tname := []byte(fn.Name())\n\tif lastSlash := bytes.LastIndex(name, slash); lastSlash \u003e= 0 {\n\t\tname = name[lastSlash+1:]\n\t}\n\tif period := bytes.Index(name, dot); period \u003e= 0 {\n\t\tname = name[period+1:]\n\t}\n\tname = bytes.ReplaceAll(name, centerDot, dot)\n\treturn name\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":4399,"list":[{"children":[],"start":4402,"end":4429,"code":"fn := runtime.FuncForPC(pc)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":4402,"end":4404,"code":"fn","nodeType":"Identifier","column":0,"line":0,"namePos":4402,"name":"fn","object":null}],"tokenPos":4405,"token":47,"rhs":[{"children":[],"start":4408,"end":4429,"code":"runtime.FuncForPC(pc)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":4408,"end":4425,"code":"runtime.FuncForPC","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":4408,"end":4415,"code":"runtime","nodeType":"Identifier","column":0,"line":0,"namePos":4408,"name":"runtime","object":null},"sel":{"children":[],"start":4416,"end":4425,"code":"FuncForPC","nodeType":"Identifier","column":0,"line":0,"namePos":4416,"name":"FuncForPC","object":null}},"lparen":0,"args":[{"children":[],"start":4426,"end":4428,"code":"pc","nodeType":"Identifier","column":0,"line":0,"namePos":4426,"name":"pc","object":null}],"ellipsis":0,"rparen":0}]},{"children":[],"start":4431,"end":4463,"code":"if fn == nil {\n\treturn dunno\n}","nodeType":"IfStatement","column":0,"line":0,"if":4431,"initialization":null,"condition":{"children":[],"start":4434,"end":4443,"code":"fn == nil","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":4434,"end":4436,"code":"fn","nodeType":"Identifier","column":0,"line":0,"namePos":4434,"name":"fn","object":null},"opPos":4437,"op":39,"rightExpression":{"children":[],"start":4440,"end":4443,"code":"nil","nodeType":"Identifier","column":0,"line":0,"namePos":4440,"name":"nil","object":null}},"body":{"children":[],"start":4444,"end":4463,"code":"{\n\treturn dunno\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":4444,"list":[{"children":[],"start":4448,"end":4460,"code":"return dunno","nodeType":"ReturnStatement","column":0,"line":0,"return":4448,"results":[{"children":[],"start":4455,"end":4460,"code":"dunno","nodeType":"Identifier","column":0,"line":0,"namePos":4455,"name":"dunno","object":null}]}],"rbrace":4462},"else":null},{"children":[],"start":4465,"end":4490,"code":"name := []byte(fn.Name())","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":4465,"end":4469,"code":"name","nodeType":"Identifier","column":0,"line":0,"namePos":4465,"name":"name","object":null}],"tokenPos":4470,"token":47,"rhs":[{"children":[],"start":4473,"end":4490,"code":"[]byte(fn.Name())","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":4473,"end":4479,"code":"[]byte","nodeType":"ArrayType","column":0,"line":0,"leftBracket":4473,"length":null,"element":{"children":[],"start":4475,"end":4479,"code":"byte","nodeType":"Identifier","column":0,"line":0,"namePos":4475,"name":"byte","object":null}},"lparen":0,"args":[{"children":[],"start":4480,"end":4489,"code":"fn.Name()","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":4480,"end":4487,"code":"fn.Name","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":4480,"end":4482,"code":"fn","nodeType":"Identifier","column":0,"line":0,"namePos":4480,"name":"fn","object":null},"sel":{"children":[],"start":4483,"end":4487,"code":"Name","nodeType":"Identifier","column":0,"line":0,"namePos":4483,"name":"Name","object":null}},"lparen":0,"args":[],"ellipsis":0,"rparen":0}],"ellipsis":0,"rparen":0}]},{"children":[],"start":4830,"end":4923,"code":"if lastSlash := bytes.LastIndex(name, slash); lastSlash \u003e= 0 {\n\tname = name[lastSlash+1:]\n}","nodeType":"IfStatement","column":0,"line":0,"if":4830,"initialization":{"children":[],"start":4833,"end":4874,"code":"lastSlash := bytes.LastIndex(name, slash)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":4833,"end":4842,"code":"lastSlash","nodeType":"Identifier","column":0,"line":0,"namePos":4833,"name":"lastSlash","object":null}],"tokenPos":4843,"token":47,"rhs":[{"children":[],"start":4846,"end":4874,"code":"bytes.LastIndex(name, slash)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":4846,"end":4861,"code":"bytes.LastIndex","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":4846,"end":4851,"code":"bytes","nodeType":"Identifier","column":0,"line":0,"namePos":4846,"name":"bytes","object":null},"sel":{"children":[],"start":4852,"end":4861,"code":"LastIndex","nodeType":"Identifier","column":0,"line":0,"namePos":4852,"name":"LastIndex","object":null}},"lparen":0,"args":[{"children":[],"start":4862,"end":4866,"code":"name","nodeType":"Identifier","column":0,"line":0,"namePos":4862,"name":"name","object":null},{"children":[],"start":4868,"end":4873,"code":"slash","nodeType":"Identifier","column":0,"line":0,"namePos":4868,"name":"slash","object":null}],"ellipsis":0,"rparen":0}]},"condition":{"children":[],"start":4876,"end":4890,"code":"lastSlash \u003e= 0","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":4876,"end":4885,"code":"lastSlash","nodeType":"Identifier","column":0,"line":0,"namePos":4876,"name":"lastSlash","object":null},"opPos":4886,"op":46,"rightExpression":{"children":[],"start":4889,"end":4890,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":4889,"kind":5,"value":"0"}},"body":{"children":[],"start":4891,"end":4923,"code":"{\n\tname = name[lastSlash+1:]\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":4891,"list":[{"children":[],"start":4895,"end":4920,"code":"name = name[lastSlash+1:]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":4895,"end":4899,"code":"name","nodeType":"Identifier","column":0,"line":0,"namePos":4895,"name":"name","object":null}],"tokenPos":4900,"token":42,"rhs":[{"children":[],"start":4902,"end":4920,"code":"name[lastSlash+1:]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":4902,"end":4906,"code":"name","nodeType":"Identifier","column":0,"line":0,"namePos":4902,"name":"name","object":null},"leftBracket":4906,"low":{"children":[],"start":4907,"end":4918,"code":"lastSlash + 1","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":4907,"end":4916,"code":"lastSlash","nodeType":"Identifier","column":0,"line":0,"namePos":4907,"name":"lastSlash","object":null},"opPos":4916,"op":12,"rightExpression":{"children":[],"start":4917,"end":4918,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":4917,"kind":5,"value":"1"}},"high":null,"max":null,"slice3":false,"rightBracket":4919}]}],"rbrace":4922},"else":null},{"children":[],"start":4925,"end":5003,"code":"if period := bytes.Index(name, dot); period \u003e= 0 {\n\tname = name[period+1:]\n}","nodeType":"IfStatement","column":0,"line":0,"if":4925,"initialization":{"children":[],"start":4928,"end":4960,"code":"period := bytes.Index(name, dot)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":4928,"end":4934,"code":"period","nodeType":"Identifier","column":0,"line":0,"namePos":4928,"name":"period","object":null}],"tokenPos":4935,"token":47,"rhs":[{"children":[],"start":4938,"end":4960,"code":"bytes.Index(name, dot)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":4938,"end":4949,"code":"bytes.Index","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":4938,"end":4943,"code":"bytes","nodeType":"Identifier","column":0,"line":0,"namePos":4938,"name":"bytes","object":null},"sel":{"children":[],"start":4944,"end":4949,"code":"Index","nodeType":"Identifier","column":0,"line":0,"namePos":4944,"name":"Index","object":null}},"lparen":0,"args":[{"children":[],"start":4950,"end":4954,"code":"name","nodeType":"Identifier","column":0,"line":0,"namePos":4950,"name":"name","object":null},{"children":[],"start":4956,"end":4959,"code":"dot","nodeType":"Identifier","column":0,"line":0,"namePos":4956,"name":"dot","object":null}],"ellipsis":0,"rparen":0}]},"condition":{"children":[],"start":4962,"end":4973,"code":"period \u003e= 0","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":4962,"end":4968,"code":"period","nodeType":"Identifier","column":0,"line":0,"namePos":4962,"name":"period","object":null},"opPos":4969,"op":46,"rightExpression":{"children":[],"start":4972,"end":4973,"code":"0","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":4972,"kind":5,"value":"0"}},"body":{"children":[],"start":4974,"end":5003,"code":"{\n\tname = name[period+1:]\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":4974,"list":[{"children":[],"start":4978,"end":5000,"code":"name = name[period+1:]","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":4978,"end":4982,"code":"name","nodeType":"Identifier","column":0,"line":0,"namePos":4978,"name":"name","object":null}],"tokenPos":4983,"token":42,"rhs":[{"children":[],"start":4985,"end":5000,"code":"name[period+1:]","nodeType":"SliceExpression","column":0,"line":0,"expression":{"children":[],"start":4985,"end":4989,"code":"name","nodeType":"Identifier","column":0,"line":0,"namePos":4985,"name":"name","object":null},"leftBracket":4989,"low":{"children":[],"start":4990,"end":4998,"code":"period + 1","nodeType":"BinaryExpression","column":0,"line":0,"leftExpression":{"children":[],"start":4990,"end":4996,"code":"period","nodeType":"Identifier","column":0,"line":0,"namePos":4990,"name":"period","object":null},"opPos":4996,"op":12,"rightExpression":{"children":[],"start":4997,"end":4998,"code":"1","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":4997,"kind":5,"value":"1"}},"high":null,"max":null,"slice3":false,"rightBracket":4999}]}],"rbrace":5002},"else":null},{"children":[],"start":5005,"end":5050,"code":"name = bytes.ReplaceAll(name, centerDot, dot)","nodeType":"AssignStatement","column":0,"line":0,"lhs":[{"children":[],"start":5005,"end":5009,"code":"name","nodeType":"Identifier","column":0,"line":0,"namePos":5005,"name":"name","object":null}],"tokenPos":5010,"token":42,"rhs":[{"children":[],"start":5012,"end":5050,"code":"bytes.ReplaceAll(name, centerDot, dot)","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":5012,"end":5028,"code":"bytes.ReplaceAll","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":5012,"end":5017,"code":"bytes","nodeType":"Identifier","column":0,"line":0,"namePos":5012,"name":"bytes","object":null},"sel":{"children":[],"start":5018,"end":5028,"code":"ReplaceAll","nodeType":"Identifier","column":0,"line":0,"namePos":5018,"name":"ReplaceAll","object":null}},"lparen":0,"args":[{"children":[],"start":5029,"end":5033,"code":"name","nodeType":"Identifier","column":0,"line":0,"namePos":5029,"name":"name","object":null},{"children":[],"start":5035,"end":5044,"code":"centerDot","nodeType":"Identifier","column":0,"line":0,"namePos":5035,"name":"centerDot","object":null},{"children":[],"start":5046,"end":5049,"code":"dot","nodeType":"Identifier","column":0,"line":0,"namePos":5046,"name":"dot","object":null}],"ellipsis":0,"rparen":0}]},{"children":[],"start":5052,"end":5063,"code":"return name","nodeType":"ReturnStatement","column":0,"line":0,"return":5052,"results":[{"children":[],"start":5059,"end":5063,"code":"name","nodeType":"Identifier","column":0,"line":0,"namePos":5059,"name":"name","object":null}]}],"rbrace":5064}},{"children":[],"start":5126,"end":5207,"code":"func timeFormat(t time.Time) string {\n\treturn t.Format(\"2006/01/02 - 15:04:05\")\n}","nodeType":"FunctionDeclaration","column":0,"line":0,"doc":null,"receiver":null,"name":{"children":[],"start":5131,"end":5141,"code":"timeFormat","nodeType":"Identifier","column":0,"line":0,"namePos":5131,"name":"timeFormat","object":null},"type":{"children":[],"start":5126,"end":5161,"code":"func(t time.Time) string","nodeType":"FunctionType","column":0,"line":0,"Function":5126,"TypeParams":null,"Params":{"children":[],"start":5141,"end":5154,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":5141,"list":[{"children":[],"start":5142,"end":5153,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":[{"children":[],"start":5142,"end":5143,"code":"t","nodeType":"Identifier","column":0,"line":0,"namePos":5142,"name":"t","object":null}],"type":{"children":[],"start":5144,"end":5153,"code":"time.Time","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":5144,"end":5148,"code":"time","nodeType":"Identifier","column":0,"line":0,"namePos":5144,"name":"time","object":null},"sel":{"children":[],"start":5149,"end":5153,"code":"Time","nodeType":"Identifier","column":0,"line":0,"namePos":5149,"name":"Time","object":null}},"tag":null,"comment":null}],"closing":5153},"Results":{"children":[],"start":5155,"end":5161,"code":"","nodeType":"FieldList","column":0,"line":0,"opening":0,"list":[{"children":[],"start":5155,"end":5161,"code":"","nodeType":"Field","column":0,"line":0,"doc":null,"names":null,"type":{"children":[],"start":5155,"end":5161,"code":"string","nodeType":"Identifier","column":0,"line":0,"namePos":5155,"name":"string","object":null},"tag":null,"comment":null}],"closing":0}},"body":{"children":[],"start":5162,"end":5207,"code":"{\n\treturn t.Format(\"2006/01/02 - 15:04:05\")\n}","nodeType":"BlockStatement","column":0,"line":0,"lbrace":5162,"list":[{"children":[],"start":5165,"end":5205,"code":"return t.Format(\"2006/01/02 - 15:04:05\")","nodeType":"ReturnStatement","column":0,"line":0,"return":5165,"results":[{"children":[],"start":5172,"end":5205,"code":"t.Format(\"2006/01/02 - 15:04:05\")","nodeType":"CallExpression","column":0,"line":0,"function":{"children":[],"start":5172,"end":5180,"code":"t.Format","nodeType":"SelectorExpression","column":0,"line":0,"expression":{"children":[],"start":5172,"end":5173,"code":"t","nodeType":"Identifier","column":0,"line":0,"namePos":5172,"name":"t","object":null},"sel":{"children":[],"start":5174,"end":5180,"code":"Format","nodeType":"Identifier","column":0,"line":0,"namePos":5174,"name":"Format","object":null}},"lparen":0,"args":[{"children":[],"start":5181,"end":5204,"code":"\"2006/01/02 - 15:04:05\"","nodeType":"BasicLiteral","column":0,"line":0,"valuePos":5181,"kind":9,"value":"\"2006/01/02 - 15:04:05\""}],"ellipsis":0,"rparen":0}]}],"rbrace":5206}}],"fileStart":1,"fileEnd":5208,"scope":{"outer":null,"objects":null},"imports":[],"unresolved":[],"comments":[],"goVersion":""}